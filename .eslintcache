[{"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/index.js":"1","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/reportWebVitals.js":"2","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/App.js":"3","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/sessions.js":"4","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Principal/Principal.js":"5","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/AdminDashboard/AdminDashboard.js":"6","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/agregarDispositivos/agregarDispositivos.js":"7","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Context/MenuContext.js":"8","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/agregarDispositivos/t.js":"9","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/agregarUsuarios/agregarUsuarios.js":"10","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/LogIn/Login.js":"11","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/Recorrido.js":"12","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Principal/Principal.styles.js":"13","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/agregarUsuarios/t.js":"14","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoMonitor/Monitor.js":"15","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Reportes.js":"16","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Dispositivo.js":"17","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/Mapa.js":"18","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraLateral/BarraLateral.js":"19","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoAdminDashboard/ContenidoAdminDashboard.js":"20","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/Playback.js":"21","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/BarraInferior/BarraInferior.js":"22","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/BarraInferior.js":"23","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraLateralAdmin/BarraLateralAdmin.js":"24","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoAdmin/ContenidoAdmin.js":"25","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraSuperiorAdmin/BarraSuperior.js":"26","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/agregarDispositivos/agregarDispositivos.styles.js":"27","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoAdminDashboard/ContenidoAdminDashboard.styles.js":"28","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/Recorrido.styles.js":"29","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/agregarUsuarios/agregarUsuarios.styles.js":"30","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/LogIn/Login.styles.js":"31","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoMonitor/Online.js":"32","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoMonitor/Offline.js":"33","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoMonitor/Todos.js":"34","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoMonitor/Monitor.styles.js":"35","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/App.styles.js":"36","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/ConfigDispositvos.js":"37","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/cards/TarjetaUsuarios.js":"38","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Notificaciones/Notificaciones.js":"39","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ApiGoogle/ApiGoogle.js":"40","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/cards/TarjetaDashboard.js":"41","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/DetallesAlarma.js":"42","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Preferencias/Preferencias.js":"43","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/MainView/MainView.js":"44","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Mensajes/Mensajes.js":"45","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ModificarPassword/ModificarPassword.js":"46","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/RegistroSesion/RegistroSesion.js":"47","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Reportes.styles.js":"48","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoCuenta/ContenidoCuenta.js":"49","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ManualUsuario/ManualUsuario.js":"50","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ProveedorServicios/ProveedorServicios.js":"51","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/Comportamiento/InformeComp.js":"52","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/EstadisticasOp/DetallesEstadia.js":"53","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/Comportamiento/VisionGral.js":"54","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/ReportesViaje/InformeViaje.js":"55","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/GeoCercas.js":"56","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/EstadisticasOp/DetallesVel.js":"57","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/ACC/InformeRM.js":"58","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/ACC/VisionAcc.js":"59","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/Comportamiento/DetallesComp.js":"60","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/ACC/ReporteAcc.js":"61","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/InfoVehiculo/InfoCombustible.js":"62","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/InfoVehiculo/InfoPresNeu.js":"63","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/InfoVehiculo/TemperatureReport.js":"64","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/ReportesViaje/ReportesViaje.js":"65","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/OBD/InfoDTC.js":"66","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/StatusAlarm/DetailsAlarma.js":"67","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/StatusAlarm/GralAlarma.js":"68","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/StatusAlarm/StatusAlarma.js":"69","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/GeneReportes/GeneReportes.js":"70","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Dispositivo.styles.js":"71","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/OBD/ResCombViaje.js":"72","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoAdmin/ContenidoAdmin.styles.js":"73","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/OBD/DetailsCombViaje.js":"74","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraSuperiorAdmin/BarraSuperior.styles.js":"75","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraLateralAdmin/BarraLateralAdmin.styles.js":"76","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/EstadisticasOp/InfoKilo.js":"77","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/EstadisticasOp/InfoGral.js":"78","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/GeoCercasModal.js":"79","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/GeneReportes/Tarea.js":"80","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/GeneReportes/Buscar.js":"81","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/cards/cards.styles.js":"82","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Mensajes/Mensajes.styles.js":"83","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/GeoCercas.styles.js":"84","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ProveedorServicios/ProveedorServicios.styles.js":"85","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ManualUsuario/ManualUsuario.styles.js":"86","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/MainView/MainView.styles.js":"87","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoCuenta/ContenidoCuenta.styles.js":"88","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ModificarPassword/ModificarPassword.styles.js":"89","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/RegistroSesion/RegistroSesion.styles.js":"90","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Preferencias/Preferencias.styles.js":"91","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ApiGoogle/ApiGoogle.styles.js":"92","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Notificaciones/Notificaciones.styles.js":"93","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/cards/cardsDash.styles.js":"94","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/Mapa.js":"95","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/BarraInferior/GeoCercas.js":"96","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/BarraInferior.styles.js":"97","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/DispositivosModalGeo.js":"98","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/GeoCercasModal.styles.js":"99","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/HorarioComand.js":"100","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/AdminNotify.js":"101","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/GestionLinks.js":"102","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/GestionMan.js":"103","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraLateral/BarraLateral.styles.js":"104","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/BarraInferior/BarraInferior.styles.js":"105","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/Mapa.styles.js":"106","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/ConfigDevice.js":"107","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Compartir/Compartir.js":"108","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/Marcadores/MapIcon.js":"109","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/BarraInferior/GeoCercasModal.js":"110","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigInOut/ConfigInOut.js":"111","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comando.js":"112","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/BarraInferior/GeoCercas.styles.js":"113","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/mantenimiento/HorasMotor.js":"114","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/comandos/HorarioComando.js":"115","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/comandos/Historial.js":"116","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/mantenimiento/MantenKm.js":"117","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/BarraInferior/DispositivosModalGeo.js":"118","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/Combustible.js":"119","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/InfoDispositivo.js":"120","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/InfoInstalacion.js":"121","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/OtraInformacion.js":"122","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/ConfigDevice.styles.js":"123","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Compartir/Compartir.styles.js":"124","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/BarraInferior/GeoCercasModal.styles.js":"125","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Historial.js":"126","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/EnviarComando.js":"127","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigInOut/ConfigInOut.styles.js":"128","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comando.styles.js":"129","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/ConfigAlarma.js":"130","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/Combustible/Deposito.js":"131","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/Combustible/Consumo.js":"132","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/Combustible/Sensor.js":"133","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/Opciones.styles.js":"134","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Parametros.js":"135","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Status.js":"136","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Comandos.js":"137","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Version.js":"138","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Numero.js":"139","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Gprs.js":"140","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Reset.js":"141","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Ubicacion.js":"142","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Restaurar.js":"143","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Apagar.js":"144","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/Combustible/Combustible.styles.js":"145","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Response.styles.js":"146","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Comandos.styles.js":"147","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/Alarms.js":"148","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/DescargarRecorrido.js":"149","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/Spinner.js":"150"},{"size":546,"mtime":1616455932374,"results":"151","hashOfConfig":"152"},{"size":362,"mtime":1616455932374,"results":"153","hashOfConfig":"152"},{"size":1628,"mtime":1634862700954,"results":"154","hashOfConfig":"152"},{"size":0,"mtime":1616455932374,"results":"155","hashOfConfig":"152"},{"size":1599,"mtime":1626383220658,"results":"156","hashOfConfig":"152"},{"size":241,"mtime":1616455931852,"results":"157","hashOfConfig":"152"},{"size":929,"mtime":1622070422965,"results":"158","hashOfConfig":"152"},{"size":1319,"mtime":1640313511868,"results":"159","hashOfConfig":"152"},{"size":140747,"mtime":1624920711146,"results":"160","hashOfConfig":"152"},{"size":1560,"mtime":1622070422966,"results":"161","hashOfConfig":"152"},{"size":10182,"mtime":1636771840880,"results":"162","hashOfConfig":"152"},{"size":1832,"mtime":1634862701499,"results":"163","hashOfConfig":"152"},{"size":1001,"mtime":1625699600441,"results":"164","hashOfConfig":"152"},{"size":22278,"mtime":1624920711147,"results":"165","hashOfConfig":"152"},{"size":7033,"mtime":1624576659657,"results":"166","hashOfConfig":"152"},{"size":12338,"mtime":1638320384158,"results":"167","hashOfConfig":"152"},{"size":1400,"mtime":1626307354916,"results":"168","hashOfConfig":"152"},{"size":2645,"mtime":1634862701473,"results":"169","hashOfConfig":"152"},{"size":41881,"mtime":1638320431456,"results":"170","hashOfConfig":"152"},{"size":1023,"mtime":1624920711145,"results":"171","hashOfConfig":"152"},{"size":8741,"mtime":1634862701474,"results":"172","hashOfConfig":"152"},{"size":5256,"mtime":1634862701455,"results":"173","hashOfConfig":"152"},{"size":8008,"mtime":1640651743555,"results":"174","hashOfConfig":"152"},{"size":4896,"mtime":1617903518801,"results":"175","hashOfConfig":"152"},{"size":807,"mtime":1617903518820,"results":"176","hashOfConfig":"152"},{"size":1531,"mtime":1617903518808,"results":"177","hashOfConfig":"152"},{"size":19319,"mtime":1622070422965,"results":"178","hashOfConfig":"152"},{"size":16606,"mtime":1624920711146,"results":"179","hashOfConfig":"152"},{"size":20060,"mtime":1634862701522,"results":"180","hashOfConfig":"152"},{"size":10673,"mtime":1622070422966,"results":"181","hashOfConfig":"152"},{"size":28394,"mtime":1617047860156,"results":"182","hashOfConfig":"152"},{"size":2605,"mtime":1631857175506,"results":"183","hashOfConfig":"152"},{"size":2609,"mtime":1631857281941,"results":"184","hashOfConfig":"152"},{"size":2437,"mtime":1631857072436,"results":"185","hashOfConfig":"152"},{"size":10151,"mtime":1631857239840,"results":"186","hashOfConfig":"152"},{"size":739,"mtime":1625700605816,"results":"187","hashOfConfig":"152"},{"size":3459,"mtime":1626308502921,"results":"188","hashOfConfig":"152"},{"size":4823,"mtime":1624920711147,"results":"189","hashOfConfig":"152"},{"size":2359,"mtime":1618015463109,"results":"190","hashOfConfig":"152"},{"size":1636,"mtime":1617951914645,"results":"191","hashOfConfig":"152"},{"size":2836,"mtime":1624920711147,"results":"192","hashOfConfig":"152"},{"size":11478,"mtime":1639709857759,"results":"193","hashOfConfig":"152"},{"size":4448,"mtime":1629165759091,"results":"194","hashOfConfig":"152"},{"size":274,"mtime":1619540413146,"results":"195","hashOfConfig":"152"},{"size":341,"mtime":1617864858520,"results":"196","hashOfConfig":"152"},{"size":713,"mtime":1617351761234,"results":"197","hashOfConfig":"152"},{"size":632,"mtime":1617606821476,"results":"198","hashOfConfig":"152"},{"size":16755,"mtime":1639205559384,"results":"199","hashOfConfig":"152"},{"size":2470,"mtime":1618015617517,"results":"200","hashOfConfig":"152"},{"size":361,"mtime":1617434092427,"results":"201","hashOfConfig":"152"},{"size":601,"mtime":1617604368832,"results":"202","hashOfConfig":"152"},{"size":10867,"mtime":1636508785310,"results":"203","hashOfConfig":"152"},{"size":17844,"mtime":1639797191545,"results":"204","hashOfConfig":"152"},{"size":9662,"mtime":1636508903899,"results":"205","hashOfConfig":"152"},{"size":18120,"mtime":1638325924406,"results":"206","hashOfConfig":"152"},{"size":12565,"mtime":1634780189477,"results":"207","hashOfConfig":"152"},{"size":20187,"mtime":1639796943102,"results":"208","hashOfConfig":"152"},{"size":19474,"mtime":1639797552945,"results":"209","hashOfConfig":"152"},{"size":18818,"mtime":1639797365532,"results":"210","hashOfConfig":"152"},{"size":10263,"mtime":1636509019394,"results":"211","hashOfConfig":"152"},{"size":17452,"mtime":1639797463401,"results":"212","hashOfConfig":"152"},{"size":9069,"mtime":1639450498911,"results":"213","hashOfConfig":"152"},{"size":7319,"mtime":1639450570626,"results":"214","hashOfConfig":"152"},{"size":6914,"mtime":1639450658416,"results":"215","hashOfConfig":"152"},{"size":16809,"mtime":1638327784687,"results":"216","hashOfConfig":"152"},{"size":9659,"mtime":1639450422444,"results":"217","hashOfConfig":"152"},{"size":19672,"mtime":1639030925774,"results":"218","hashOfConfig":"152"},{"size":23131,"mtime":1639798357360,"results":"219","hashOfConfig":"152"},{"size":22115,"mtime":1639099602860,"results":"220","hashOfConfig":"152"},{"size":1856,"mtime":1626300746278,"results":"221","hashOfConfig":"152"},{"size":17001,"mtime":1639707013501,"results":"222","hashOfConfig":"152"},{"size":19805,"mtime":1639797694500,"results":"223","hashOfConfig":"152"},{"size":3267,"mtime":1617903518844,"results":"224","hashOfConfig":"152"},{"size":19853,"mtime":1639449687710,"results":"225","hashOfConfig":"152"},{"size":10530,"mtime":1617903518819,"results":"226","hashOfConfig":"152"},{"size":17524,"mtime":1617903518803,"results":"227","hashOfConfig":"152"},{"size":20997,"mtime":1638413404776,"results":"228","hashOfConfig":"152"},{"size":19110,"mtime":1638240283939,"results":"229","hashOfConfig":"152"},{"size":1926,"mtime":1631573444580,"results":"230","hashOfConfig":"152"},{"size":2372,"mtime":1626303984514,"results":"231","hashOfConfig":"152"},{"size":5006,"mtime":1629162340963,"results":"232","hashOfConfig":"152"},{"size":26793,"mtime":1624920711148,"results":"233","hashOfConfig":"152"},{"size":409,"mtime":1617865078940,"results":"234","hashOfConfig":"152"},{"size":11769,"mtime":1640662133935,"results":"235","hashOfConfig":"152"},{"size":1041,"mtime":1617604247737,"results":"236","hashOfConfig":"152"},{"size":690,"mtime":1617434113614,"results":"237","hashOfConfig":"152"},{"size":120,"mtime":1616455931920,"results":"238","hashOfConfig":"152"},{"size":1758,"mtime":1617673637169,"results":"239","hashOfConfig":"152"},{"size":654,"mtime":1621408752737,"results":"240","hashOfConfig":"152"},{"size":485,"mtime":1617606781700,"results":"241","hashOfConfig":"152"},{"size":3788,"mtime":1629165745738,"results":"242","hashOfConfig":"152"},{"size":1817,"mtime":1617952179482,"results":"243","hashOfConfig":"152"},{"size":2652,"mtime":1618015382079,"results":"244","hashOfConfig":"152"},{"size":8984,"mtime":1624920711148,"results":"245","hashOfConfig":"152"},{"size":23396,"mtime":1640229459531,"results":"246","hashOfConfig":"152"},{"size":5977,"mtime":1634862701456,"results":"247","hashOfConfig":"152"},{"size":15457,"mtime":1640651440295,"results":"248","hashOfConfig":"152"},{"size":2870,"mtime":1631856795363,"results":"249","hashOfConfig":"152"},{"size":3778,"mtime":1631856841558,"results":"250","hashOfConfig":"152"},{"size":1835,"mtime":1626310149828,"results":"251","hashOfConfig":"152"},{"size":2858,"mtime":1626309077076,"results":"252","hashOfConfig":"152"},{"size":6991,"mtime":1629163242947,"results":"253","hashOfConfig":"152"},{"size":1839,"mtime":1626310255337,"results":"254","hashOfConfig":"152"},{"size":19412,"mtime":1638320732625,"results":"255","hashOfConfig":"152"},{"size":12766,"mtime":1634862701455,"results":"256","hashOfConfig":"152"},{"size":3151,"mtime":1629502506926,"results":"257","hashOfConfig":"152"},{"size":2301,"mtime":1624667511998,"results":"258","hashOfConfig":"152"},{"size":1211,"mtime":1621461078193,"results":"259","hashOfConfig":"152"},{"size":5758,"mtime":1622675140271,"results":"260","hashOfConfig":"152"},{"size":1926,"mtime":1634862701457,"results":"261","hashOfConfig":"152"},{"size":4664,"mtime":1621475531427,"results":"262","hashOfConfig":"152"},{"size":1220,"mtime":1634862701048,"results":"263","hashOfConfig":"152"},{"size":4722,"mtime":1634862701457,"results":"264","hashOfConfig":"152"},{"size":2614,"mtime":1626331275289,"results":"265","hashOfConfig":"152"},{"size":2438,"mtime":1626330133515,"results":"266","hashOfConfig":"152"},{"size":2600,"mtime":1626330707429,"results":"267","hashOfConfig":"152"},{"size":2511,"mtime":1626330975272,"results":"268","hashOfConfig":"152"},{"size":2870,"mtime":1634862701456,"results":"269","hashOfConfig":"152"},{"size":1419,"mtime":1622446635099,"results":"270","hashOfConfig":"152"},{"size":5455,"mtime":1624920122639,"results":"271","hashOfConfig":"152"},{"size":1654,"mtime":1622013341697,"results":"272","hashOfConfig":"152"},{"size":1583,"mtime":1622012297207,"results":"273","hashOfConfig":"152"},{"size":1173,"mtime":1622012607535,"results":"274","hashOfConfig":"152"},{"size":1598,"mtime":1621466982819,"results":"275","hashOfConfig":"152"},{"size":3778,"mtime":1634862701458,"results":"276","hashOfConfig":"152"},{"size":4281,"mtime":1634862701361,"results":"277","hashOfConfig":"152"},{"size":3160,"mtime":1634862701302,"results":"278","hashOfConfig":"152"},{"size":934,"mtime":1621475636745,"results":"279","hashOfConfig":"152"},{"size":5643,"mtime":1634862701126,"results":"280","hashOfConfig":"152"},{"size":2453,"mtime":1631854595883,"results":"281","hashOfConfig":"152"},{"size":2554,"mtime":1622704975589,"results":"282","hashOfConfig":"152"},{"size":389,"mtime":1622447597373,"results":"283","hashOfConfig":"152"},{"size":3215,"mtime":1622451095054,"results":"284","hashOfConfig":"152"},{"size":3948,"mtime":1631854357921,"results":"285","hashOfConfig":"152"},{"size":4888,"mtime":1634862701248,"results":"286","hashOfConfig":"152"},{"size":5182,"mtime":1634862701250,"results":"287","hashOfConfig":"152"},{"size":798,"mtime":1624584318648,"results":"288","hashOfConfig":"152"},{"size":4588,"mtime":1634862701301,"results":"289","hashOfConfig":"152"},{"size":3627,"mtime":1634862701248,"results":"290","hashOfConfig":"152"},{"size":4843,"mtime":1634862701248,"results":"291","hashOfConfig":"152"},{"size":1808,"mtime":1634862701249,"results":"292","hashOfConfig":"152"},{"size":4968,"mtime":1634862701301,"results":"293","hashOfConfig":"152"},{"size":5472,"mtime":1634862701250,"results":"294","hashOfConfig":"152"},{"size":5413,"mtime":1634862701203,"results":"295","hashOfConfig":"152"},{"size":4674,"mtime":1622704754281,"results":"296","hashOfConfig":"152"},{"size":3705,"mtime":1634862701249,"results":"297","hashOfConfig":"152"},{"size":1773,"mtime":1634862701203,"results":"298","hashOfConfig":"152"},{"size":7822,"mtime":1640054677357,"results":"299","hashOfConfig":"152"},{"size":16363,"mtime":1641350293212,"results":"300","hashOfConfig":"152"},{"size":462,"mtime":1641345002786,"results":"301","hashOfConfig":"152"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},"1443mth",{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"304"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"304"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"304"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"304"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"304"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"304"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"304"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"304"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"304"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"304"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"304"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"304"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"304"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"304"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"304"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"304"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"304"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"304"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"304"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"304"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"304"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"304"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"304"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"304"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"304"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"304"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"304"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"304"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"304"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"304"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"304"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"304"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"304"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"304"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"304"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"304"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"304"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"304"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"304"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"304"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"304"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"304"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"304"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"304"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"304"},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"558","messages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"304"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"304"},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"304"},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"601","messages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"304"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"606","messages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"304"},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"625","messages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"627","messages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"629","messages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"631","usedDeprecatedRules":"304"},{"filePath":"632","messages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"634","messages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636","usedDeprecatedRules":"304"},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"639","messages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"304"},{"filePath":"644","messages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"648","messages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"650","messages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652","usedDeprecatedRules":"304"},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"655"},{"filePath":"656","messages":"657","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/index.js",[],["658","659"],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/reportWebVitals.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/App.js",["660","661","662"],"import React, {useState} from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n//Componentes\nimport Login from './Components/LogIn/Login';\nimport Principal from './Components/Principal/Principal';\nimport AdminDashboard from './Components/AdminDashboard/AdminDashboard';\nimport AgregarDispositivo from './Components/agregarDispositivos/agregarDispositivos';\nimport T from './Components/agregarDispositivos/t';\nimport AgregarUsuario from './Components/agregarUsuarios/agregarUsuarios';\nimport Recorrido from './Components/Recorrido/Recorrido';\n\nimport { getSessionCookie, SessionContext } from './sessions';\nimport {MenuContext} from './Context/MenuContext';\n\n\nfunction App() {\n\n  \n\n  return (\n    <Router>        \n       { /* <s.content_box>\n        <s.menu_izquierdo>\n          <BarraLateral/>\n        </s.menu_izquierdo>\n\n        <s.contenido_derecho>\n          <ContenidoMonitor />\n          <BarraInferior/>\n        </s.contenido_derecho>\n      \n       </s.content_box> */}\n      \n     <Switch>\n        <Route exact={true} path=\"/dealer2/\" component={AdminDashboard} />\n        <Route exact={true} path=\"/recorrido\" component={Recorrido} />\n        <Route exact={true} path=\"/\" component={Login}/>\n        <MenuContext>\n          <Route path=\"/mapa\" component={Principal}/>\n        </MenuContext>\n        <Route exact={true} path=\"/dealer2/adddevice\" component={AgregarDispositivo} />\n        <Route exact={true} path=\"/dealer2/adduser\" component={AgregarUsuario} />\n        <Route exact={true} path=\"/t\" component={T} />\n    </Switch> \n    </Router>\n  );\n}\n\nexport default App;\n\n\n\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/sessions.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Principal/Principal.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/AdminDashboard/AdminDashboard.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/agregarDispositivos/agregarDispositivos.js",["663","664"],"import React , { useState }from 'react';\n\nimport * as sd from './agregarDispositivos.styles';\nimport * as s from '../ContenidoAdminDashboard/ContenidoAdminDashboard.styles';\n\nimport BarraSuperior from '../BarraSuperiorAdmin/BarraSuperior';\nimport ContenidoAdmin from '../ContenidoAdmin/ContenidoAdmin';\n\nimport T from './t';\nimport BarraLateralAdmin from '../BarraLateralAdmin/BarraLateralAdmin';\n\n\n\n\nconst AgregarUsuario = (props) => {\n\n    return(\n        <s.body>\n            <s.app id=\"app\">\n                <s.app_main>\n                    <s.sidebar_container>\n                        <BarraLateralAdmin />\n                    </s.sidebar_container>\n                </s.app_main>\n            </s.app>\n            <s.main_cointainer>\n                <BarraSuperior />\n                <ContenidoAdmin />\n                <T/>\n            </s.main_cointainer>\n        </s.body>          \n    )\n}\n\nexport default AgregarUsuario;","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Context/MenuContext.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/agregarDispositivos/t.js",["665","666","667","668","669","670","671","672"],"import React, {useState, useEffect} from 'react'; \n\nimport * as ri from 'react-icons/all';\n\nimport * as sd from './agregarDispositivos.styles';\nimport * as s from '../ContenidoAdminDashboard/ContenidoAdminDashboard.styles';\n\nimport BarraLateralAdmin from '../BarraLateralAdmin/BarraLateralAdmin';\nimport BarraSuperior from '../BarraSuperiorAdmin/BarraSuperior';\nimport ContenidoAdmin from '../ContenidoAdmin/ContenidoAdmin';\n\n\n\nconst T = (props) => {\n\n    const [devices, setDevices] = useState([\n        {\n          \"Device\": \"Freematics Traccar Edition    RECOMMENDED\",\n          \"Protocol\": \"freematics\",\n          \"Port\": \"5170\"\n        },\n        {\n          \"Device\": \"Freematics ONE+ Model A\",\n          \"Protocol\": \"freematics\",\n          \"Port\": \"5170\"\n        },\n        {\n          \"Device\": \"Freematics ONE+ Model B\",\n          \"Protocol\": \"freematics\",\n          \"Port\": \"5170\"\n        },\n        {\n          \"Device\": \"Freematics ONE+ Model H\",\n          \"Protocol\": \"freematics\",\n          \"Port\": \"5170\"\n        },\n        {\n          \"Device\": \"TK103-2B\",\n          \"Protocol\": \"gps103\",\n          \"Port\": \"5001\"\n        },\n        {\n          \"Device\": \"TK104\",\n          \"Protocol\": \"gps103\",\n          \"Port\": \"5001\"\n        },\n        {\n          \"Device\": \"TK106\",\n          \"Protocol\": \"-\",\n          \"Port\": \"clones\"\n        },\n        {\n          \"Device\": \"GPS-103\",\n          \"Protocol\": \"gps103\",\n          \"Port\": \"5001\"\n        },\n        {\n          \"Device\": \"GPS-103-A\",\n          \"Protocol\": \"gps103\",\n          \"Port\": \"5001\"\n        },\n        {\n          \"Device\": \"TW-MD1101\",\n          \"Protocol\": \"gps103\",\n          \"Port\": \"5001\"\n        },\n        {\n          \"Device\": \"GPS102B\",\n          \"Protocol\": \"gps103\",\n          \"Port\": \"5001\"\n        },\n        {\n          \"Device\": \"GPS104\",\n          \"Protocol\": \"gps103\",\n          \"Port\": \"5001\"\n        },\n        {\n          \"Device\": \"TK110\",\n          \"Protocol\": \"-\",\n          \"Port\": \"clones\"\n        },\n        {\n          \"Device\": \"306A\",\n          \"Protocol\": \"gps103\",\n          \"Port\": \"5001\"\n        },\n        {\n          \"Device\": \"303F\",\n          \"Protocol\": \"gps103\",\n          \"Port\": \"5001\"\n        },\n        {\n          \"Device\": \"TK-102B\",\n          \"Protocol\": \"gps103\",\n          \"Port\": \"5001\"\n        },\n        {\n          \"Device\": \"GPS105B\",\n          \"Protocol\": \"gps103\",\n          \"Port\": \"5001\"\n        },\n        {\n          \"Device\": \"A306\",\n          \"Protocol\": \"gps103\",\n          \"Port\": \"5001\"\n        },\n        {\n          \"Device\": \"GPS303-G\",\n          \"Protocol\": \"gps103\",\n          \"Port\": \"5001\"\n        },\n        {\n          \"Device\": \"EC-546\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"GT02A\",\n          \"Protocol\": \"-\",\n          \"Port\": \"clones\"\n        },\n        {\n          \"Device\": \"TT0024\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"T1024\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"T1080\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"T2024\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"T2124\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"T12\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"T4400\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"T8800\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"T15400\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"TK05\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"TK10\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"TK15\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"TK20\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"T18\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"T18H\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"T16\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"GPS105\",\n          \"Protocol\": \"-\",\n          \"Port\": \"clones\"\n        },\n        {\n          \"Device\": \"P168\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"P169\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"TK206\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"TK207\",\n          \"Protocol\": \"tk103\",\n          \"Port\": \"5002\"\n        },\n        {\n          \"Device\": \"GL100\",\n          \"Protocol\": \"gl100\",\n          \"Port\": \"5003\"\n        },\n        {\n          \"Device\": \"GL100M\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GL200\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GV300N\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GT200\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GT300\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GT500\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GL300\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GL3000W Series\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GL300VC\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GL300W Series\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GL500\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GL505\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GL520\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GT301\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GB100\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GMT100\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GMT200\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GS100\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GV200\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GV300\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GV300VC\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GV300W\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GV500\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GV500VC\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GV50LTA\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GV55\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GV55 Lite\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GV55VC\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GV600W\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GV65\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GV65 Plus\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GV75\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"GV75W\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"Prime AT Plus\",\n          \"Protocol\": \"gl200\",\n          \"Port\": \"5004\"\n        },\n        {\n          \"Device\": \"Gelix\",\n          \"Protocol\": \"t55\",\n          \"Port\": \"5005\"\n        },\n        {\n          \"Device\": \"Gelix-2\",\n          \"Protocol\": \"t55\",\n          \"Port\": \"5005\"\n        },\n        {\n          \"Device\": \"GPS-911(M)\",\n          \"Protocol\": \"t55\",\n          \"Port\": \"5005\"\n        },\n        {\n          \"Device\": \"AVL-900\",\n          \"Protocol\": \"t55\",\n          \"Port\": \"5005\"\n        },\n        {\n          \"Device\": \"AVL-900(R)\",\n          \"Protocol\": \"t55\",\n          \"Port\": \"5005\"\n        },\n        {\n          \"Device\": \"AVL-900(M)\",\n          \"Protocol\": \"t55\",\n          \"Port\": \"5005\"\n        },\n        {\n          \"Device\": \"AVL-901(B)\",\n          \"Protocol\": \"t55\",\n          \"Port\": \"5005\"\n        },\n        {\n          \"Device\": \"AVL-901(C)\",\n          \"Protocol\": \"t55\",\n          \"Port\": \"5005\"\n        },\n        {\n          \"Device\": \"AVL-901(D)\",\n          \"Protocol\": \"t55\",\n          \"Port\": \"5005\"\n        },\n        {\n          \"Device\": \"AVL-921\",\n          \"Protocol\": \"t55\",\n          \"Port\": \"5005\"\n        },\n        {\n          \"Device\": \"CradlePoint IBR600\",\n          \"Protocol\": \"t55\",\n          \"Port\": \"5005\"\n        },\n        {\n          \"Device\": \"Cradlepoint IBR1100\",\n          \"Protocol\": \"t55\",\n          \"Port\": \"5005\"\n        },\n        {\n          \"Device\": \"Aspicore\",\n          \"Protocol\": \"t55\",\n          \"Port\": \"5005\"\n        },\n        {\n          \"Device\": \"Tracker for Traccar\",\n          \"Protocol\": \"t55\",\n          \"Port\": \"5005\"\n        },\n        {\n          \"Device\": \"MultiConnect rCell\",\n          \"Protocol\": \"t55\",\n          \"Port\": \"5005\"\n        },\n        {\n          \"Device\": \"M2M IP Modem F7114\",\n          \"Protocol\": \"t55\",\n          \"Port\": \"5005\"\n        },\n        {\n          \"Device\": \"Datamax\",\n          \"Protocol\": \"t55\",\n          \"Port\": \"5005\"\n        },\n        {\n          \"Device\": \"MA100-1010\",\n          \"Protocol\": \"t55\",\n          \"Port\": \"5005\"\n        },\n        {\n          \"Device\": \"TK101\",\n          \"Protocol\": \"xexun\",\n          \"Port\": \"5006\"\n        },\n        {\n          \"Device\": \"TK102\",\n          \"Protocol\": \"-\",\n          \"Port\": \"clones\"\n        },\n        {\n          \"Device\": \"TK102-2\",\n          \"Protocol\": \"xexun\",\n          \"Port\": \"5006\"\n        },\n        {\n          \"Device\": \"TK103\",\n          \"Protocol\": \"-\",\n          \"Port\": \"clones\"\n        },\n        {\n          \"Device\": \"TK103B\",\n          \"Protocol\": \"-\",\n          \"Port\": \"clones\"\n        },\n        {\n          \"Device\": \"TK103-2\",\n          \"Protocol\": \"xexun\",\n          \"Port\": \"5006\"\n        },\n        {\n          \"Device\": \"XT009\",\n          \"Protocol\": \"xexun\",\n          \"Port\": \"5006\"\n        },\n        {\n          \"Device\": \"XT011\",\n          \"Protocol\": \"xexun\",\n          \"Port\": \"5006\"\n        },\n        {\n          \"Device\": \"TK201\",\n          \"Protocol\": \"xexun\",\n          \"Port\": \"5006\"\n        },\n        {\n          \"Device\": \"TK201-2\",\n          \"Protocol\": \"xexun\",\n          \"Port\": \"5006\"\n        },\n        {\n          \"Device\": \"TK202\",\n          \"Protocol\": \"xexun\",\n          \"Port\": \"5006\"\n        },\n        {\n          \"Device\": \"TK203\",\n          \"Protocol\": \"xexun\",\n          \"Port\": \"5006\"\n        },\n        {\n          \"Device\": \"TK206\",\n          \"Protocol\": \"-\",\n          \"Port\": \"clones\"\n        },\n        {\n          \"Device\": \"XT107\",\n          \"Protocol\": \"xexun\",\n          \"Port\": \"5006\"\n        },\n        {\n          \"Device\": \"TZ-AVL02\",\n          \"Protocol\": \"totem\",\n          \"Port\": \"5007\"\n        },\n        {\n          \"Device\": \"TZ-AVL03\",\n          \"Protocol\": \"totem\",\n          \"Port\": \"5007\"\n        },\n        {\n          \"Device\": \"TZ-AVL05\",\n          \"Protocol\": \"totem\",\n          \"Port\": \"5007\"\n        },\n        {\n          \"Device\": \"TZ-AVL08\",\n          \"Protocol\": \"totem\",\n          \"Port\": \"5007\"\n        },\n        {\n          \"Device\": \"TZ-AVL09\",\n          \"Protocol\": \"totem\",\n          \"Port\": \"5007\"\n        },\n        {\n          \"Device\": \"TZ-AVL10\",\n          \"Protocol\": \"totem\",\n          \"Port\": \"5007\"\n        },\n        {\n          \"Device\": \"TZ-GT08\",\n          \"Protocol\": \"totem\",\n          \"Port\": \"5007\"\n        },\n        {\n          \"Device\": \"TZ-GT09\",\n          \"Protocol\": \"totem\",\n          \"Port\": \"5007\"\n        },\n        {\n          \"Device\": \"TZ-VN06\",\n          \"Protocol\": \"totem\",\n          \"Port\": \"5007\"\n        },\n        {\n          \"Device\": \"AT03\",\n          \"Protocol\": \"totem\",\n          \"Port\": \"5007\"\n        },\n        {\n          \"Device\": \"AT06\",\n          \"Protocol\": \"totem\",\n          \"Port\": \"5007\"\n        },\n        {\n          \"Device\": \"AT06+\",\n          \"Protocol\": \"totem\",\n          \"Port\": \"5007\"\n        },\n        {\n          \"Device\": \"AT07\",\n          \"Protocol\": \"totem\",\n          \"Port\": \"5007\"\n        },\n        {\n          \"Device\": \"AT09\",\n          \"Protocol\": \"totem\",\n          \"Port\": \"5007\"\n        },\n        {\n          \"Device\": \"TZ-AVL201\",\n          \"Protocol\": \"totem\",\n          \"Port\": \"5007\"\n        },\n        {\n          \"Device\": \"Mini MT\",\n          \"Protocol\": \"enfora\",\n          \"Port\": \"5008\"\n        },\n        {\n          \"Device\": \"Enfora GSM2448\",\n          \"Protocol\": \"enfora\",\n          \"Port\": \"5008\"\n        },\n        {\n          \"Device\": \"Enfora MT_4000\",\n          \"Protocol\": \"enfora\",\n          \"Port\": \"5008\"\n        },\n        {\n          \"Device\": \"GT30i\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"GT60\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"VT300\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"VT310\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"VT400\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"GT30\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"GT30X\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"PST-AVL01\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"PT03\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"PT60\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"PT300X\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"PT30\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"GT-110P\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"GT-110K\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"GT-110M\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"GT-110ES\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"GT-110ZS\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"AVL-011\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"VT900\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"P008\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"GT 30\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"CT01\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"CT03\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"CT04\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"CT04-R\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"CT04-X\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"OCT600\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"MT01\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"MT02\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"PT01\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"PT03\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"VT1000\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"GSY007\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"T200\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"iStartek\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"VT310N\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"TK228\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"OST800\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"OCT900\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"OCT900-R\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"OCT800\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"OCT800-D\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"OCT600-CAM\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"OCT600-SG3\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"TZ-GT01\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"VT600\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"Topten MT05\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"Topten MT05S\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"Topten LT02\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"Topten LT03\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"Topten GT08\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"Topten GT08S\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"Topten GT48\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"Topten MT35\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"Topten TK108\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"Topten TK510\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"Topten TK208\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"Topten TK208S\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"Topten TK218\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"Topten TK228\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"Topten TK428\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"Topten PT99\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"Topten PG99\",\n          \"Protocol\": \"meiligao\",\n          \"Port\": \"5009\"\n        },\n        {\n          \"Device\": \"PG88\",\n          \"Protocol\": \"trv\",\n          \"Port\": \"5010\"\n        },\n        {\n          \"Device\": \"S88\",\n          \"Protocol\": \"trv\",\n          \"Port\": \"5010\"\n        },\n        {\n          \"Device\": \"PG22\",\n          \"Protocol\": \"trv\",\n          \"Port\": \"5010\"\n        },\n        {\n          \"Device\": \"S22\",\n          \"Protocol\": \"trv\",\n          \"Port\": \"5010\"\n        },\n        {\n          \"Device\": \"iStartek\",\n          \"Protocol\": \"trv\",\n          \"Port\": \"5010\"\n        },\n        {\n          \"Device\": \"VT206\",\n          \"Protocol\": \"trv\",\n          \"Port\": \"5010\"\n        },\n        {\n          \"Device\": \"PT33\",\n          \"Protocol\": \"trv\",\n          \"Port\": \"5010\"\n        },\n        {\n          \"Device\": \"ST200\",\n          \"Protocol\": \"suntech\",\n          \"Port\": \"5011\"\n        },\n        {\n          \"Device\": \"ST210\",\n          \"Protocol\": \"suntech\",\n          \"Port\": \"5011\"\n        },\n        {\n          \"Device\": \"ST215\",\n          \"Protocol\": \"suntech\",\n          \"Port\": \"5011\"\n        },\n        {\n          \"Device\": \"ST215I\",\n          \"Protocol\": \"suntech\",\n          \"Port\": \"5011\"\n        },\n        {\n          \"Device\": \"ST215E\",\n          \"Protocol\": \"suntech\",\n          \"Port\": \"5011\"\n        },\n        {\n          \"Device\": \"ST240\",\n          \"Protocol\": \"suntech\",\n          \"Port\": \"5011\"\n        },\n        {\n          \"Device\": \"ST230\",\n          \"Protocol\": \"suntech\",\n          \"Port\": \"5011\"\n        },\n        {\n          \"Device\": \"ST900\",\n          \"Protocol\": \"suntech\",\n          \"Port\": \"5011\"\n        },\n        {\n          \"Device\": \"ST910\",\n          \"Protocol\": \"suntech\",\n          \"Port\": \"5011\"\n        },\n        {\n          \"Device\": \"ST-910\",\n          \"Protocol\": \"suntech\",\n          \"Port\": \"5011\"\n        },\n        {\n          \"Device\": \"ST-940\",\n          \"Protocol\": \"suntech\",\n          \"Port\": \"5011\"\n        },\n        {\n          \"Device\": \"Progress 7s\",\n          \"Protocol\": \"progress\",\n          \"Port\": \"5012\"\n        },\n        {\n          \"Device\": \"H02\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"H-02A\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"H-02B\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"TX-2\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"H-06\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"H08\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"GTLT3\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"NT201\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"NT202\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"S31\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"LK109\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"LK106\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"LK208\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"LK206\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"LK310\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"LK206A\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"LK206B\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"MI-G6\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"CC830\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"CCTR\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"CCTR-630\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"AT-18\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"GRTQ\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"LK210\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"PT301\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"VT900\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"G91S\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"LK209C\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"G-T005\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"Incutex TK105\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"RF-V8S\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"CCRT809\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"AT-1\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"LK660\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"MT-1\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"CCTR-622G\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"Amparos S4\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"LK910\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"LK700\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"LK710\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"RF-16V\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"Cantrack-G05\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"Secumore-G05\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"Sinotrack ST-901\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"GTRACK4G\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"XE710\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"XE800\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"TK909\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"XE210\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"XE103\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"XE209A\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"XE209B\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"XE209C\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"XE109\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"XE208\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"GTR-100\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"MV720\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"MV740\",\n          \"Protocol\": \"h02\",\n          \"Port\": \"5013\"\n        },\n        {\n          \"Device\": \"JT600\",\n          \"Protocol\": \"jt600\",\n          \"Port\": \"5014\"\n        },\n        {\n          \"Device\": \"GP4000\",\n          \"Protocol\": \"jt600\",\n          \"Port\": \"5014\"\n        },\n        {\n          \"Device\": \"GP5000\",\n          \"Protocol\": \"jt600\",\n          \"Port\": \"5014\"\n        },\n        {\n          \"Device\": \"GP6000\",\n          \"Protocol\": \"jt600\",\n          \"Port\": \"5014\"\n        },\n        {\n          \"Device\": \"JT700A\",\n          \"Protocol\": \"jt600\",\n          \"Port\": \"5014\"\n        },\n        {\n          \"Device\": \"JT700B\",\n          \"Protocol\": \"jt600\",\n          \"Port\": \"5014\"\n        },\n        {\n          \"Device\": \"JT700C\",\n          \"Protocol\": \"jt600\",\n          \"Port\": \"5014\"\n        },\n        {\n          \"Device\": \"JT700\",\n          \"Protocol\": \"jt600\",\n          \"Port\": \"5014\"\n        },\n        {\n          \"Device\": \"JT701\",\n          \"Protocol\": \"jt600\",\n          \"Port\": \"5014\"\n        },\n        {\n          \"Device\": \"HB-A5\",\n          \"Protocol\": \"huabao\",\n          \"Port\": \"5015\"\n        },\n        {\n          \"Device\": \"G1C\",\n          \"Protocol\": \"huabao\",\n          \"Port\": \"5015\"\n        },\n        {\n          \"Device\": \"JT705\",\n          \"Protocol\": \"huabao\",\n          \"Port\": \"5015\"\n        },\n        {\n          \"Device\": \"ST-902W\",\n          \"Protocol\": \"huabao\",\n          \"Port\": \"5015\"\n        },\n        {\n          \"Device\": \"CCTR 830-4G\",\n          \"Protocol\": \"huabao\",\n          \"Port\": \"5015\"\n        },\n        {\n          \"Device\": \"CCTR-800G\",\n          \"Protocol\": \"huabao\",\n          \"Port\": \"5015\"\n        },\n        {\n          \"Device\": \"ST-901 A+\",\n          \"Protocol\": \"huabao\",\n          \"Port\": \"5015\"\n        },\n        {\n          \"Device\": \"G-420 Padlock\",\n          \"Protocol\": \"huabao\",\n          \"Port\": \"5015\"\n        },\n        {\n          \"Device\": \"OBD2 V20\",\n          \"Protocol\": \"huabao\",\n          \"Port\": \"5015\"\n        },\n        {\n          \"Device\": \"TA09\",\n          \"Protocol\": \"huabao\",\n          \"Port\": \"5015\"\n        },\n        {\n          \"Device\": \"G-300\",\n          \"Protocol\": \"huabao\",\n          \"Port\": \"5015\"\n        },\n        {\n          \"Device\": \"MicTrack B21\",\n          \"Protocol\": \"huabao\",\n          \"Port\": \"5015\"\n        },\n        {\n          \"Device\": \"TK319\",\n          \"Protocol\": \"huabao\",\n          \"Port\": \"5015\"\n        },\n        {\n          \"Device\": \"LT-162\",\n          \"Protocol\": \"huabao\",\n          \"Port\": \"5015\"\n        },\n        {\n          \"Device\": \"DT-700\",\n          \"Protocol\": \"huabao\",\n          \"Port\": \"5015\"\n        },\n        {\n          \"Device\": \"V680\",\n          \"Protocol\": \"v680\",\n          \"Port\": \"5016\"\n        },\n        {\n          \"Device\": \"P10\",\n          \"Protocol\": \"v680\",\n          \"Port\": \"5016\"\n        },\n        {\n          \"Device\": \"HC207\",\n          \"Protocol\": \"v680\",\n          \"Port\": \"5016\"\n        },\n        {\n          \"Device\": \"VT810\",\n          \"Protocol\": \"v680\",\n          \"Port\": \"5016\"\n        },\n        {\n          \"Device\": \"KS168M\",\n          \"Protocol\": \"v680\",\n          \"Port\": \"5016\"\n        },\n        {\n          \"Device\": \"HC06A\",\n          \"Protocol\": \"v680\",\n          \"Port\": \"5016\"\n        },\n        {\n          \"Device\": \"TL201\",\n          \"Protocol\": \"v680\",\n          \"Port\": \"5016\"\n        },\n        {\n          \"Device\": \"TK118\",\n          \"Protocol\": \"v680\",\n          \"Port\": \"5016\"\n        },\n        {\n          \"Device\": \"PT200\",\n          \"Protocol\": \"v680\",\n          \"Port\": \"5016\"\n        },\n        {\n          \"Device\": \"PT350\",\n          \"Protocol\": \"v680\",\n          \"Port\": \"5016\"\n        },\n        {\n          \"Device\": \"TK06A\",\n          \"Protocol\": \"-\",\n          \"Port\": \"clones\"\n        },\n        {\n          \"Device\": \"PT80\",\n          \"Protocol\": \"pt502\",\n          \"Port\": \"5017\"\n        },\n        {\n          \"Device\": \"PT100\",\n          \"Protocol\": \"pt502\",\n          \"Port\": \"5017\"\n        },\n        {\n          \"Device\": \"PT201\",\n          \"Protocol\": \"pt502\",\n          \"Port\": \"5017\"\n        },\n        {\n          \"Device\": \"PT502\",\n          \"Protocol\": \"pt502\",\n          \"Port\": \"5017\"\n        },\n        {\n          \"Device\": \"PT600\",\n          \"Protocol\": \"pt502\",\n          \"Port\": \"5017\"\n        },\n        {\n          \"Device\": \"PT510\",\n          \"Protocol\": \"pt502\",\n          \"Port\": \"5017\"\n        },\n        {\n          \"Device\": \"AnioSmart_A510\",\n          \"Protocol\": \"pt502\",\n          \"Port\": \"5017\"\n        },\n        {\n          \"Device\": \"TR-20\",\n          \"Protocol\": \"tr20\",\n          \"Port\": \"5018\"\n        },\n        {\n          \"Device\": \"Signal S-2115\",\n          \"Protocol\": \"navis\",\n          \"Port\": \"5019\"\n        },\n        {\n          \"Device\": \"Signal S-2117\",\n          \"Protocol\": \"navis\",\n          \"Port\": \"5019\"\n        },\n        {\n          \"Device\": \"CH-4713\",\n          \"Protocol\": \"navis\",\n          \"Port\": \"5019\"\n        },\n        {\n          \"Device\": \"CH-5703\",\n          \"Protocol\": \"navis\",\n          \"Port\": \"5019\"\n        },\n        {\n          \"Device\": \"MT80\",\n          \"Protocol\": \"meitrack\",\n          \"Port\": \"5020\"\n        },\n        {\n          \"Device\": \"MT88\",\n          \"Protocol\": \"meitrack\",\n          \"Port\": \"5020\"\n        },\n        {\n          \"Device\": \"MT80i\",\n          \"Protocol\": \"meitrack\",\n          \"Port\": \"5020\"\n        },\n        {\n          \"Device\": \"MT90\",\n          \"Protocol\": \"meitrack\",\n          \"Port\": \"5020\"\n        },\n        {\n          \"Device\": \"KT90\",\n          \"Protocol\": \"meitrack\",\n          \"Port\": \"5020\"\n        },\n        {\n          \"Device\": \"MVT100\",\n          \"Protocol\": \"meitrack\",\n          \"Port\": \"5020\"\n        },\n        {\n          \"Device\": \"MVT340\",\n          \"Protocol\": \"meitrack\",\n          \"Port\": \"5020\"\n        },\n        {\n          \"Device\": \"MVT380\",\n          \"Protocol\": \"meitrack\",\n          \"Port\": \"5020\"\n        },\n        {\n          \"Device\": \"MVT600\",\n          \"Protocol\": \"meitrack\",\n          \"Port\": \"5020\"\n        },\n        {\n          \"Device\": \"T1\",\n          \"Protocol\": \"meitrack\",\n          \"Port\": \"5020\"\n        },\n        {\n          \"Device\": \"MVT800\",\n          \"Protocol\": \"meitrack\",\n          \"Port\": \"5020\"\n        },\n        {\n          \"Device\": \"T3\",\n          \"Protocol\": \"meitrack\",\n          \"Port\": \"5020\"\n        },\n        {\n          \"Device\": \"TC68\",\n          \"Protocol\": \"meitrack\",\n          \"Port\": \"5020\"\n        },\n        {\n          \"Device\": \"TC68S\",\n          \"Protocol\": \"meitrack\",\n          \"Port\": \"5020\"\n        },\n        {\n          \"Device\": \"T322\",\n          \"Protocol\": \"meitrack\",\n          \"Port\": \"5020\"\n        },\n        {\n          \"Device\": \"T622\",\n          \"Protocol\": \"meitrack\",\n          \"Port\": \"5020\"\n        },\n        {\n          \"Device\": \"P99G\",\n          \"Protocol\": \"meitrack\",\n          \"Port\": \"5020\"\n        },\n        {\n          \"Device\": \"TT8750\",\n          \"Protocol\": \"skypatrol\",\n          \"Port\": \"5021\"\n        },\n        {\n          \"Device\": \"TT8750+\",\n          \"Protocol\": \"skypatrol\",\n          \"Port\": \"5021\"\n        },\n        {\n          \"Device\": \"TT9500\",\n          \"Protocol\": \"skypatrol\",\n          \"Port\": \"5021\"\n        },\n        {\n          \"Device\": \"TT9200\",\n          \"Protocol\": \"skypatrol\",\n          \"Port\": \"5021\"\n        },\n        {\n          \"Device\": \"TT8850\",\n          \"Protocol\": \"skypatrol\",\n          \"Port\": \"5021\"\n        },\n        {\n          \"Device\": \"GSM5108\",\n          \"Protocol\": \"skypatrol\",\n          \"Port\": \"5021\"\n        },\n        {\n          \"Device\": \"GT02\",\n          \"Protocol\": \"gt02\",\n          \"Port\": \"5022\"\n        },\n        {\n          \"Device\": \"TR02\",\n          \"Protocol\": \"gt02\",\n          \"Port\": \"5022\"\n        },\n        {\n          \"Device\": \"GT06\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"GT06N\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"GT09\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"Heacent 908\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"GT03A\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"GT03B\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"GS503\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"ET100\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"GT100\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"GT06D\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"GK301\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"JM01\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"JM08\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"GT02D\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"IB-GT102\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"CRX1\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"JV200\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"TP06A\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"BW08\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"TR06\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"JI09\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"Concox GT300\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"WeTrack 2\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"GT230\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"OBD189\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"ZX612\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"S112U\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"Seeworld\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"G19\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"TW02B\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"EV02\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"G19H\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"G18\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"G19S\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"G17O\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"S20\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"G30\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"JM-VG01U\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"JM-VG02U\",\n          \"Protocol\": \"gt06\",\n          \"Port\": \"5023\"\n        },\n        {\n          \"Device\": \"GPS311A\",\n          \"Protocol\": \"-\",\n          \"Port\": \"clones\"\n        },\n        {\n          \"Device\": \"MT-90\",\n          \"Protocol\": \"megastek\",\n          \"Port\": \"5024\"\n        },\n        {\n          \"Device\": \"MT-100\",\n          \"Protocol\": \"megastek\",\n          \"Port\": \"5024\"\n        },\n        {\n          \"Device\": \"GPT-69\",\n          \"Protocol\": \"megastek\",\n          \"Port\": \"5024\"\n        },\n        {\n          \"Device\": \"GT-89\",\n          \"Protocol\": \"megastek\",\n          \"Port\": \"5024\"\n        },\n        {\n          \"Device\": \"GT-99\",\n          \"Protocol\": \"megastek\",\n          \"Port\": \"5024\"\n        },\n        {\n          \"Device\": \"XT-007\",\n          \"Protocol\": \"megastek\",\n          \"Port\": \"5024\"\n        },\n        {\n          \"Device\": \"GMT-368\",\n          \"Protocol\": \"megastek\",\n          \"Port\": \"5024\"\n        },\n        {\n          \"Device\": \"GVT-369\",\n          \"Protocol\": \"megastek\",\n          \"Port\": \"5024\"\n        },\n        {\n          \"Device\": \"GVT-390\",\n          \"Protocol\": \"megastek\",\n          \"Port\": \"5024\"\n        },\n        {\n          \"Device\": \"GVT-500\",\n          \"Protocol\": \"megastek\",\n          \"Port\": \"5024\"\n        },\n        {\n          \"Device\": \"GVT-510\",\n          \"Protocol\": \"megastek\",\n          \"Port\": \"5024\"\n        },\n        {\n          \"Device\": \"GMT-368SQ\",\n          \"Protocol\": \"megastek\",\n          \"Port\": \"5024\"\n        },\n        {\n          \"Device\": \"XT7\",\n          \"Protocol\": \"megastek\",\n          \"Port\": \"5024\"\n        },\n        {\n          \"Device\": \"GMT368s\",\n          \"Protocol\": \"megastek\",\n          \"Port\": \"5024\"\n        },\n        {\n          \"Device\": \"MT60-X\",\n          \"Protocol\": \"megastek\",\n          \"Port\": \"5024\"\n        },\n        {\n          \"Device\": \"MT-90x\",\n          \"Protocol\": \"megastek\",\n          \"Port\": \"5024\"\n        },\n        {\n          \"Device\": \"MT-60X\",\n          \"Protocol\": \"megastek\",\n          \"Port\": \"5024\"\n        },\n        {\n          \"Device\": \"MT300\",\n          \"Protocol\": \"megastek\",\n          \"Port\": \"5024\"\n        },\n        {\n          \"Device\": \"MT110\",\n          \"Protocol\": \"megastek\",\n          \"Port\": \"5024\"\n        },\n        {\n          \"Device\": \"TD230\",\n          \"Protocol\": \"navigil\",\n          \"Port\": \"5025\"\n        },\n        {\n          \"Device\": \"uTrace03e\",\n          \"Protocol\": \"navigil\",\n          \"Port\": \"5025\"\n        },\n        {\n          \"Device\": \"GpsGate\",\n          \"Protocol\": \"gpsgate\",\n          \"Port\": \"5026\"\n        },\n        {\n          \"Device\": \"FM1100\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FM1110\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FM1010\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FM1120\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FM1202\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FM2100\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FM2200\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FM3001\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FM3200\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FM3612\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FM36M1\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FM4100\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FM4200\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FM5300\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FM6320\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"GH3000\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FM3300\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"CT2000E\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FM1204\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FM3612\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FM3622\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB900\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB920\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMT100\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB001\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB002\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB010\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB020\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB110\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB120\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB122\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB125\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMA110\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMA120\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB202\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB204\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMA202\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMA204\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB630\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB640\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB962\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB964\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"TMT250\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMC001\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMM001\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMC125\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMC130\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMC640\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMM125\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMM130\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMM640\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FM6300\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMU125\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMU126\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMU130\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB130\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB140\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"MSP500\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB003\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"MTB100\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"FMB208\",\n          \"Protocol\": \"teltonika\",\n          \"Port\": \"5027\"\n        },\n        {\n          \"Device\": \"Gruz\",\n          \"Protocol\": \"mta6\",\n          \"Port\": \"5028\"\n        },\n        {\n          \"Device\": \"Personal\",\n          \"Protocol\": \"mta6\",\n          \"Port\": \"5028\"\n        },\n        {\n          \"Device\": \"ZoomBox\",\n          \"Protocol\": \"mta6\",\n          \"Port\": \"5028\"\n        },\n        {\n          \"Device\": \"MPU-01\",\n          \"Protocol\": \"mta6\",\n          \"Port\": \"5028\"\n        },\n        {\n          \"Device\": \"MPU-01 GLONASS\",\n          \"Protocol\": \"mta6\",\n          \"Port\": \"5028\"\n        },\n        {\n          \"Device\": \"MTA-02\",\n          \"Protocol\": \"mta6\",\n          \"Port\": \"5028\"\n        },\n        {\n          \"Device\": \"MTA-02-GLONASS\",\n          \"Protocol\": \"mta6\",\n          \"Port\": \"5028\"\n        },\n        {\n          \"Device\": \"MTA-02-CAM\",\n          \"Protocol\": \"mta6\",\n          \"Port\": \"5028\"\n        },\n        {\n          \"Device\": \"MTA-03\",\n          \"Protocol\": \"mta6\",\n          \"Port\": \"5028\"\n        },\n        {\n          \"Device\": \"MTA-12\",\n          \"Protocol\": \"mta6\",\n          \"Port\": \"5028\"\n        },\n        {\n          \"Device\": \"TZ-AVL19\",\n          \"Protocol\": \"tzone\",\n          \"Port\": \"5029\"\n        },\n        {\n          \"Device\": \"TLT-2F\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"V520\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"TLT-2H\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"TLT-1C\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"V690\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"VSUN3338\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"TLT-3A\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"V580\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"TLT-1B\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"TLT-2K\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"TLT-2N\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"TLT-1F\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"TLT-8A\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"TLT-8B\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"TLT-3A\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"TLT-1D\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"TLT-6C\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"TLT-7B\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"AT-12A\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"MP80\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"MT510\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"MT500\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"MT600\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"MT510-G\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"MT530\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"MT550\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"MP10\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"MP90\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"MT510G\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"MC300\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"MP80\",\n          \"Protocol\": \"tlt2h\",\n          \"Port\": \"5030\"\n        },\n        {\n          \"Device\": \"Syrus GPS\",\n          \"Protocol\": \"taip\",\n          \"Port\": \"5031\"\n        },\n        {\n          \"Device\": \"E-Track\",\n          \"Protocol\": \"taip\",\n          \"Port\": \"5031\"\n        },\n        {\n          \"Device\": \"Sierra\",\n          \"Protocol\": \"taip\",\n          \"Port\": \"5031\"\n        },\n        {\n          \"Device\": \"Lantrix\",\n          \"Protocol\": \"taip\",\n          \"Port\": \"5031\"\n        },\n        {\n          \"Device\": \"Syrus SY2210\",\n          \"Protocol\": \"taip\",\n          \"Port\": \"5031\"\n        },\n        {\n          \"Device\": \"Lantrix T1700\",\n          \"Protocol\": \"taip\",\n          \"Port\": \"5031\"\n        },\n        {\n          \"Device\": \"Peplink Transit Mini\",\n          \"Protocol\": \"taip\",\n          \"Port\": \"5031\"\n        },\n        {\n          \"Device\": \"WondeX VT300\",\n          \"Protocol\": \"wondex\",\n          \"Port\": \"5032\"\n        },\n        {\n          \"Device\": \"WondeX SPT-10\",\n          \"Protocol\": \"wondex\",\n          \"Port\": \"5032\"\n        },\n        {\n          \"Device\": \"TK5000\",\n          \"Protocol\": \"wondex\",\n          \"Port\": \"5032\"\n        },\n        {\n          \"Device\": \"Navixy M7\",\n          \"Protocol\": \"wondex\",\n          \"Port\": \"5032\"\n        },\n        {\n          \"Device\": \"TK5000XL\",\n          \"Protocol\": \"wondex\",\n          \"Port\": \"5032\"\n        },\n        {\n          \"Device\": \"CelloTrack 6M (IP65)\",\n          \"Protocol\": \"cellocator\",\n          \"Port\": \"5033\"\n        },\n        {\n          \"Device\": \"CelloTrack IP67\",\n          \"Protocol\": \"cellocator\",\n          \"Port\": \"5033\"\n        },\n        {\n          \"Device\": \"CelloTrack XT\",\n          \"Protocol\": \"cellocator\",\n          \"Port\": \"5033\"\n        },\n        {\n          \"Device\": \"GalileoSky\",\n          \"Protocol\": \"galileo\",\n          \"Port\": \"5034\"\n        },\n        {\n          \"Device\": \"V-MT001\",\n          \"Protocol\": \"ywt\",\n          \"Port\": \"5035\"\n        },\n        {\n          \"Device\": \"V208\",\n          \"Protocol\": \"ywt\",\n          \"Port\": \"5035\"\n        },\n        {\n          \"Device\": \"TK102 Clone\",\n          \"Protocol\": \"-\",\n          \"Port\": \"clones\"\n        },\n        {\n          \"Device\": \"IntelliTrac X1 Plus\",\n          \"Protocol\": \"intellitrac\",\n          \"Port\": \"5037\"\n        },\n        {\n          \"Device\": \"IntelliTrac X8\",\n          \"Protocol\": \"intellitrac\",\n          \"Port\": \"5037\"\n        },\n        {\n          \"Device\": \"IntelliTrac P1\",\n          \"Protocol\": \"intellitrac\",\n          \"Port\": \"5037\"\n        },\n        {\n          \"Device\": \"GPSMTA\",\n          \"Protocol\": \"gpsmta\",\n          \"Port\": \"5038\"\n        },\n        {\n          \"Device\": \"Wialon IPS\",\n          \"Protocol\": \"wialon\",\n          \"Port\": \"5039\"\n        },\n        {\n          \"Device\": \"MasterKit\",\n          \"Protocol\": \"wialon\",\n          \"Port\": \"5039\"\n        },\n        {\n          \"Device\": \"MasterKit BM8009\",\n          \"Protocol\": \"wialon\",\n          \"Port\": \"5039\"\n        },\n        {\n          \"Device\": \"NeoTech TR_1000\",\n          \"Protocol\": \"wialon\",\n          \"Port\": \"5039\"\n        },\n        {\n          \"Device\": \"Eskort TD-Online\",\n          \"Protocol\": \"wialon\",\n          \"Port\": \"5039\"\n        },\n        {\n          \"Device\": \"CCTR-620\",\n          \"Protocol\": \"carscop\",\n          \"Port\": \"5040\"\n        },\n        {\n          \"Device\": \"CCTR-622\",\n          \"Protocol\": \"carscop\",\n          \"Port\": \"5040\"\n        },\n        {\n          \"Device\": \"CCTR-700\",\n          \"Protocol\": \"carscop\",\n          \"Port\": \"5040\"\n        },\n        {\n          \"Device\": \"CCTR-800\",\n          \"Protocol\": \"carscop\",\n          \"Port\": \"5040\"\n        },\n        {\n          \"Device\": \"CCTR-801\",\n          \"Protocol\": \"carscop\",\n          \"Port\": \"5040\"\n        },\n        {\n          \"Device\": \"CCTR-802\",\n          \"Protocol\": \"carscop\",\n          \"Port\": \"5040\"\n        },\n        {\n          \"Device\": \"CCTR-803\",\n          \"Protocol\": \"carscop\",\n          \"Port\": \"5040\"\n        },\n        {\n          \"Device\": \"CCTR-808\",\n          \"Protocol\": \"carscop\",\n          \"Port\": \"5040\"\n        },\n        {\n          \"Device\": \"CCTR-810\",\n          \"Protocol\": \"carscop\",\n          \"Port\": \"5040\"\n        },\n        {\n          \"Device\": \"CCTR-620+\",\n          \"Protocol\": \"carscop\",\n          \"Port\": \"5040\"\n        },\n        {\n          \"Device\": \"T-104\",\n          \"Protocol\": \"apel\",\n          \"Port\": \"5041\"\n        },\n        {\n          \"Device\": \"T-104PRO\",\n          \"Protocol\": \"apel\",\n          \"Port\": \"5041\"\n        },\n        {\n          \"Device\": \"T-104 GLONASS\",\n          \"Protocol\": \"apel\",\n          \"Port\": \"5041\"\n        },\n        {\n          \"Device\": \"MP2030A\",\n          \"Protocol\": \"manpower\",\n          \"Port\": \"5042\"\n        },\n        {\n          \"Device\": \"MP2030B\",\n          \"Protocol\": \"manpower\",\n          \"Port\": \"5042\"\n        },\n        {\n          \"Device\": \"MP2031A\",\n          \"Protocol\": \"manpower\",\n          \"Port\": \"5042\"\n        },\n        {\n          \"Device\": \"MP2031B\",\n          \"Protocol\": \"manpower\",\n          \"Port\": \"5042\"\n        },\n        {\n          \"Device\": \"MP2031C\",\n          \"Protocol\": \"manpower\",\n          \"Port\": \"5042\"\n        },\n        {\n          \"Device\": \"TR-600\",\n          \"Protocol\": \"globalsat\",\n          \"Port\": \"5043\"\n        },\n        {\n          \"Device\": \"TR-600G\",\n          \"Protocol\": \"globalsat\",\n          \"Port\": \"5043\"\n        },\n        {\n          \"Device\": \"TR-606B\",\n          \"Protocol\": \"globalsat\",\n          \"Port\": \"5043\"\n        },\n        {\n          \"Device\": \"GTR-128/129\",\n          \"Protocol\": \"globalsat\",\n          \"Port\": \"5043\"\n        },\n        {\n          \"Device\": \"TR-206\",\n          \"Protocol\": \"globalsat\",\n          \"Port\": \"5043\"\n        },\n        {\n          \"Device\": \"TR-203\",\n          \"Protocol\": \"globalsat\",\n          \"Port\": \"5043\"\n        },\n        {\n          \"Device\": \"TR-151\",\n          \"Protocol\": \"globalsat\",\n          \"Port\": \"5043\"\n        },\n        {\n          \"Device\": \"TR-151SP\",\n          \"Protocol\": \"globalsat\",\n          \"Port\": \"5043\"\n        },\n        {\n          \"Device\": \"AT1\",\n          \"Protocol\": \"atrack\",\n          \"Port\": \"5044\"\n        },\n        {\n          \"Device\": \"AT1Pro\",\n          \"Protocol\": \"atrack\",\n          \"Port\": \"5044\"\n        },\n        {\n          \"Device\": \"AT5i\",\n          \"Protocol\": \"atrack\",\n          \"Port\": \"5044\"\n        },\n        {\n          \"Device\": \"AU5i\",\n          \"Protocol\": \"atrack\",\n          \"Port\": \"5044\"\n        },\n        {\n          \"Device\": \"AX5\",\n          \"Protocol\": \"atrack\",\n          \"Port\": \"5044\"\n        },\n        {\n          \"Device\": \"AY5i\",\n          \"Protocol\": \"atrack\",\n          \"Port\": \"5044\"\n        },\n        {\n          \"Device\": \"AT3\",\n          \"Protocol\": \"atrack\",\n          \"Port\": \"5044\"\n        },\n        {\n          \"Device\": \"AT5\",\n          \"Protocol\": \"atrack\",\n          \"Port\": \"5044\"\n        },\n        {\n          \"Device\": \"AU5\",\n          \"Protocol\": \"atrack\",\n          \"Port\": \"5044\"\n        },\n        {\n          \"Device\": \"AY5\",\n          \"Protocol\": \"atrack\",\n          \"Port\": \"5044\"\n        },\n        {\n          \"Device\": \"AT1\",\n          \"Protocol\": \"atrack\",\n          \"Port\": \"5044\"\n        },\n        {\n          \"Device\": \"AX5C\",\n          \"Protocol\": \"atrack\",\n          \"Port\": \"5044\"\n        },\n        {\n          \"Device\": \"PT3000\",\n          \"Protocol\": \"pt3000\",\n          \"Port\": \"5045\"\n        },\n        {\n          \"Device\": \"FM-Pro3-R\",\n          \"Protocol\": \"ruptela\",\n          \"Port\": \"5046\"\n        },\n        {\n          \"Device\": \"FM-Tco3\",\n          \"Protocol\": \"ruptela\",\n          \"Port\": \"5046\"\n        },\n        {\n          \"Device\": \"FM-Pro3\",\n          \"Protocol\": \"ruptela\",\n          \"Port\": \"5046\"\n        },\n        {\n          \"Device\": \"FM-Eco3\",\n          \"Protocol\": \"ruptela\",\n          \"Port\": \"5046\"\n        },\n        {\n          \"Device\": \"Trailer Tracker\",\n          \"Protocol\": \"ruptela\",\n          \"Port\": \"5046\"\n        },\n        {\n          \"Device\": \"FM-ECO 4\",\n          \"Protocol\": \"ruptela\",\n          \"Port\": \"5046\"\n        },\n        {\n          \"Device\": \"T8803\",\n          \"Protocol\": \"topflytech\",\n          \"Port\": \"5047\"\n        },\n        {\n          \"Device\": \"T8801\",\n          \"Protocol\": \"topflytech\",\n          \"Port\": \"5047\"\n        },\n        {\n          \"Device\": \"T8901\",\n          \"Protocol\": \"topflytech\",\n          \"Port\": \"5047\"\n        },\n        {\n          \"Device\": \"StarFinder AIRE\",\n          \"Protocol\": \"laipac\",\n          \"Port\": \"5048\"\n        },\n        {\n          \"Device\": \"StarFinder Lite\",\n          \"Protocol\": \"laipac\",\n          \"Port\": \"5048\"\n        },\n        {\n          \"Device\": \"StarFinder Bus\",\n          \"Protocol\": \"laipac\",\n          \"Port\": \"5048\"\n        },\n        {\n          \"Device\": \"S911 Lola\",\n          \"Protocol\": \"laipac\",\n          \"Port\": \"5048\"\n        },\n        {\n          \"Device\": \"S911 Bracelet Locator\",\n          \"Protocol\": \"laipac\",\n          \"Port\": \"5048\"\n        },\n        {\n          \"Device\": \"S911 Bracelet Locator HC\",\n          \"Protocol\": \"laipac\",\n          \"Port\": \"5048\"\n        },\n        {\n          \"Device\": \"S911 Bracelet Locator ST\",\n          \"Protocol\": \"laipac\",\n          \"Port\": \"5048\"\n        },\n        {\n          \"Device\": \"S911 Personal Locator\",\n          \"Protocol\": \"laipac\",\n          \"Port\": \"5048\"\n        },\n        {\n          \"Device\": \"A9\",\n          \"Protocol\": \"aplicom\",\n          \"Port\": \"5049\"\n        },\n        {\n          \"Device\": \"A1 Max\",\n          \"Protocol\": \"aplicom\",\n          \"Port\": \"5049\"\n        },\n        {\n          \"Device\": \"A1 Trax\",\n          \"Protocol\": \"aplicom\",\n          \"Port\": \"5049\"\n        },\n        {\n          \"Device\": \"A1 M2M\",\n          \"Protocol\": \"aplicom\",\n          \"Port\": \"5049\"\n        },\n        {\n          \"Device\": \"A5 GLX\",\n          \"Protocol\": \"aplicom\",\n          \"Port\": \"5049\"\n        },\n        {\n          \"Device\": \"Aplicom C-series\",\n          \"Protocol\": \"aplicom\",\n          \"Port\": \"5049\"\n        },\n        {\n          \"Device\": \"Aplicom Q-series\",\n          \"Protocol\": \"aplicom\",\n          \"Port\": \"5049\"\n        },\n        {\n          \"Device\": \"Omega T600\",\n          \"Protocol\": \"gotop\",\n          \"Port\": \"5050\"\n        },\n        {\n          \"Device\": \"TL007\",\n          \"Protocol\": \"gotop\",\n          \"Port\": \"5050\"\n        },\n        {\n          \"Device\": \"TL201\",\n          \"Protocol\": \"gotop\",\n          \"Port\": \"5050\"\n        },\n        {\n          \"Device\": \"TL206\",\n          \"Protocol\": \"gotop\",\n          \"Port\": \"5050\"\n        },\n        {\n          \"Device\": \"TL218\",\n          \"Protocol\": \"gotop\",\n          \"Port\": \"5050\"\n        },\n        {\n          \"Device\": \"VT108\",\n          \"Protocol\": \"gotop\",\n          \"Port\": \"5050\"\n        },\n        {\n          \"Device\": \"VT1081\",\n          \"Protocol\": \"gotop\",\n          \"Port\": \"5050\"\n        },\n        {\n          \"Device\": \"TP-20\",\n          \"Protocol\": \"gotop\",\n          \"Port\": \"5050\"\n        },\n        {\n          \"Device\": \"EQT-20\",\n          \"Protocol\": \"gotop\",\n          \"Port\": \"5050\"\n        },\n        {\n          \"Device\": \"G-TL-020\",\n          \"Protocol\": \"gotop\",\n          \"Port\": \"5050\"\n        },\n        {\n          \"Device\": \"GP106M\",\n          \"Protocol\": \"gotop\",\n          \"Port\": \"5050\"\n        },\n        {\n          \"Device\": \"Toplovo\",\n          \"Protocol\": \"gotop\",\n          \"Port\": \"5050\"\n        },\n        {\n          \"Device\": \"GC-101\",\n          \"Protocol\": \"sanav\",\n          \"Port\": \"5051\"\n        },\n        {\n          \"Device\": \"CT-24\",\n          \"Protocol\": \"sanav\",\n          \"Port\": \"5051\"\n        },\n        {\n          \"Device\": \"CT-58\",\n          \"Protocol\": \"sanav\",\n          \"Port\": \"5051\"\n        },\n        {\n          \"Device\": \"CT-58A\",\n          \"Protocol\": \"sanav\",\n          \"Port\": \"5051\"\n        },\n        {\n          \"Device\": \"GX-101\",\n          \"Protocol\": \"sanav\",\n          \"Port\": \"5051\"\n        },\n        {\n          \"Device\": \"GS-818\",\n          \"Protocol\": \"sanav\",\n          \"Port\": \"5051\"\n        },\n        {\n          \"Device\": \"MT-101\",\n          \"Protocol\": \"sanav\",\n          \"Port\": \"5051\"\n        },\n        {\n          \"Device\": \"MU-201\",\n          \"Protocol\": \"sanav\",\n          \"Port\": \"5051\"\n        },\n        {\n          \"Device\": \"QG-201\",\n          \"Protocol\": \"sanav\",\n          \"Port\": \"5051\"\n        },\n        {\n          \"Device\": \"M588S\",\n          \"Protocol\": \"gator\",\n          \"Port\": \"5052\"\n        },\n        {\n          \"Device\": \"M528\",\n          \"Protocol\": \"gator\",\n          \"Port\": \"5052\"\n        },\n        {\n          \"Device\": \"M508\",\n          \"Protocol\": \"gator\",\n          \"Port\": \"5052\"\n        },\n        {\n          \"Device\": \"M518\",\n          \"Protocol\": \"gator\",\n          \"Port\": \"5052\"\n        },\n        {\n          \"Device\": \"M588N\",\n          \"Protocol\": \"gator\",\n          \"Port\": \"5052\"\n        },\n        {\n          \"Device\": \"S208\",\n          \"Protocol\": \"gator\",\n          \"Port\": \"5052\"\n        },\n        {\n          \"Device\": \"S228\",\n          \"Protocol\": \"gator\",\n          \"Port\": \"5052\"\n        },\n        {\n          \"Device\": \"M518S\",\n          \"Protocol\": \"gator\",\n          \"Port\": \"5052\"\n        },\n        {\n          \"Device\": \"NR002\",\n          \"Protocol\": \"noran\",\n          \"Port\": \"5053\"\n        },\n        {\n          \"Device\": \"NR006\",\n          \"Protocol\": \"noran\",\n          \"Port\": \"5053\"\n        },\n        {\n          \"Device\": \"NR008\",\n          \"Protocol\": \"noran\",\n          \"Port\": \"5053\"\n        },\n        {\n          \"Device\": \"NR016\",\n          \"Protocol\": \"noran\",\n          \"Port\": \"5053\"\n        },\n        {\n          \"Device\": \"NR024\",\n          \"Protocol\": \"noran\",\n          \"Port\": \"5053\"\n        },\n        {\n          \"Device\": \"NR028\",\n          \"Protocol\": \"noran\",\n          \"Port\": \"5053\"\n        },\n        {\n          \"Device\": \"NR032\",\n          \"Protocol\": \"noran\",\n          \"Port\": \"5053\"\n        },\n        {\n          \"Device\": \"UT01\",\n          \"Protocol\": \"noran\",\n          \"Port\": \"5053\"\n        },\n        {\n          \"Device\": \"UM02\",\n          \"Protocol\": \"noran\",\n          \"Port\": \"5053\"\n        },\n        {\n          \"Device\": \"UT04\",\n          \"Protocol\": \"noran\",\n          \"Port\": \"5053\"\n        },\n        {\n          \"Device\": \"UT03\",\n          \"Protocol\": \"noran\",\n          \"Port\": \"5053\"\n        },\n        {\n          \"Device\": \"UT05\",\n          \"Protocol\": \"noran\",\n          \"Port\": \"5053\"\n        },\n        {\n          \"Device\": \"UT06\",\n          \"Protocol\": \"noran\",\n          \"Port\": \"5053\"\n        },\n        {\n          \"Device\": \"UP102\",\n          \"Protocol\": \"noran\",\n          \"Port\": \"5053\"\n        },\n        {\n          \"Device\": \"M2M-Mini\",\n          \"Protocol\": \"m2m\",\n          \"Port\": \"5054\"\n        },\n        {\n          \"Device\": \"OsmAnd\",\n          \"Protocol\": \"osmand\",\n          \"Port\": \"5055\"\n        },\n        {\n          \"Device\": \"SendLocation\",\n          \"Protocol\": \"osmand\",\n          \"Port\": \"5055\"\n        },\n        {\n          \"Device\": \"Locus Pro Android\",\n          \"Protocol\": \"osmand\",\n          \"Port\": \"5055\"\n        },\n        {\n          \"Device\": \"Custodium\",\n          \"Protocol\": \"osmand\",\n          \"Port\": \"5055\"\n        },\n        {\n          \"Device\": \"Traccar Client\",\n          \"Protocol\": \"osmand\",\n          \"Port\": \"5055\"\n        },\n        {\n          \"Device\": \"ET-01\",\n          \"Protocol\": \"easytrack\",\n          \"Port\": \"5056\"\n        },\n        {\n          \"Device\": \"ET-06\",\n          \"Protocol\": \"easytrack\",\n          \"Port\": \"5056\"\n        },\n        {\n          \"Device\": \"GPS Marker M130\",\n          \"Protocol\": \"gpsmarker\",\n          \"Port\": \"5057\"\n        },\n        {\n          \"Device\": \"GPS Marker M80\",\n          \"Protocol\": \"gpsmarker\",\n          \"Port\": \"5057\"\n        },\n        {\n          \"Device\": \"GPS Marker M70\",\n          \"Protocol\": \"gpsmarker\",\n          \"Port\": \"5057\"\n        },\n        {\n          \"Device\": \"GPS Marker M100\",\n          \"Protocol\": \"gpsmarker\",\n          \"Port\": \"5057\"\n        },\n        {\n          \"Device\": \"GPS Marker M60\",\n          \"Protocol\": \"gpsmarker\",\n          \"Port\": \"5057\"\n        },\n        {\n          \"Device\": \"KG100\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"KG200\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"KG300\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"KC200\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"T360-101A\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"T360-101P\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"T360-101E\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"T360-103\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"T360-106\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"T360-108\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"T360-269\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"T360-269B\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"T360-269JT\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"VT600\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"VT600X\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"VT800\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"AL900\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"VT900X\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"AL-900E\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"STG T100\",\n          \"Protocol\": \"khd\",\n          \"Port\": \"5058\"\n        },\n        {\n          \"Device\": \"Piligrim PL250\",\n          \"Protocol\": \"piligrim\",\n          \"Port\": \"5059\"\n        },\n        {\n          \"Device\": \"Piligrim 6000N\",\n          \"Protocol\": \"piligrim\",\n          \"Port\": \"5059\"\n        },\n        {\n          \"Device\": \"Piligrim Patrol\",\n          \"Protocol\": \"piligrim\",\n          \"Port\": \"5059\"\n        },\n        {\n          \"Device\": \"Piligrim Stealth\",\n          \"Protocol\": \"piligrim\",\n          \"Port\": \"5059\"\n        },\n        {\n          \"Device\": \"Piligrim Tracker-6000\",\n          \"Protocol\": \"piligrim\",\n          \"Port\": \"5059\"\n        },\n        {\n          \"Device\": \"STL060\",\n          \"Protocol\": \"stl060\",\n          \"Port\": \"5060\"\n        },\n        {\n          \"Device\": \"iTrackPro\",\n          \"Protocol\": \"cartrack\",\n          \"Port\": \"5061\"\n        },\n        {\n          \"Device\": \"MiniFinder Pico\",\n          \"Protocol\": \"minifinder\",\n          \"Port\": \"5062\"\n        },\n        {\n          \"Device\": \"MiniFinder Atto\",\n          \"Protocol\": \"minifinder\",\n          \"Port\": \"5062\"\n        },\n        {\n          \"Device\": \"EV_07\",\n          \"Protocol\": \"minifinder\",\n          \"Port\": \"5062\"\n        },\n        {\n          \"Device\": \"EV_07P\",\n          \"Protocol\": \"minifinder\",\n          \"Port\": \"5062\"\n        },\n        {\n          \"Device\": \"EV-601\",\n          \"Protocol\": \"minifinder\",\n          \"Port\": \"5062\"\n        },\n        {\n          \"Device\": \"EV-602\",\n          \"Protocol\": \"minifinder\",\n          \"Port\": \"5062\"\n        },\n        {\n          \"Device\": \"EV-603\",\n          \"Protocol\": \"minifinder\",\n          \"Port\": \"5062\"\n        },\n        {\n          \"Device\": \"EV-606\",\n          \"Protocol\": \"minifinder\",\n          \"Port\": \"5062\"\n        },\n        {\n          \"Device\": \"EV_07P\",\n          \"Protocol\": \"minifinder\",\n          \"Port\": \"5062\"\n        },\n        {\n          \"Device\": \"GPS668\",\n          \"Protocol\": \"minifinder\",\n          \"Port\": \"5062\"\n        },\n        {\n          \"Device\": \"SaR-mini\",\n          \"Protocol\": \"minifinder\",\n          \"Port\": \"5062\"\n        },\n        {\n          \"Device\": \"TE-207\",\n          \"Protocol\": \"minifinder\",\n          \"Port\": \"5062\"\n        },\n        {\n          \"Device\": \"TE200\",\n          \"Protocol\": \"minifinder\",\n          \"Port\": \"5062\"\n        },\n        {\n          \"Device\": \"HI-605X\",\n          \"Protocol\": \"haicom\",\n          \"Port\": \"5063\"\n        },\n        {\n          \"Device\": \"HI-604X\",\n          \"Protocol\": \"haicom\",\n          \"Port\": \"5063\"\n        },\n        {\n          \"Device\": \"HI-603X\",\n          \"Protocol\": \"haicom\",\n          \"Port\": \"5063\"\n        },\n        {\n          \"Device\": \"HI-602X\",\n          \"Protocol\": \"haicom\",\n          \"Port\": \"5063\"\n        },\n        {\n          \"Device\": \"HI-602\",\n          \"Protocol\": \"haicom\",\n          \"Port\": \"5063\"\n        },\n        {\n          \"Device\": \"HI-603\",\n          \"Protocol\": \"haicom\",\n          \"Port\": \"5063\"\n        },\n        {\n          \"Device\": \"HI-604\",\n          \"Protocol\": \"haicom\",\n          \"Port\": \"5063\"\n        },\n        {\n          \"Device\": \"TK115\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"TK116\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"GOT08\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"GOT10\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"GPT06\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"K6\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"K9\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"TK119\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"TK121\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"TK119-3G\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"TK119-T\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"GPT09\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"GPT12\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"GPT12-L\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"GPT26\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"GPT06-3G\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"GPT18\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"K20\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"K30\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"GM06NW\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"WTR1-T\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"Goome\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"TK319-L\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"TK419-4G\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"GPT15\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"ET301\",\n          \"Protocol\": \"eelink\",\n          \"Port\": \"5064\"\n        },\n        {\n          \"Device\": \"BOXoptions+\",\n          \"Protocol\": \"box\",\n          \"Port\": \"5065\"\n        },\n        {\n          \"Device\": \"BOXtracker\",\n          \"Protocol\": \"box\",\n          \"Port\": \"5065\"\n        },\n        {\n          \"Device\": \"BOXsolo\",\n          \"Protocol\": \"box\",\n          \"Port\": \"5065\"\n        },\n        {\n          \"Device\": \"BOX iSpot\",\n          \"Protocol\": \"box\",\n          \"Port\": \"5065\"\n        },\n        {\n          \"Device\": \"Freedom PT-9\",\n          \"Protocol\": \"freedom\",\n          \"Port\": \"5066\"\n        },\n        {\n          \"Device\": \"Freedom PT-10\",\n          \"Protocol\": \"freedom\",\n          \"Port\": \"5066\"\n        },\n        {\n          \"Device\": \"Telic SBC-AVL\",\n          \"Protocol\": \"telic\",\n          \"Port\": \"5067\"\n        },\n        {\n          \"Device\": \"Telic SBC3\",\n          \"Protocol\": \"telic\",\n          \"Port\": \"5067\"\n        },\n        {\n          \"Device\": \"SBC3\",\n          \"Protocol\": \"telic\",\n          \"Port\": \"5067\"\n        },\n        {\n          \"Device\": \"Picotrack\",\n          \"Protocol\": \"telic\",\n          \"Port\": \"5067\"\n        },\n        {\n          \"Device\": \"Picotrack IP69 K\",\n          \"Protocol\": \"telic\",\n          \"Port\": \"5067\"\n        },\n        {\n          \"Device\": \"Picotrack Endurance Primary\",\n          \"Protocol\": \"telic\",\n          \"Port\": \"5067\"\n        },\n        {\n          \"Device\": \"Picotrack Endurance Rechargeable\",\n          \"Protocol\": \"telic\",\n          \"Port\": \"5067\"\n        },\n        {\n          \"Device\": \"Trackbox\",\n          \"Protocol\": \"trackbox\",\n          \"Port\": \"5068\"\n        },\n        {\n          \"Device\": \"84 VT\",\n          \"Protocol\": \"visiontek\",\n          \"Port\": \"5069\"\n        },\n        {\n          \"Device\": \"86 VT\",\n          \"Protocol\": \"visiontek\",\n          \"Port\": \"5069\"\n        },\n        {\n          \"Device\": \"VT87\",\n          \"Protocol\": \"visiontek\",\n          \"Port\": \"5069\"\n        },\n        {\n          \"Device\": \"Orion ET-100\",\n          \"Protocol\": \"orion\",\n          \"Port\": \"5070\"\n        },\n        {\n          \"Device\": \"Orion OBDtrac\",\n          \"Protocol\": \"orion\",\n          \"Port\": \"5070\"\n        },\n        {\n          \"Device\": \"BD-2012\",\n          \"Protocol\": \"orion\",\n          \"Port\": \"5070\"\n        },\n        {\n          \"Device\": \"BD-3112\",\n          \"Protocol\": \"orion\",\n          \"Port\": \"5070\"\n        },\n        {\n          \"Device\": \"SLS-00886\",\n          \"Protocol\": \"riti\",\n          \"Port\": \"5071\"\n        },\n        {\n          \"Device\": \"SLS-012SF\",\n          \"Protocol\": \"riti\",\n          \"Port\": \"5071\"\n        },\n        {\n          \"Device\": \"TYN_886\",\n          \"Protocol\": \"riti\",\n          \"Port\": \"5071\"\n        },\n        {\n          \"Device\": \"T370\",\n          \"Protocol\": \"ulbotech\",\n          \"Port\": \"5072\"\n        },\n        {\n          \"Device\": \"T360\",\n          \"Protocol\": \"ulbotech\",\n          \"Port\": \"5072\"\n        },\n        {\n          \"Device\": \"T303\",\n          \"Protocol\": \"ulbotech\",\n          \"Port\": \"5072\"\n        },\n        {\n          \"Device\": \"T301\",\n          \"Protocol\": \"ulbotech\",\n          \"Port\": \"5072\"\n        },\n        {\n          \"Device\": \"T376\",\n          \"Protocol\": \"ulbotech\",\n          \"Port\": \"5072\"\n        },\n        {\n          \"Device\": \"T373B\",\n          \"Protocol\": \"ulbotech\",\n          \"Port\": \"5072\"\n        },\n        {\n          \"Device\": \"T373A\",\n          \"Protocol\": \"ulbotech\",\n          \"Port\": \"5072\"\n        },\n        {\n          \"Device\": \"T371\",\n          \"Protocol\": \"ulbotech\",\n          \"Port\": \"5072\"\n        },\n        {\n          \"Device\": \"T366\",\n          \"Protocol\": \"ulbotech\",\n          \"Port\": \"5072\"\n        },\n        {\n          \"Device\": \"T363B\",\n          \"Protocol\": \"ulbotech\",\n          \"Port\": \"5072\"\n        },\n        {\n          \"Device\": \"T363A\",\n          \"Protocol\": \"ulbotech\",\n          \"Port\": \"5072\"\n        },\n        {\n          \"Device\": \"T361\",\n          \"Protocol\": \"ulbotech\",\n          \"Port\": \"5072\"\n        },\n        {\n          \"Device\": \"T23\",\n          \"Protocol\": \"tramigo\",\n          \"Port\": \"5073\"\n        },\n        {\n          \"Device\": \"TR-900\",\n          \"Protocol\": \"tr900\",\n          \"Port\": \"5074\"\n        },\n        {\n          \"Device\": \"NEO1\",\n          \"Protocol\": \"tr900\",\n          \"Port\": \"5074\"\n        },\n        {\n          \"Device\": \"NEO2\",\n          \"Protocol\": \"tr900\",\n          \"Port\": \"5074\"\n        },\n        {\n          \"Device\": \"Ardi 01\",\n          \"Protocol\": \"ardi01\",\n          \"Port\": \"5075\"\n        },\n        {\n          \"Device\": \"XT013\",\n          \"Protocol\": \"xt013\",\n          \"Port\": \"5076\"\n        },\n        {\n          \"Device\": \"AutoFon D\",\n          \"Protocol\": \"autofon\",\n          \"Port\": \"5077\"\n        },\n        {\n          \"Device\": \"AutoFon SE\",\n          \"Protocol\": \"autofon\",\n          \"Port\": \"5077\"\n        },\n        {\n          \"Device\": \"AutoFon SE+\",\n          \"Protocol\": \"autofon\",\n          \"Port\": \"5077\"\n        },\n        {\n          \"Device\": \"StarLine M10\",\n          \"Protocol\": \"autofon\",\n          \"Port\": \"5077\"\n        },\n        {\n          \"Device\": \"StarLine M11\",\n          \"Protocol\": \"autofon\",\n          \"Port\": \"5077\"\n        },\n        {\n          \"Device\": \"StarLine M16\",\n          \"Protocol\": \"autofon\",\n          \"Port\": \"5077\"\n        },\n        {\n          \"Device\": \"StarLine M17\",\n          \"Protocol\": \"autofon\",\n          \"Port\": \"5077\"\n        },\n        {\n          \"Device\": \"G3A\",\n          \"Protocol\": \"gosafe\",\n          \"Port\": \"5078\"\n        },\n        {\n          \"Device\": \"G3S\",\n          \"Protocol\": \"gosafe\",\n          \"Port\": \"5078\"\n        },\n        {\n          \"Device\": \"G6S\",\n          \"Protocol\": \"gosafe\",\n          \"Port\": \"5078\"\n        },\n        {\n          \"Device\": \"G1S\",\n          \"Protocol\": \"gosafe\",\n          \"Port\": \"5078\"\n        },\n        {\n          \"Device\": \"G737\",\n          \"Protocol\": \"gosafe\",\n          \"Port\": \"5078\"\n        },\n        {\n          \"Device\": \"G2P\",\n          \"Protocol\": \"gosafe\",\n          \"Port\": \"5078\"\n        },\n        {\n          \"Device\": \"G717\",\n          \"Protocol\": \"gosafe\",\n          \"Port\": \"5078\"\n        },\n        {\n          \"Device\": \"G777\",\n          \"Protocol\": \"gosafe\",\n          \"Port\": \"5078\"\n        },\n        {\n          \"Device\": \"G91I\",\n          \"Protocol\": \"gosafe\",\n          \"Port\": \"5078\"\n        },\n        {\n          \"Device\": \"G79\",\n          \"Protocol\": \"gosafe\",\n          \"Port\": \"5078\"\n        },\n        {\n          \"Device\": \"G797\",\n          \"Protocol\": \"gosafe\",\n          \"Port\": \"5078\"\n        },\n        {\n          \"Device\": \"G797W\",\n          \"Protocol\": \"gosafe\",\n          \"Port\": \"5078\"\n        },\n        {\n          \"Device\": \"GS16\",\n          \"Protocol\": \"gosafe\",\n          \"Port\": \"5078\"\n        },\n        {\n          \"Device\": \"BCE FM Light\",\n          \"Protocol\": \"bce\",\n          \"Port\": \"5080\"\n        },\n        {\n          \"Device\": \"BCE FM Light+\",\n          \"Protocol\": \"bce\",\n          \"Port\": \"5080\"\n        },\n        {\n          \"Device\": \"BCE FM Blue\",\n          \"Protocol\": \"bce\",\n          \"Port\": \"5080\"\n        },\n        {\n          \"Device\": \"BCE FM Blue+\",\n          \"Protocol\": \"bce\",\n          \"Port\": \"5080\"\n        },\n        {\n          \"Device\": \"FM 500Q\",\n          \"Protocol\": \"bce\",\n          \"Port\": \"5080\"\n        },\n        {\n          \"Device\": \"XT-2000G\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-2060G\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-2050C\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-2150\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-2150G\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-2160G\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-2150C\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-3200\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-4500G\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-4560G\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-4550C\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-4700\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-4760\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-4750C\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-4860G\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-4850C\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-5000\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-5060\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-5050C\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-6200\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"XT-6260\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"ST7200\",\n          \"Protocol\": \"xirgo\",\n          \"Port\": \"5081\"\n        },\n        {\n          \"Device\": \"ATU-620\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-1100 Series\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"TTU-700 Series\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"TTU-1200 Series\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"TTU-2820 Series\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-200 Series\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-300 Series\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-328\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-400 Series\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-700 Series\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-800 Series\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-900 Series\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-1100 Series\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-1200 Series\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-2000 Series\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-2100 Series\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-2600 Series\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-2620\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-2700 Series\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-2720\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-3030\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-4200 Series\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-4520 Series\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"LMU-5000 Series\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"MDT-7\",\n          \"Protocol\": \"calamp\",\n          \"Port\": \"5082\"\n        },\n        {\n          \"Device\": \"MTX-Tunnel GPS\",\n          \"Protocol\": \"mtx\",\n          \"Port\": \"5083\"\n        },\n        {\n          \"Device\": \"DS520\",\n          \"Protocol\": \"tytan\",\n          \"Port\": \"5084\"\n        },\n        {\n          \"Device\": \"DS530\",\n          \"Protocol\": \"tytan\",\n          \"Port\": \"5084\"\n        },\n        {\n          \"Device\": \"DS540\",\n          \"Protocol\": \"tytan\",\n          \"Port\": \"5084\"\n        },\n        {\n          \"Device\": \"TZ-AVL301\",\n          \"Protocol\": \"avl301\",\n          \"Port\": \"5085\"\n        },\n        {\n          \"Device\": \"IDD-213G\",\n          \"Protocol\": \"castel\",\n          \"Port\": \"5086\"\n        },\n        {\n          \"Device\": \"IDD-212GL\",\n          \"Protocol\": \"castel\",\n          \"Port\": \"5086\"\n        },\n        {\n          \"Device\": \"IDD-212B\",\n          \"Protocol\": \"castel\",\n          \"Port\": \"5086\"\n        },\n        {\n          \"Device\": \"IDD-213T\",\n          \"Protocol\": \"castel\",\n          \"Port\": \"5086\"\n        },\n        {\n          \"Device\": \"IDD-213N/E\",\n          \"Protocol\": \"castel\",\n          \"Port\": \"5086\"\n        },\n        {\n          \"Device\": \"IDD-218G\",\n          \"Protocol\": \"castel\",\n          \"Port\": \"5086\"\n        },\n        {\n          \"Device\": \"HT-196R\",\n          \"Protocol\": \"castel\",\n          \"Port\": \"5086\"\n        },\n        {\n          \"Device\": \"HT-192\",\n          \"Protocol\": \"castel\",\n          \"Port\": \"5086\"\n        },\n        {\n          \"Device\": \"MPIP-618\",\n          \"Protocol\": \"castel\",\n          \"Port\": \"5086\"\n        },\n        {\n          \"Device\": \"MPIP-619\",\n          \"Protocol\": \"castel\",\n          \"Port\": \"5086\"\n        },\n        {\n          \"Device\": \"MPIP-620\",\n          \"Protocol\": \"castel\",\n          \"Port\": \"5086\"\n        },\n        {\n          \"Device\": \"PT-718\",\n          \"Protocol\": \"castel\",\n          \"Port\": \"5086\"\n        },\n        {\n          \"Device\": \"PT-690\",\n          \"Protocol\": \"castel\",\n          \"Port\": \"5086\"\n        },\n        {\n          \"Device\": \"SAT-802\",\n          \"Protocol\": \"castel\",\n          \"Port\": \"5086\"\n        },\n        {\n          \"Device\": \"MXT-142\",\n          \"Protocol\": \"mxt\",\n          \"Port\": \"5087\"\n        },\n        {\n          \"Device\": \"MTC-700\",\n          \"Protocol\": \"mxt\",\n          \"Port\": \"5087\"\n        },\n        {\n          \"Device\": \"MTC-780\",\n          \"Protocol\": \"mxt\",\n          \"Port\": \"5087\"\n        },\n        {\n          \"Device\": \"MXT-140\",\n          \"Protocol\": \"mxt\",\n          \"Port\": \"5087\"\n        },\n        {\n          \"Device\": \"MXT-141\",\n          \"Protocol\": \"mxt\",\n          \"Port\": \"5087\"\n        },\n        {\n          \"Device\": \"IDP-780\",\n          \"Protocol\": \"mxt\",\n          \"Port\": \"5087\"\n        },\n        {\n          \"Device\": \"MXT-100\",\n          \"Protocol\": \"mxt\",\n          \"Port\": \"5087\"\n        },\n        {\n          \"Device\": \"MXT-101\",\n          \"Protocol\": \"mxt\",\n          \"Port\": \"5087\"\n        },\n        {\n          \"Device\": \"MX-100\",\n          \"Protocol\": \"mxt\",\n          \"Port\": \"5087\"\n        },\n        {\n          \"Device\": \"TD-50\",\n          \"Protocol\": \"mxt\",\n          \"Port\": \"5087\"\n        },\n        {\n          \"Device\": \"WT-110\",\n          \"Protocol\": \"mxt\",\n          \"Port\": \"5087\"\n        },\n        {\n          \"Device\": \"TD-60\",\n          \"Protocol\": \"mxt\",\n          \"Port\": \"5087\"\n        },\n        {\n          \"Device\": \"G-100\",\n          \"Protocol\": \"mxt\",\n          \"Port\": \"5087\"\n        },\n        {\n          \"Device\": \"i-MXT\",\n          \"Protocol\": \"mxt\",\n          \"Port\": \"5087\"\n        },\n        {\n          \"Device\": \"Cityeasy 520\",\n          \"Protocol\": \"cityeasy\",\n          \"Port\": \"5088\"\n        },\n        {\n          \"Device\": \"Cityeasy 009\",\n          \"Protocol\": \"cityeasy\",\n          \"Port\": \"5088\"\n        },\n        {\n          \"Device\": \"Cityeasy 006\",\n          \"Protocol\": \"cityeasy\",\n          \"Port\": \"5088\"\n        },\n        {\n          \"Device\": \"Cityeasy 007\",\n          \"Protocol\": \"cityeasy\",\n          \"Port\": \"5088\"\n        },\n        {\n          \"Device\": \"Cityeasy 202\",\n          \"Protocol\": \"cityeasy\",\n          \"Port\": \"5088\"\n        },\n        {\n          \"Device\": \"Cityeasy 306\",\n          \"Protocol\": \"cityeasy\",\n          \"Port\": \"5088\"\n        },\n        {\n          \"Device\": \"Cityeasy 100\",\n          \"Protocol\": \"cityeasy\",\n          \"Port\": \"5088\"\n        },\n        {\n          \"Device\": \"Cityeasy 200\",\n          \"Protocol\": \"cityeasy\",\n          \"Port\": \"5088\"\n        },\n        {\n          \"Device\": \"Cityeasy 302\",\n          \"Protocol\": \"cityeasy\",\n          \"Port\": \"5088\"\n        },\n        {\n          \"Device\": \"Cityeasy 008\",\n          \"Protocol\": \"cityeasy\",\n          \"Port\": \"5088\"\n        },\n        {\n          \"Device\": \"Cityeasy 201\",\n          \"Protocol\": \"cityeasy\",\n          \"Port\": \"5088\"\n        },\n        {\n          \"Device\": \"S101+\",\n          \"Protocol\": \"aquila\",\n          \"Port\": \"5089\"\n        },\n        {\n          \"Device\": \"S101\",\n          \"Protocol\": \"aquila\",\n          \"Port\": \"5089\"\n        },\n        {\n          \"Device\": \"U101V1+\",\n          \"Protocol\": \"aquila\",\n          \"Port\": \"5089\"\n        },\n        {\n          \"Device\": \"U101\",\n          \"Protocol\": \"aquila\",\n          \"Port\": \"5089\"\n        },\n        {\n          \"Device\": \"U101v1\",\n          \"Protocol\": \"aquila\",\n          \"Port\": \"5089\"\n        },\n        {\n          \"Device\": \"MeSafe\",\n          \"Protocol\": \"aquila\",\n          \"Port\": \"5089\"\n        },\n        {\n          \"Device\": \"Stay Safe\",\n          \"Protocol\": \"aquila\",\n          \"Port\": \"5089\"\n        },\n        {\n          \"Device\": \"Lommy Pro\",\n          \"Protocol\": \"flextrack\",\n          \"Port\": \"5090\"\n        },\n        {\n          \"Device\": \"Lommy Personal\",\n          \"Protocol\": \"flextrack\",\n          \"Port\": \"5090\"\n        },\n        {\n          \"Device\": \"Lommy Eye\",\n          \"Protocol\": \"flextrack\",\n          \"Port\": \"5090\"\n        },\n        {\n          \"Device\": \"BlackKite Fleet\",\n          \"Protocol\": \"blackkite\",\n          \"Port\": \"5091\"\n        },\n        {\n          \"Device\": \"BK-FLT-P1\",\n          \"Protocol\": \"blackkite\",\n          \"Port\": \"5091\"\n        },\n        {\n          \"Device\": \"ADM100\",\n          \"Protocol\": \"adm\",\n          \"Port\": \"5092\"\n        },\n        {\n          \"Device\": \"ADM101\",\n          \"Protocol\": \"adm\",\n          \"Port\": \"5092\"\n        },\n        {\n          \"Device\": \"ADM300\",\n          \"Protocol\": \"adm\",\n          \"Port\": \"5092\"\n        },\n        {\n          \"Device\": \"ADM700\",\n          \"Protocol\": \"adm\",\n          \"Port\": \"5092\"\n        },\n        {\n          \"Device\": \"ADM700 3G\",\n          \"Protocol\": \"adm\",\n          \"Port\": \"5092\"\n        },\n        {\n          \"Device\": \"ADM703 3G\",\n          \"Protocol\": \"adm\",\n          \"Port\": \"5092\"\n        },\n        {\n          \"Device\": \"ADM710\",\n          \"Protocol\": \"adm\",\n          \"Port\": \"5092\"\n        },\n        {\n          \"Device\": \"ADM007\",\n          \"Protocol\": \"adm\",\n          \"Port\": \"5092\"\n        },\n        {\n          \"Device\": \"ADM333\",\n          \"Protocol\": \"adm\",\n          \"Port\": \"5092\"\n        },\n        {\n          \"Device\": \"JM09\",\n          \"Protocol\": \"watch\",\n          \"Port\": \"5093\"\n        },\n        {\n          \"Device\": \"TK STAR STICK\",\n          \"Protocol\": \"watch\",\n          \"Port\": \"5093\"\n        },\n        {\n          \"Device\": \"A9 GPS tracker\",\n          \"Protocol\": \"watch\",\n          \"Port\": \"5093\"\n        },\n        {\n          \"Device\": \"T8S\",\n          \"Protocol\": \"watch\",\n          \"Port\": \"5093\"\n        },\n        {\n          \"Device\": \"Astro 120\",\n          \"Protocol\": \"watch\",\n          \"Port\": \"5093\"\n        },\n        {\n          \"Device\": \"RomboGPS\",\n          \"Protocol\": \"watch\",\n          \"Port\": \"5093\"\n        },\n        {\n          \"Device\": \"TK-905\",\n          \"Protocol\": \"watch\",\n          \"Port\": \"5093\"\n        },\n        {\n          \"Device\": \"TK915\",\n          \"Protocol\": \"watch\",\n          \"Port\": \"5093\"\n        },\n        {\n          \"Device\": \"RF-V47\",\n          \"Protocol\": \"watch\",\n          \"Port\": \"5093\"\n        },\n        {\n          \"Device\": \"TKStar TK935\",\n          \"Protocol\": \"watch\",\n          \"Port\": \"5093\"\n        },\n        {\n          \"Device\": \"T8808\",\n          \"Protocol\": \"t800x\",\n          \"Port\": \"5094\"\n        },\n        {\n          \"Device\": \"T8803 PRO\",\n          \"Protocol\": \"t800x\",\n          \"Port\": \"5094\"\n        },\n        {\n          \"Device\": \"T8806\",\n          \"Protocol\": \"t800x\",\n          \"Port\": \"5094\"\n        },\n        {\n          \"Device\": \"T8805\",\n          \"Protocol\": \"t800x\",\n          \"Port\": \"5094\"\n        },\n        {\n          \"Device\": \"T8603\",\n          \"Protocol\": \"t800x\",\n          \"Port\": \"5094\"\n        },\n        {\n          \"Device\": \"T800X\",\n          \"Protocol\": \"t800x\",\n          \"Port\": \"5094\"\n        },\n        {\n          \"Device\": \"T880X\",\n          \"Protocol\": \"t800x\",\n          \"Port\": \"5094\"\n        },\n        {\n          \"Device\": \"U-Pro mini\",\n          \"Protocol\": \"upro\",\n          \"Port\": \"5095\"\n        },\n        {\n          \"Device\": \"AURO Comfort 1060\",\n          \"Protocol\": \"auro\",\n          \"Port\": \"5096\"\n        },\n        {\n          \"Device\": \"Disha 9310\",\n          \"Protocol\": \"disha\",\n          \"Port\": \"5097\"\n        },\n        {\n          \"Device\": \"Disha 9320\",\n          \"Protocol\": \"disha\",\n          \"Port\": \"5097\"\n        },\n        {\n          \"Device\": \"Disha 9330\",\n          \"Protocol\": \"disha\",\n          \"Port\": \"5097\"\n        },\n        {\n          \"Device\": \"TD 300\",\n          \"Protocol\": \"disha\",\n          \"Port\": \"5097\"\n        },\n        {\n          \"Device\": \"VT100\",\n          \"Protocol\": \"thinkrace\",\n          \"Port\": \"5098\"\n        },\n        {\n          \"Device\": \"PathAway\",\n          \"Protocol\": \"pathaway\",\n          \"Port\": \"5099\"\n        },\n        {\n          \"Device\": \"ARNAVI\",\n          \"Protocol\": \"arnavi\",\n          \"Port\": \"5100\"\n        },\n        {\n          \"Device\": \"СН-5707\",\n          \"Protocol\": \"nvs\",\n          \"Port\": \"5101\"\n        },\n        {\n          \"Device\": \"NVS-RTK-M\",\n          \"Protocol\": \"nvs\",\n          \"Port\": \"5101\"\n        },\n        {\n          \"Device\": \"Kenji KJ-8501\",\n          \"Protocol\": \"kenji\",\n          \"Port\": \"5102\"\n        },\n        {\n          \"Device\": \"AT200\",\n          \"Protocol\": \"astra\",\n          \"Port\": \"5103\"\n        },\n        {\n          \"Device\": \"Homtecs H20\",\n          \"Protocol\": \"homtecs\",\n          \"Port\": \"5104\"\n        },\n        {\n          \"Device\": \"Fox Easy AVL\",\n          \"Protocol\": \"fox\",\n          \"Port\": \"5105\"\n        },\n        {\n          \"Device\": \"Fox Lite AVL\",\n          \"Protocol\": \"fox\",\n          \"Port\": \"5105\"\n        },\n        {\n          \"Device\": \"Fox Advanced AVL\",\n          \"Protocol\": \"fox\",\n          \"Port\": \"5105\"\n        },\n        {\n          \"Device\": \"GNX-2\",\n          \"Protocol\": \"gnx\",\n          \"Port\": \"5106\"\n        },\n        {\n          \"Device\": \"GNX-3\",\n          \"Protocol\": \"gnx\",\n          \"Port\": \"5106\"\n        },\n        {\n          \"Device\": \"RX-9\",\n          \"Protocol\": \"arknav\",\n          \"Port\": \"5107\"\n        },\n        {\n          \"Device\": \"RX-8W\",\n          \"Protocol\": \"arknav\",\n          \"Port\": \"5107\"\n        },\n        {\n          \"Device\": \"RV-8\",\n          \"Protocol\": \"arknav\",\n          \"Port\": \"5107\"\n        },\n        {\n          \"Device\": \"R-9PRO\",\n          \"Protocol\": \"arknav\",\n          \"Port\": \"5107\"\n        },\n        {\n          \"Device\": \"R-9W\",\n          \"Protocol\": \"arknav\",\n          \"Port\": \"5107\"\n        },\n        {\n          \"Device\": \"IR-7\",\n          \"Protocol\": \"arknav\",\n          \"Port\": \"5107\"\n        },\n        {\n          \"Device\": \"CT-X8\",\n          \"Protocol\": \"arknav\",\n          \"Port\": \"5107\"\n        },\n        {\n          \"Device\": \"AT-5000\",\n          \"Protocol\": \"arknav\",\n          \"Port\": \"5107\"\n        },\n        {\n          \"Device\": \"AT-04\",\n          \"Protocol\": \"arknav\",\n          \"Port\": \"5107\"\n        },\n        {\n          \"Device\": \"AT-9000\",\n          \"Protocol\": \"arknav\",\n          \"Port\": \"5107\"\n        },\n        {\n          \"Device\": \"DX-3\",\n          \"Protocol\": \"arknav\",\n          \"Port\": \"5107\"\n        },\n        {\n          \"Device\": \"Supermate D-series\",\n          \"Protocol\": \"supermate\",\n          \"Port\": \"5108\"\n        },\n        {\n          \"Device\": \"D11\",\n          \"Protocol\": \"supermate\",\n          \"Port\": \"5108\"\n        },\n        {\n          \"Device\": \"Appello 4P\",\n          \"Protocol\": \"appello\",\n          \"Port\": \"5109\"\n        },\n        {\n          \"Device\": \"IDPL\",\n          \"Protocol\": \"idpl\",\n          \"Port\": \"5110\"\n        },\n        {\n          \"Device\": \"HS-500P\",\n          \"Protocol\": \"huasheng\",\n          \"Port\": \"5111\"\n        },\n        {\n          \"Device\": \"HS-300V\",\n          \"Protocol\": \"huasheng\",\n          \"Port\": \"5111\"\n        },\n        {\n          \"Device\": \"HS-400\",\n          \"Protocol\": \"huasheng\",\n          \"Port\": \"5111\"\n        },\n        {\n          \"Device\": \"HS-1200\",\n          \"Protocol\": \"huasheng\",\n          \"Port\": \"5111\"\n        },\n        {\n          \"Device\": \"HS-3000G\",\n          \"Protocol\": \"huasheng\",\n          \"Port\": \"5111\"\n        },\n        {\n          \"Device\": \"HS-800W\",\n          \"Protocol\": \"huasheng\",\n          \"Port\": \"5111\"\n        },\n        {\n          \"Device\": \"HS-2000C\",\n          \"Protocol\": \"huasheng\",\n          \"Port\": \"5111\"\n        },\n        {\n          \"Device\": \"HS-2000G\",\n          \"Protocol\": \"huasheng\",\n          \"Port\": \"5111\"\n        },\n        {\n          \"Device\": \"L100\",\n          \"Protocol\": \"granit\",\n          \"Port\": \"5112\"\n        },\n        {\n          \"Device\": \"Granit Navigator 4\",\n          \"Protocol\": \"granit\",\n          \"Port\": \"5113\"\n        },\n        {\n          \"Device\": \"Granit Navigator 5\",\n          \"Protocol\": \"granit\",\n          \"Port\": \"5113\"\n        },\n        {\n          \"Device\": \"CR2000\",\n          \"Protocol\": \"carcell\",\n          \"Port\": \"5114\"\n        },\n        {\n          \"Device\": \"CR250\",\n          \"Protocol\": \"carcell\",\n          \"Port\": \"5114\"\n        },\n        {\n          \"Device\": \"RV-M7\",\n          \"Protocol\": \"raveon\",\n          \"Port\": \"5117\"\n        },\n        {\n          \"Device\": \"CradlePoint\",\n          \"Protocol\": \"cradlepoint\",\n          \"Port\": \"5118\"\n        },\n        {\n          \"Device\": \"Arknav CT-X8\",\n          \"Protocol\": \"arknavx8\",\n          \"Port\": \"5119\"\n        },\n        {\n          \"Device\": \"AutoGrade\",\n          \"Protocol\": \"autograde\",\n          \"Port\": \"5120\"\n        },\n        {\n          \"Device\": \"AR-2GM\",\n          \"Protocol\": \"oigo\",\n          \"Port\": \"5121\"\n        },\n        {\n          \"Device\": \"AR-3HU\",\n          \"Protocol\": \"oigo\",\n          \"Port\": \"5121\"\n        },\n        {\n          \"Device\": \"AR-2CX\",\n          \"Protocol\": \"oigo\",\n          \"Port\": \"5121\"\n        },\n        {\n          \"Device\": \"JP-KORJAR\",\n          \"Protocol\": \"jpkorjar\",\n          \"Port\": \"5122\"\n        },\n        {\n          \"Device\": \"cGuard Personal\",\n          \"Protocol\": \"cguard\",\n          \"Port\": \"5123\"\n        },\n        {\n          \"Device\": \"cGuard Atom\",\n          \"Protocol\": \"cguard\",\n          \"Port\": \"5123\"\n        },\n        {\n          \"Device\": \"cGuard OBD\",\n          \"Protocol\": \"cguard\",\n          \"Port\": \"5123\"\n        },\n        {\n          \"Device\": \"cGuard Litom\",\n          \"Protocol\": \"cguard\",\n          \"Port\": \"5123\"\n        },\n        {\n          \"Device\": \"cGuard Beacon\",\n          \"Protocol\": \"cguard\",\n          \"Port\": \"5123\"\n        },\n        {\n          \"Device\": \"A100\",\n          \"Protocol\": \"fifotrack\",\n          \"Port\": \"5124\"\n        },\n        {\n          \"Device\": \"A200\",\n          \"Protocol\": \"fifotrack\",\n          \"Port\": \"5124\"\n        },\n        {\n          \"Device\": \"A300\",\n          \"Protocol\": \"fifotrack\",\n          \"Port\": \"5124\"\n        },\n        {\n          \"Device\": \"S20\",\n          \"Protocol\": \"fifotrack\",\n          \"Port\": \"5124\"\n        },\n        {\n          \"Device\": \"S30\",\n          \"Protocol\": \"fifotrack\",\n          \"Port\": \"5124\"\n        },\n        {\n          \"Device\": \"S50\",\n          \"Protocol\": \"fifotrack\",\n          \"Port\": \"5124\"\n        },\n        {\n          \"Device\": \"S60\",\n          \"Protocol\": \"fifotrack\",\n          \"Port\": \"5124\"\n        },\n        {\n          \"Device\": \"A600\",\n          \"Protocol\": \"fifotrack\",\n          \"Port\": \"5124\"\n        },\n        {\n          \"Device\": \"A700\",\n          \"Protocol\": \"fifotrack\",\n          \"Port\": \"5124\"\n        },\n        {\n          \"Device\": \"Q1\",\n          \"Protocol\": \"fifotrack\",\n          \"Port\": \"5124\"\n        },\n        {\n          \"Device\": \"ET800E\",\n          \"Protocol\": \"extremtrac\",\n          \"Port\": \"5126\"\n        },\n        {\n          \"Device\": \"TrakMate\",\n          \"Protocol\": \"trakmate\",\n          \"Port\": \"5127\"\n        },\n        {\n          \"Device\": \"AT2000\",\n          \"Protocol\": \"at2000\",\n          \"Port\": \"5128\"\n        },\n        {\n          \"Device\": \"Maestro MT-01\",\n          \"Protocol\": \"maestro\",\n          \"Port\": \"5129\"\n        },\n        {\n          \"Device\": \"AIVDM/AIVDO AIS\",\n          \"Protocol\": \"ais\",\n          \"Port\": \"5130\"\n        },\n        {\n          \"Device\": \"GT-30\",\n          \"Protocol\": \"gt30\",\n          \"Port\": \"5131\"\n        },\n        {\n          \"Device\": \"TrackMiGaddi\",\n          \"Protocol\": \"tmg\",\n          \"Port\": \"5132\"\n        },\n        {\n          \"Device\": \"TMG188\",\n          \"Protocol\": \"tmg\",\n          \"Port\": \"5132\"\n        },\n        {\n          \"Device\": \"TC85D\",\n          \"Protocol\": \"pretrace\",\n          \"Port\": \"5133\"\n        },\n        {\n          \"Device\": \"TC56\",\n          \"Protocol\": \"pretrace\",\n          \"Port\": \"5133\"\n        },\n        {\n          \"Device\": \"TC55\",\n          \"Protocol\": \"pretrace\",\n          \"Port\": \"5133\"\n        },\n        {\n          \"Device\": \"TC80\",\n          \"Protocol\": \"pretrace\",\n          \"Port\": \"5133\"\n        },\n        {\n          \"Device\": \"TC85\",\n          \"Protocol\": \"pretrace\",\n          \"Port\": \"5133\"\n        },\n        {\n          \"Device\": \"Pricol\",\n          \"Protocol\": \"pricol\",\n          \"Port\": \"5134\"\n        },\n        {\n          \"Device\": \"SIWI\",\n          \"Protocol\": \"siwi\",\n          \"Port\": \"5135\"\n        },\n        {\n          \"Device\": \"StarLink Asset\",\n          \"Protocol\": \"starlink\",\n          \"Port\": \"5136\"\n        },\n        {\n          \"Device\": \"StarLink Trailer\",\n          \"Protocol\": \"starlink\",\n          \"Port\": \"5136\"\n        },\n        {\n          \"Device\": \"Starlink TrackerBT\",\n          \"Protocol\": \"starlink\",\n          \"Port\": \"5136\"\n        },\n        {\n          \"Device\": \"StarLink Tracker\",\n          \"Protocol\": \"starlink\",\n          \"Port\": \"5136\"\n        },\n        {\n          \"Device\": \"StarLink TrackerSF\",\n          \"Protocol\": \"starlink\",\n          \"Port\": \"5136\"\n        },\n        {\n          \"Device\": \"StarLink TrackerCAN\",\n          \"Protocol\": \"starlink\",\n          \"Port\": \"5136\"\n        },\n        {\n          \"Device\": \"StarLink SVR\",\n          \"Protocol\": \"starlink\",\n          \"Port\": \"5136\"\n        },\n        {\n          \"Device\": \"StarLink ToGo\",\n          \"Protocol\": \"starlink\",\n          \"Port\": \"5136\"\n        },\n        {\n          \"Device\": \"StarLink Voice\",\n          \"Protocol\": \"starlink\",\n          \"Port\": \"5136\"\n        },\n        {\n          \"Device\": \"StarLink eConnect\",\n          \"Protocol\": \"starlink\",\n          \"Port\": \"5136\"\n        },\n        {\n          \"Device\": \"StarLink eBike\",\n          \"Protocol\": \"starlink\",\n          \"Port\": \"5136\"\n        },\n        {\n          \"Device\": \"StarLink RoadBuddy\",\n          \"Protocol\": \"starlink\",\n          \"Port\": \"5136\"\n        },\n        {\n          \"Device\": \"G100\",\n          \"Protocol\": \"dmt\",\n          \"Port\": \"5137\"\n        },\n        {\n          \"Device\": \"G60\",\n          \"Protocol\": \"dmt\",\n          \"Port\": \"5137\"\n        },\n        {\n          \"Device\": \"G52S\",\n          \"Protocol\": \"dmt\",\n          \"Port\": \"5137\"\n        },\n        {\n          \"Device\": \"DART\",\n          \"Protocol\": \"dmt\",\n          \"Port\": \"5137\"\n        },\n        {\n          \"Device\": \"OYSTER\",\n          \"Protocol\": \"dmt\",\n          \"Port\": \"5137\"\n        },\n        {\n          \"Device\": \"Sting\",\n          \"Protocol\": \"dmt\",\n          \"Port\": \"5137\"\n        },\n        {\n          \"Device\": \"Xirgo XT2400 Series\",\n          \"Protocol\": \"xt2400\",\n          \"Port\": \"5138\"\n        },\n        {\n          \"Device\": \"Xirgo XT6300 Series\",\n          \"Protocol\": \"xt2400\",\n          \"Port\": \"5138\"\n        },\n        {\n          \"Device\": \"REMORA\",\n          \"Protocol\": \"dmthttp\",\n          \"Port\": \"5139\"\n        },\n        {\n          \"Device\": \"AE1\",\n          \"Protocol\": \"alematics\",\n          \"Port\": \"5140\"\n        },\n        {\n          \"Device\": \"AE1-W\",\n          \"Protocol\": \"alematics\",\n          \"Port\": \"5140\"\n        },\n        {\n          \"Device\": \"AM1-S\",\n          \"Protocol\": \"alematics\",\n          \"Port\": \"5140\"\n        },\n        {\n          \"Device\": \"AM1-W\",\n          \"Protocol\": \"alematics\",\n          \"Port\": \"5140\"\n        },\n        {\n          \"Device\": \"AM1-S(V)\",\n          \"Protocol\": \"alematics\",\n          \"Port\": \"5140\"\n        },\n        {\n          \"Device\": \"AM1-W(V)\",\n          \"Protocol\": \"alematics\",\n          \"Port\": \"5140\"\n        },\n        {\n          \"Device\": \"AM3-S\",\n          \"Protocol\": \"alematics\",\n          \"Port\": \"5140\"\n        },\n        {\n          \"Device\": \"AM3-W\",\n          \"Protocol\": \"alematics\",\n          \"Port\": \"5140\"\n        },\n        {\n          \"Device\": \"AM3-S(V)\",\n          \"Protocol\": \"alematics\",\n          \"Port\": \"5140\"\n        },\n        {\n          \"Device\": \"AM3-W(V)\",\n          \"Protocol\": \"alematics\",\n          \"Port\": \"5140\"\n        },\n        {\n          \"Device\": \"GPS056\",\n          \"Protocol\": \"gps056\",\n          \"Port\": \"5141\"\n        },\n        {\n          \"Device\": \"FT-3150\",\n          \"Protocol\": \"flexcomm\",\n          \"Port\": \"5142\"\n        },\n        {\n          \"Device\": \"VT200\",\n          \"Protocol\": \"vt200\",\n          \"Port\": \"5143\"\n        },\n        {\n          \"Device\": \"VT400\",\n          \"Protocol\": \"vt200\",\n          \"Port\": \"5143\"\n        },\n        {\n          \"Device\": \"OwnTracks\",\n          \"Protocol\": \"owntracks\",\n          \"Port\": \"5144\"\n        },\n        {\n          \"Device\": \"VTFMS\",\n          \"Protocol\": \"vtfms\",\n          \"Port\": \"5145\"\n        },\n        {\n          \"Device\": \"TLV\",\n          \"Protocol\": \"tlv\",\n          \"Port\": \"5146\"\n        },\n        {\n          \"Device\": \"ES610\",\n          \"Protocol\": \"esky\",\n          \"Port\": \"5147\"\n        },\n        {\n          \"Device\": \"GNX-20\",\n          \"Protocol\": \"genx\",\n          \"Port\": \"5148\"\n        },\n        {\n          \"Device\": \"GNX-6\",\n          \"Protocol\": \"genx\",\n          \"Port\": \"5148\"\n        },\n        {\n          \"Device\": \"GNX-5P\",\n          \"Protocol\": \"genx\",\n          \"Port\": \"5148\"\n        },\n        {\n          \"Device\": \"GNX-3\",\n          \"Protocol\": \"genx\",\n          \"Port\": \"5148\"\n        },\n        {\n          \"Device\": \"GNX-10L\",\n          \"Protocol\": \"genx\",\n          \"Port\": \"5148\"\n        },\n        {\n          \"Device\": \"GNX-10\",\n          \"Protocol\": \"genx\",\n          \"Port\": \"5148\"\n        },\n        {\n          \"Device\": \"Flespi\",\n          \"Protocol\": \"flespi\",\n          \"Port\": \"5149\"\n        },\n        {\n          \"Device\": \"D-WAY\",\n          \"Protocol\": \"dway\",\n          \"Port\": \"5150\"\n        },\n        {\n          \"Device\": \"Recoda M610\",\n          \"Protocol\": \"recoda\",\n          \"Port\": \"5151\"\n        },\n        {\n          \"Device\": \"OKO-S2\",\n          \"Protocol\": \"oko\",\n          \"Port\": \"5152\"\n        },\n        {\n          \"Device\": \"OKO-E\",\n          \"Protocol\": \"oko\",\n          \"Port\": \"5152\"\n        },\n        {\n          \"Device\": \"OKO-NAVI\",\n          \"Protocol\": \"oko\",\n          \"Port\": \"5152\"\n        },\n        {\n          \"Device\": \"IVT401\",\n          \"Protocol\": \"ivt401\",\n          \"Port\": \"5153\"\n        },\n        {\n          \"Device\": \"TL500\",\n          \"Protocol\": \"ivt401\",\n          \"Port\": \"5153\"\n        },\n        {\n          \"Device\": \"TL1000\",\n          \"Protocol\": \"ivt401\",\n          \"Port\": \"5153\"\n        },\n        {\n          \"Device\": \"AUTOCOP\",\n          \"Protocol\": \"ivt401\",\n          \"Port\": \"5153\"\n        },\n        {\n          \"Device\": \"TL3000\",\n          \"Protocol\": \"ivt401\",\n          \"Port\": \"5153\"\n        },\n        {\n          \"Device\": \"TL500\",\n          \"Protocol\": \"ivt401\",\n          \"Port\": \"5153\"\n        },\n        {\n          \"Device\": \"Oyster Sigfox\",\n          \"Protocol\": \"sigfox\",\n          \"Port\": \"5154\"\n        },\n        {\n          \"Device\": \"T57\",\n          \"Protocol\": \"t57\",\n          \"Port\": \"5155\"\n        },\n        {\n          \"Device\": \"SPOT\",\n          \"Protocol\": \"spot\",\n          \"Port\": \"5156\"\n        },\n        {\n          \"Device\": \"SPOT GEN3\",\n          \"Protocol\": \"spot\",\n          \"Port\": \"5156\"\n        },\n        {\n          \"Device\": \"M2C2020\",\n          \"Protocol\": \"m2c\",\n          \"Port\": \"5157\"\n        },\n        {\n          \"Device\": \"GlobeKeeper\",\n          \"Protocol\": \"globekeeper\",\n          \"Port\": \"5158\"\n        },\n        {\n          \"Device\": \"OpenGTS\",\n          \"Protocol\": \"opengts\",\n          \"Port\": \"5159\"\n        },\n        {\n          \"Device\": \"GPSLogger\",\n          \"Protocol\": \"opengts\",\n          \"Port\": \"5159\"\n        },\n        {\n          \"Device\": \"Cautela\",\n          \"Protocol\": \"cautela\",\n          \"Port\": \"5160\"\n        },\n        {\n          \"Device\": \"Motorola HF\",\n          \"Protocol\": \"cautela\",\n          \"Port\": \"5160\"\n        },\n        {\n          \"Device\": \"Continental Vehicle Tracker\",\n          \"Protocol\": \"continental\",\n          \"Port\": \"5161\"\n        },\n        {\n          \"Device\": \"EGTS (Era-Glonass)\",\n          \"Protocol\": \"egts\",\n          \"Port\": \"5162\"\n        },\n        {\n          \"Device\": \"ROBOT-UPS\",\n          \"Protocol\": \"robotrack\",\n          \"Port\": \"5163\"\n        },\n        {\n          \"Device\": \"ROBOT-GPS\",\n          \"Protocol\": \"robotrack\",\n          \"Port\": \"5163\"\n        },\n        {\n          \"Device\": \"ROBOTRACK\",\n          \"Protocol\": \"robotrack\",\n          \"Port\": \"5163\"\n        },\n        {\n          \"Device\": \"PT60\",\n          \"Protocol\": \"pt60\",\n          \"Port\": \"5164\"\n        },\n        {\n          \"Device\": \"Telemax\",\n          \"Protocol\": \"telemax\",\n          \"Port\": \"5165\"\n        },\n        {\n          \"Device\": \"Micro Genie\",\n          \"Protocol\": \"sabertek\",\n          \"Port\": \"5166\"\n        },\n        {\n          \"Device\": \"Wialon Retranslator\",\n          \"Protocol\": \"retranslator\",\n          \"Port\": \"5167\"\n        },\n        {\n          \"Device\": \"Vias700\",\n          \"Protocol\": \"svias\",\n          \"Port\": \"5168\"\n        },\n        {\n          \"Device\": \"eSeal\",\n          \"Protocol\": \"eseal\",\n          \"Port\": \"5169\"\n        },\n        {\n          \"Device\": \"Freematics ONE\",\n          \"Protocol\": \"freematics\",\n          \"Port\": \"5170\"\n        },\n        {\n          \"Device\": \"AT35\",\n          \"Protocol\": \"avema\",\n          \"Port\": \"5171\"\n        },\n        {\n          \"Device\": \"AT35 3G\",\n          \"Protocol\": \"avema\",\n          \"Port\": \"5171\"\n        },\n        {\n          \"Device\": \"AT35 LTE\",\n          \"Protocol\": \"avema\",\n          \"Port\": \"5171\"\n        },\n        {\n          \"Device\": \"AT35 4G/LTE MiFi\",\n          \"Protocol\": \"avema\",\n          \"Port\": \"5171\"\n        },\n        {\n          \"Device\": \"MT99\",\n          \"Protocol\": \"avema\",\n          \"Port\": \"5171\"\n        },\n        {\n          \"Device\": \"MT99 4G LTE\",\n          \"Protocol\": \"avema\",\n          \"Port\": \"5171\"\n        },\n        {\n          \"Device\": \"AutoTrack XL\",\n          \"Protocol\": \"autotrack\",\n          \"Port\": \"5172\"\n        },\n        {\n          \"Device\": \"AutoTrack еLite\",\n          \"Protocol\": \"autotrack\",\n          \"Port\": \"5172\"\n        },\n        {\n          \"Device\": \"TEK-586\",\n          \"Protocol\": \"tek\",\n          \"Port\": \"5173\"\n        },\n        {\n          \"Device\": \"TEK-733\",\n          \"Protocol\": \"tek\",\n          \"Port\": \"5173\"\n        },\n        {\n          \"Device\": \"Wrist Band\",\n          \"Protocol\": \"wristband\",\n          \"Port\": \"5174\"\n        },\n        {\n          \"Device\": \"GB101\",\n          \"Protocol\": \"milesmate\",\n          \"Port\": \"5176\"\n        },\n        {\n          \"Device\": \"MM101A\",\n          \"Protocol\": \"milesmate\",\n          \"Port\": \"5176\"\n        },\n        {\n          \"Device\": \"VT1611\",\n          \"Protocol\": \"anytrek\",\n          \"Port\": \"5177\"\n        },\n        {\n          \"Device\": \"SmartSole\",\n          \"Protocol\": \"smartsole\",\n          \"Port\": \"5178\"\n        },\n        {\n          \"Device\": \"ITS\",\n          \"Protocol\": \"its\",\n          \"Port\": \"5179\"\n        },\n        {\n          \"Device\": \"AIS140\",\n          \"Protocol\": \"its\",\n          \"Port\": \"5179\"\n        },\n        {\n          \"Device\": \"XRB 28\",\n          \"Protocol\": \"xrb28\",\n          \"Port\": \"5180\"\n        },\n        {\n          \"Device\": \"C2STEK\",\n          \"Protocol\": \"c2stek\",\n          \"Port\": \"5181\"\n        },\n        {\n          \"Device\": \"MT-20\",\n          \"Protocol\": \"c2stek\",\n          \"Port\": \"5181\"\n        },\n        {\n          \"Device\": \"NT-183W\",\n          \"Protocol\": \"nyitech\",\n          \"Port\": \"5182\"\n        },\n        {\n          \"Device\": \"NT-183G\",\n          \"Protocol\": \"nyitech\",\n          \"Port\": \"5182\"\n        },\n        {\n          \"Device\": \"GEO5\",\n          \"Protocol\": \"neos\",\n          \"Port\": \"5183\"\n        },\n        {\n          \"Device\": \"NEO5\",\n          \"Protocol\": \"neos\",\n          \"Port\": \"5183\"\n        },\n        {\n          \"Device\": \"NEO7\",\n          \"Protocol\": \"neos\",\n          \"Port\": \"5183\"\n        },\n        {\n          \"Device\": \"GEO1\",\n          \"Protocol\": \"neos\",\n          \"Port\": \"5183\"\n        },\n        {\n          \"Device\": \"NEO1\",\n          \"Protocol\": \"neos\",\n          \"Port\": \"5183\"\n        },\n        {\n          \"Device\": \"NEO2\",\n          \"Protocol\": \"neos\",\n          \"Port\": \"5183\"\n        },\n        {\n          \"Device\": \"SAT-LITE 4\",\n          \"Protocol\": \"satsol\",\n          \"Port\": \"5184\"\n        },\n        {\n          \"Device\": \"SAT-LITE 3\",\n          \"Protocol\": \"satsol\",\n          \"Port\": \"5184\"\n        },\n        {\n          \"Device\": \"Globalstar\",\n          \"Protocol\": \"globalstar\",\n          \"Port\": \"5185\"\n        },\n        {\n          \"Device\": \"SANUL\",\n          \"Protocol\": \"sanul\",\n          \"Port\": \"5186\"\n        },\n        {\n          \"Device\": \"MiniFinder Nano\",\n          \"Protocol\": \"minifinder2\",\n          \"Port\": \"5187\"\n        },\n        {\n          \"Device\": \"MiniFinder Atto Pro\",\n          \"Protocol\": \"minifinder2\",\n          \"Port\": \"5187\"\n        },\n        {\n          \"Device\": \"PEBBELL\",\n          \"Protocol\": \"minifinder2\",\n          \"Port\": \"5187\"\n        },\n        {\n          \"Device\": \"Radar Duo\",\n          \"Protocol\": \"radar\",\n          \"Port\": \"5188\"\n        },\n        {\n          \"Device\": \"Radar Trio\",\n          \"Protocol\": \"radar\",\n          \"Port\": \"5188\"\n        },\n        {\n          \"Device\": \"GPSRX12\",\n          \"Protocol\": \"techtlt\",\n          \"Port\": \"5189\"\n        },\n        {\n          \"Device\": \"GPSRX14\",\n          \"Protocol\": \"techtlt\",\n          \"Port\": \"5189\"\n        },\n        {\n          \"Device\": \"GPSRX16\",\n          \"Protocol\": \"techtlt\",\n          \"Port\": \"5189\"\n        },\n        {\n          \"Device\": \"Helios\",\n          \"Protocol\": \"starcom\",\n          \"Port\": \"5190\"\n        },\n        {\n          \"Device\": \"Helios TT\",\n          \"Protocol\": \"starcom\",\n          \"Port\": \"5190\"\n        },\n        {\n          \"Device\": \"Helios Advanced\",\n          \"Protocol\": \"starcom\",\n          \"Port\": \"5190\"\n        },\n        {\n          \"Device\": \"Helios Hybrid\",\n          \"Protocol\": \"starcom\",\n          \"Port\": \"5190\"\n        },\n        {\n          \"Device\": \"MT825\",\n          \"Protocol\": \"mictrack\",\n          \"Port\": \"5191\"\n        },\n        {\n          \"Device\": \"Plugin\",\n          \"Protocol\": \"plugin\",\n          \"Port\": \"5192\"\n        },\n        {\n          \"Device\": \"Leaf Spy Pro\",\n          \"Protocol\": \"leafspy\",\n          \"Port\": \"5193\"\n        },\n        {\n          \"Device\": \"Naviset GT-20\",\n          \"Protocol\": \"naviset\",\n          \"Port\": \"5194\"\n        },\n        {\n          \"Device\": \"Race Dynamics\",\n          \"Protocol\": \"racedynamics\",\n          \"Port\": \"5195\"\n        },\n        {\n          \"Device\": \"RST MINI LOW COST\",\n          \"Protocol\": \"rst\",\n          \"Port\": \"5196\"\n        },\n        {\n          \"Device\": \"RST MINI\",\n          \"Protocol\": \"rst\",\n          \"Port\": \"5196\"\n        },\n        {\n          \"Device\": \"RST LOW COST\",\n          \"Protocol\": \"rst\",\n          \"Port\": \"5196\"\n        },\n        {\n          \"Device\": \"RST VERSAO TELEMETRIA\",\n          \"Protocol\": \"rst\",\n          \"Port\": \"5196\"\n        },\n        {\n          \"Device\": \"RST MINI 4G\",\n          \"Protocol\": \"rst\",\n          \"Port\": \"5196\"\n        },\n        {\n          \"Device\": \"RST HIBRIDO\",\n          \"Protocol\": \"rst\",\n          \"Port\": \"5196\"\n        },\n        {\n          \"Device\": \"RST OBD2\",\n          \"Protocol\": \"rst\",\n          \"Port\": \"5196\"\n        },\n        {\n          \"Device\": \"RST MOVEL\",\n          \"Protocol\": \"rst\",\n          \"Port\": \"5196\"\n        },\n        {\n          \"Device\": \"PT215\",\n          \"Protocol\": \"pt215\",\n          \"Port\": \"5197\"\n        },\n        {\n          \"Device\": \"PT40\",\n          \"Protocol\": \"pacifictrack\",\n          \"Port\": \"5198\"\n        },\n        {\n          \"Device\": \"ZhongXun Topin\",\n          \"Protocol\": \"topin\",\n          \"Port\": \"5199\"\n        },\n        {\n          \"Device\": \"Sigaba OutSafe\",\n          \"Protocol\": \"outsafe\",\n          \"Port\": \"5200\"\n        },\n        {\n          \"Device\": \"Solar Powered\",\n          \"Protocol\": \"solarpowered\",\n          \"Port\": \"5201\"\n        },\n        {\n          \"Device\": \"Motor\",\n          \"Protocol\": \"motor\",\n          \"Port\": \"5202\"\n        },\n        {\n          \"Device\": \"Profi\",\n          \"Protocol\": \"omnicomm\",\n          \"Port\": \"5203\"\n        },\n        {\n          \"Device\": \"Optim\",\n          \"Protocol\": \"omnicomm\",\n          \"Port\": \"5203\"\n        },\n        {\n          \"Device\": \"Light\",\n          \"Protocol\": \"omnicomm\",\n          \"Port\": \"5203\"\n        },\n        {\n          \"Device\": \"Profi 2.0\",\n          \"Protocol\": \"omnicomm\",\n          \"Port\": \"5203\"\n        },\n        {\n          \"Device\": \"Optim 2.0\",\n          \"Protocol\": \"omnicomm\",\n          \"Port\": \"5203\"\n        },\n        {\n          \"Device\": \"Light 2.0\",\n          \"Protocol\": \"omnicomm\",\n          \"Port\": \"5203\"\n        },\n        {\n          \"Device\": \"S168\",\n          \"Protocol\": \"s168\",\n          \"Port\": \"5204\"\n        },\n        {\n          \"Device\": \"VNET\",\n          \"Protocol\": \"vnet\",\n          \"Port\": \"5205\"\n        },\n        {\n          \"Device\": \"ET-700\",\n          \"Protocol\": \"blue\",\n          \"Port\": \"5206\"\n        },\n        {\n          \"Device\": \"ET-700C\",\n          \"Protocol\": \"blue\",\n          \"Port\": \"5206\"\n        },\n        {\n          \"Device\": \"PST\",\n          \"Protocol\": \"pst\",\n          \"Port\": \"5207\"\n        },\n        {\n          \"Device\": \"DF550\",\n          \"Protocol\": \"dingtek\",\n          \"Port\": \"5208\"\n        },\n        {\n          \"Device\": \"DF702\",\n          \"Protocol\": \"dingtek\",\n          \"Port\": \"5208\"\n        },\n        {\n          \"Device\": \"Piccolo STX​​\",\n          \"Protocol\": \"wli\",\n          \"Port\": \"5209\"\n        },\n        {\n          \"Device\": \"Piccolo Plus\",\n          \"Protocol\": \"wli\",\n          \"Port\": \"5209\"\n        },\n        {\n          \"Device\": \"Piccolo Hybrid+​​​\",\n          \"Protocol\": \"wli\",\n          \"Port\": \"5209\"\n        },\n        {\n          \"Device\": \"Piccolo ATX2S​​\",\n          \"Protocol\": \"wli\",\n          \"Port\": \"5209\"\n        },\n        {\n          \"Device\": \"Piccolo ATX Asset​​\",\n          \"Protocol\": \"wli\",\n          \"Port\": \"5209\"\n        },\n        {\n          \"Device\": \"Piccolo ATX II​​\",\n          \"Protocol\": \"wli\",\n          \"Port\": \"5209\"\n        },\n        {\n          \"Device\": \"Piccolo TMX+​​​\",\n          \"Protocol\": \"wli\",\n          \"Port\": \"5209\"\n        },\n        {\n          \"Device\": \"NIOT\",\n          \"Protocol\": \"niot\",\n          \"Port\": \"5210\"\n        },\n        {\n          \"Device\": \"Portman\",\n          \"Protocol\": \"portman\",\n          \"Port\": \"5211\"\n        },\n        {\n          \"Device\": \"GT3105MG-PT\",\n          \"Protocol\": \"portman\",\n          \"Port\": \"5211\"\n        },\n        {\n          \"Device\": \"Icomera MoovBox\",\n          \"Protocol\": \"moovbox\",\n          \"Port\": \"5212\"\n        },\n        {\n          \"Device\": \"M320\",\n          \"Protocol\": \"moovbox\",\n          \"Port\": \"5212\"\n        },\n        {\n          \"Device\": \"Futureway\",\n          \"Protocol\": \"futureway\",\n          \"Port\": \"5213\"\n        },\n        {\n          \"Device\": \"Smart Crutches\",\n          \"Protocol\": \"futureway\",\n          \"Port\": \"5213\"\n        },\n        {\n          \"Device\": \"POLTE\",\n          \"Protocol\": \"polte\",\n          \"Port\": \"5214\"\n        },\n        {\n          \"Device\": \"NET\",\n          \"Protocol\": \"net\",\n          \"Port\": \"5215\"\n        },\n        {\n          \"Device\": \"MT2000\",\n          \"Protocol\": \"mobilogix\",\n          \"Port\": \"5216\"\n        },\n        {\n          \"Device\": \"MT2000S\",\n          \"Protocol\": \"mobilogix\",\n          \"Port\": \"5216\"\n        },\n        {\n          \"Device\": \"MT4x00\",\n          \"Protocol\": \"mobilogix\",\n          \"Port\": \"5216\"\n        },\n        {\n          \"Device\": \"BAT-M1\",\n          \"Protocol\": \"mobilogix\",\n          \"Port\": \"5216\"\n        },\n        {\n          \"Device\": \"BAT-X\",\n          \"Protocol\": \"mobilogix\",\n          \"Port\": \"5216\"\n        },\n        {\n          \"Device\": \"SWIFTECH\",\n          \"Protocol\": \"swiftech\",\n          \"Port\": \"5217\"\n        },\n        {\n          \"Device\": \"XG3700\",\n          \"Protocol\": \"iotm\",\n          \"Port\": \"5218\"\n        },\n        {\n          \"Device\": \"XG3780\",\n          \"Protocol\": \"iotm\",\n          \"Port\": \"5218\"\n        },\n        {\n          \"Device\": \"FMS500\",\n          \"Protocol\": \"iotm\",\n          \"Port\": \"5218\"\n        },\n        {\n          \"Device\": \"DO107\",\n          \"Protocol\": \"dolphin\",\n          \"Port\": \"5219\"\n        },\n        {\n          \"Device\": \"Ebike Tracker\",\n          \"Protocol\": \"ennfu\",\n          \"Port\": \"5220\"\n        }\n       ]);\n\n\n\n    const handleMostarar = async() => {\n        const response = await fetch('/api/users', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Credentials': 'include',\n                'Accept':'*/*',\n            }\n        }).then(response =>response.json()\n        .then(data=>{setUsers(data)})\n        );\n    }\n\n    useEffect(() => {\n        handleMostarar();\n    }, []);\n\n    const [name, setName] = useState('');\n    const [client, setClient] = useState('');\n    const [model, setModel] = useState('');\n    const [uniqueId, setUniqueId] = useState('');\n    const [attributes, setAttributes] = useState('');\n    const [users, setUsers] = useState([]);\n    const [observation, setObservation] = useState('');\n\n    const mostrar = (e) => {\n        e.preventDefault();\n        console.log(JSON.stringify({name, uniqueId, model, attributes:{client, observation}}))\n        {/*console.log('Mostrando usuarios');\n    handleMostarar();*/}\n    }\n\n    const enviar = (e) => {\n        e.preventDefault();\n        console.log('DATOS'+name+', '+uniqueId)\n        handleEnviar();\n    }\n\n    const handleEnviar = async () => {\n        const response = await fetch('/api/devices', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json',\n                     'Credentials': 'include',\n                     'Accept':'*/*'    },\n          body: JSON.stringify({name, uniqueId, model, attributes:{client, observation}})\n        });\n    \n        if (response.ok) {\n            console.log('Estado: 200')\n        } \n      }\n\n    return(\n        <s.main_cointainer>\n            <sd.h100b>                    \n                    <sd.block_titlebar>Añadir Objetivos</sd.block_titlebar>\n                    <sd.has_titlebar_content>\n                        <sd.el_scroll_wrap>\n                            <sd.el_scroll_view>\n                        <sd.device_add>\n                        <sd.el_form>\n                        <sd.el_form_item>\n                            <sd.el_form_item_label>Saldo</sd.el_form_item_label>\n                            <sd.el_form_item_content>\n                                <sd.table_balance>\n                                    <tr>\n\n                                        <sd.tede>\" 0 \"\n                                            <sd.eme>Nueva Tarjeta</sd.eme>\n                                        </sd.tede>\n\n                                        <sd.tede>\" 0 \"\n                                            <sd.eme>Nueva Tarjeta de por vida</sd.eme>\n                                        </sd.tede>\n\n                                    </tr>\n\n                                </sd.table_balance>\n                            </sd.el_form_item_content>\n                        </sd.el_form_item>\n\n                        <sd.el_form_item_is_required>\n                            <sd.el_form_item_label>Meta cliente</sd.el_form_item_label>\n                            <sd.el_form_item_content>\n                                <sd.user_tree_select>\n                                    <sd.data_tips>\n                                        <sd.el_autocomplete>\n                                            \n                                            <sd.el_input>\n                                                <sd.select onChange={event => setClient(event.target.value)}>\n                                                <optgroup label=\"admin\">\n                                                {users.length > 0 &&\n                                                 users.map(item => (\n                                                   <option key={item._id} value={item.name}>\n                                                     {item.name}\n                                                   </option>\n                                                 ))}\n                                                 </optgroup>\n                                                </sd.select>\n\n                                                <sd.el_input_group_append>\n                                                    <sd.el_button onClick={mostrar}>< ri.RiArrowDownSLine/></sd.el_button>\n                                                </sd.el_input_group_append>\n                                            </sd.el_input>\n                                        </sd.el_autocomplete>\n                                    </sd.data_tips>\n                                </sd.user_tree_select>\n                            </sd.el_form_item_content>\n                        </sd.el_form_item_is_required>\n\n                        <sd.el_form_item_is_required>\n                            <sd.el_form_item_label>Nombre</sd.el_form_item_label>\n                            <sd.el_form_item_content>\n                                <sd.user_tree_select>\n                                    <sd.data_tips>\n                                        <sd.el_autocomplete>\n                                            \n                                            <sd.el_input>\n                                                <sd.name onChange={event => setName(event.target.value)}></sd.name>\n                                            </sd.el_input>\n                                        </sd.el_autocomplete>\n                                    </sd.data_tips>\n                                </sd.user_tree_select>\n                            </sd.el_form_item_content>\n                        </sd.el_form_item_is_required>\n\n                        <sd.el_form_item_is_required>\n                            <sd.el_form_item_label>Tipo</sd.el_form_item_label>\n                            <sd.el_form_item_content>\n                                <sd.user_tree_select>\n                                    <sd.data_tips>\n                                        <sd.el_autocomplete>\n                                            <sd.el_input>\n                                                <sd.select type=\"text\" onChange={event => setModel(event.target.value)}>\n                                                    {devices.length > 0 &&\n                                                     devices.map(item => (\n                                                        <option key={item._id} value={item.Device}>\n                                                            {item.Device}\n                                                        </option>\n                                                     ))}\n                                                </sd.select>\n                                                <sd.el_input_group_append>\n                                                    <sd.el_button>< ri.RiArrowDownSLine/></sd.el_button>\n                                                    \n                                                </sd.el_input_group_append>\n                                            </sd.el_input>\n                                        </sd.el_autocomplete>\n                                    </sd.data_tips>\n                                </sd.user_tree_select>\n                                \n                            </sd.el_form_item_content>\n                            <sd.link_dev>Dispositivos soportados</sd.link_dev>\n                        </sd.el_form_item_is_required>\n\n                        <sd.el_form_item_is_required>\n\n                        <sd.el_form_item_label>Tipo de tarjeta</sd.el_form_item_label>\n                        <sd.el_form_item_content>\n                            <sd.el_radio>\n                                <sd.el_radio_input_is_checked>\n                                    \n                                    <input type=\"radio\"/>\n                                </sd.el_radio_input_is_checked>\n                                <sd.el_radio_label>Nueva tarjeta</sd.el_radio_label>\n                            </sd.el_radio>\n\n                            <sd.el_radio>\n                                <sd.el_radio_input_is_checked>\n                                    <input type=\"radio\"/>\n                                </sd.el_radio_input_is_checked>\n                                <label>Nueva tarjeta de por vida</label>\n                            </sd.el_radio>\n\n                        </sd.el_form_item_content>\n                        </sd.el_form_item_is_required>\n\n                        <sd.el_form_item_is_required>\n                        <sd.el_form_item_label>IMEI</sd.el_form_item_label>\n                            <sd.el_form_item_content>\n                                <sd.el_text_area>\n                                <sd.el_text_area_inner autoComplete=\"off\" rows=\"3\" placeholder=\"Un IMEI una línea\" onChange={event => setUniqueId(event.target.value)}/>\n                                </sd.el_text_area>\n                                <sd.desc>Un lote para 500 IMEI como máximo.</sd.desc>                                \n                            </sd.el_form_item_content>\n                        </sd.el_form_item_is_required>\n                        \n                        <sd.el_form_item>\n                            <sd.el_form_item_label>Observación</sd.el_form_item_label>\n                            <sd.el_form_item_content>\n                                <sd.el_text_area>\n                                <sd.el_text_area_inner autoComplete=\"off\" rows=\"3\" onChange={event => JSON.stringify(setObservation(event.target.value))}/>\n                                </sd.el_text_area>\n                            </sd.el_form_item_content>\n                        </sd.el_form_item>\n\n                        <sd.el_form_item_frm_btn_box>\n                            <sd.el_form_item_content>\n                                <sd.el_button_primary onClick={enviar}><span>Enviar</span></sd.el_button_primary>\n                                <sd.el_button_default><span>Reiniciar</span></sd.el_button_default>\n                            </sd.el_form_item_content>\n                        </sd.el_form_item_frm_btn_box>\n\n\n                    </sd.el_form>\n                    </sd.device_add>\n                    </sd.el_scroll_view>\n                        </sd.el_scroll_wrap>\n                    </sd.has_titlebar_content>\n                    \n                    </sd.h100b>\n        </s.main_cointainer>\n        \n    )\n}\n\nexport default T;","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/agregarUsuarios/agregarUsuarios.js",["673","674","675","676","677"],"import React , { useState }from 'react';\n\nimport * as sd from './agregarUsuarios.styles';\nimport * as s from '../ContenidoAdminDashboard/ContenidoAdminDashboard.styles';\n\nimport BarraSuperior from '../BarraSuperiorAdmin/BarraSuperior';\nimport ContenidoAdmin from '../ContenidoAdmin/ContenidoAdmin';\n\nimport BarraLateralAdmin from '../BarraLateralAdmin/BarraLateralAdmin';\n\nimport T from './t';\n\n\n\nconst AgregarUsuario = (props) => {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const enviar = (e) => {\n        e.preventDefault();\n        handleEnviar();\n    }\n\n    const handleEnviar = async () => {\n        const response = await fetch('/api/users', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json',\n                     'Credentials': 'include',\n                     'Accept':'*/*'    },\n          body: JSON.stringify({name, email, password})\n        });\n    \n        if (response.ok) {\n            console.log('Estado: 200')\n        } \n      }\n\n    return(\n        <s.body>\n            <s.app id=\"app\">\n                <s.app_main>\n                <s.sidebar_container>\n                    <BarraLateralAdmin />\n                </s.sidebar_container>\n                </s.app_main>\n            </s.app>\n            <s.main_cointainer>\n                <BarraSuperior />\n                <ContenidoAdmin />\n                <T/>\n            </s.main_cointainer>\n        </s.body>          \n    )\n}\n\nexport default AgregarUsuario;","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/LogIn/Login.js",["678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694"],"import React, { useState, createContext, useContext } from 'react';\nimport * as s from './Login.styles';\nimport logo from '../../assets/images/logo.png'\nimport { usePromiseTracker } from 'react-promise-tracker';\nimport { trackPromise } from 'react-promise-tracker';\nimport Loader from 'react-loader-spinner';\n\nimport * as Cookies from 'js-cookie';\n\nimport {\n    BrowserRouter as Router,\n    useHistory,\n} from \"react-router-dom\";\n\n\nconst Login = (props) => {\n\n\n    const history = useHistory();\n\n    const [usuario, setUsuario] = useState({\n        email: \"\",\n        password: \"\"\n    });\n\n    const [loading, setLoading] = useState(false)\n\n    const handleCambio = (e) => {\n        const { id, value } = e.target;\n        setUsuario(prevUsuario => ({\n            ...prevUsuario,\n            [id]: value\n        }))\n    }\n\n    const handleEnviar = (e) => {\n        e.preventDefault();\n        if (usuario.password == \"\") {\n            /* iniciarSesion(); */\n            alert('Por favor, introduzca la contraseña');\n        }\n        else if(usuario.email == \"\") {\n            alert('Por favor ingrese la cuenta.');\n        }\n        else{\n            handleLogin();\n            //iniciarSesion();\n        }\n    }\n\n    const LoadingIndicator = () => {\n        const { promiseInProgress } = usePromiseTracker();\n        return (\n            promiseInProgress &&\n            <s.animacionCargar>\n                <Loader type=\"ThreeDots\" color=\"#ffab05\" height=\"50\" width=\"50\" />\n            </s.animacionCargar>\n        );\n    }\n\n    function createCookie(cookieName, cookieValue, daysToExpire){\n        var date = new Date();\n        date.setTime(date.getTime()+(daysToExpire*24*60*60*1000));\n        document.cookie = cookieName + \"=\" + cookieValue + \"; expires=\" + date.toGMTString() + \"path=/\";\n    }\n\n    const redireccionar = () => {\n        createCookie(\"passCk\", usuario.password, 5);\n        history.push(\"/Mapa\")\n        setLoading(false);\n    }\n\n    function readCookie(name) {\n        var nameEQ = name + \"=\";\n        var ca = document.cookie.split(';');\n        for(var i=0;i < ca.length;i++) {\n            var c = ca[i];\n            while (c.charAt(0)==' ') c = c.substring(1,c.length);\n            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\n        }\n        return null;\n    }\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        const response = await fetch('https://www.protrack.ad105.net/api/session', {credentials: 'include',method: 'POST', body: new URLSearchParams(`email=${usuario.email}&password=${usuario.password}`)});\n    \n        if(response.ok) {\n            const user = await response.json();\n            console.log(user);\n            redireccionar();\n        }else{\n            alert('No OK');\n        }\n    }\n\n\n    return (\n        <Router>\n            <s.principal>\n\n                <s.cabecera>\n                    <s.wrap>\n                        <s.logo><img src={logo} /></s.logo>\n                        <s.applink>\n                            <s.android>\n                                <s.android_span>Android</s.android_span>\n                            </s.android>\n                            <s.ios>\n                                <s.ios_span>App Store</s.ios_span>\n                            </s.ios>\n                        </s.applink>\n                    </s.wrap>\n                </s.cabecera>\n\n                <s.body_>\n                    <s.wrap style={{ width: '1100px', visibility: 'visible' }}>\n                        <s.caja_login>\n                            <s.container>\n                                <s.formulario onSubmit={handleLogin}>\n                                    <s.formulatio_titulo>Iniciar Sesión</s.formulatio_titulo>\n                                    <s.formulario_contenido>\n                                        <s.formulario_contenido_cuenta>\n                                            <s.ipt_f_f_ms type=\"text\" id=\"email\" value={usuario.email} onChange={handleCambio} tabIndex={1} style={{ display: \"table-cell\", color: \"white\" }} placeholder=\"Cuenta\" />\n                                            <s.icono_cuenta />\n                                            <s.tips_f13 />\n                                            <s.entrada_limpia />\n                                        </s.formulario_contenido_cuenta>\n\n                                        <s.formulario_contenido_contrasena>\n                                            <s.ipt_f_f_ms type=\"password\" id=\"password\" value={usuario.password} onChange={handleCambio} tabIndex={2} style={{ display: \"table-cell\", color: \"white\" }} placeholder=\"Contraseña\" />\n                                            <s.icono_contra />\n                                            <s.tips_f13 />\n                                            <s.entrada_limpia />\n                                        </s.formulario_contenido_contrasena>\n\n                                        <s.cl_verificar style={{ display: \"none\" }}>\n                                            <s.verificar_wrap style={{ width: \"300px\" }}>\n                                                <s.dragProgress style={{ width: \"0px;\" }} />\n                                                <s.dragBtn style={{ left: \"0px\" }} />\n                                                <s.fixtips>Deslice para verificar</s.fixtips>\n                                                <s.verifyMsg>Exitoso</s.verifyMsg>\n                                            </s.verificar_wrap>\n                                        </s.cl_verificar>\n\n                                        <s.formulario_contenido_recordar>\n                                            <s.chk_remember>\n                                                <s.icono_marcar></s.icono_marcar>\n                                          Recordar la contraseña\n                                      </s.chk_remember>\n                                            <s.encontrar href={\"#\"} target={\"_blank\"}> Encontrar contraseña</s.encontrar>\n                                        </s.formulario_contenido_recordar>\n\n                                        <s.iniciar>\n                                            <s.boton>Iniciar Sesión</s.boton>\n                                            <LoadingIndicator />\n                                        </s.iniciar>\n\n                                        <s.formulario_contenido_demo>\n                                            <s.demo href={\"#\"}>Demo</s.demo>\n                                        </s.formulario_contenido_demo>\n\n                                    </s.formulario_contenido>\n                                </s.formulario>\n                            </s.container>\n                        </s.caja_login>\n                    </s.wrap>\n                </s.body_>\n\n                <s.footer>\n                    <s.wrap_footer>\n                        <s.seleccion_lenguaje>\n                            <s.seleccion_lenguaje_cur>\n                                <s.icono_bandera />\n                            Español\n                        </s.seleccion_lenguaje_cur>\n\n                            <s.panel_lenguaje>\n                                <s.elemento_lenguaje><s.bandera_ingles></s.bandera_ingles>English</s.elemento_lenguaje>\n                                <s.elemento_lenguaje><s.bandera_espanol></s.bandera_espanol>Español</s.elemento_lenguaje>\n                                <s.elemento_lenguaje><s.bandera_portugues></s.bandera_portugues>Português</s.elemento_lenguaje>\n                                <s.elemento_lenguaje><s.bandera_portugues_brasil></s.bandera_portugues_brasil>Português</s.elemento_lenguaje>\n                                <s.elemento_lenguaje><s.bandera_frances></s.bandera_frances>Français</s.elemento_lenguaje>\n                                <s.elemento_lenguaje><s.bandera_aleman></s.bandera_aleman>Deutsch</s.elemento_lenguaje>\n                                <s.elemento_lenguaje><s.bandera_italiano></s.bandera_italiano>Italiana</s.elemento_lenguaje>\n                                <s.elemento_lenguaje><s.bandera_holandes></s.bandera_holandes>Nederlands</s.elemento_lenguaje>\n                                <s.elemento_lenguaje><s.bandera_noruego></s.bandera_noruego>Norsk</s.elemento_lenguaje>\n                                <s.elemento_lenguaje><s.bandera_arabe></s.bandera_arabe>عربية‎</s.elemento_lenguaje>\n                                <s.elemento_lenguaje><s.bandera_farsi></s.bandera_farsi>ارسی</s.elemento_lenguaje>\n                                <s.elemento_lenguaje><s.bandera_vietnamita></s.bandera_vietnamita>Tiếng Việt</s.elemento_lenguaje>\n                                <s.elemento_lenguaje><s.bandera_camboyano></s.bandera_camboyano>ជនជាតិខ្មែរ</s.elemento_lenguaje>\n                                <s.elemento_lenguaje><s.bandera_tailandes></s.bandera_tailandes>ภาษาไทย</s.elemento_lenguaje>\n                                <s.elemento_lenguaje><s.bandera_indonesio></s.bandera_indonesio>Bahasa Indonesia</s.elemento_lenguaje>\n                                <s.elemento_lenguaje><s.bandera_bengali></s.bandera_bengali>বাংলা</s.elemento_lenguaje>\n                                <s.elemento_lenguaje><s.bandera_mandarin></s.bandera_mandarin>简体中文</s.elemento_lenguaje>\n                            </s.panel_lenguaje>\n                        </s.seleccion_lenguaje>\n\n                        <s.copyright>\n                            <s.derechos>Copyright © 2021 Protrack GPS. All rights reserved.</s.derechos>\n\n                            <s.enlaces>\n                                <a>OPEN API</a> &nbsp;&nbsp;\n                            <a>Privacy policy</a>&nbsp;&nbsp;\n                            <a>Terms of service</a>&nbsp;&nbsp;\n                            <a>v3.1.9@20210121</a>&nbsp;&nbsp;\n                            <a>v1</a>\n                            </s.enlaces>\n                        </s.copyright>\n\n                    </s.wrap_footer>\n                </s.footer>\n\n            </s.principal>\n\n        </Router>\n    )\n}\n\nexport default Login;","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/Recorrido.js",["695","696"],"import React, { useState } from 'react';\nimport * as s from './Recorrido.styles';\n\n\n\nimport BarraInferior from './BarraInferior/BarraInferior';\n\nimport Mapa from './Mapa';\nimport Playback from './Playback';\n\n\nimport * as i from 'react-icons/all'\nimport { useLocation } from 'react-router';\nconst Recorrido = ({datos}) => {\n\n    const [value, onChange] = useState(new Date());\n    const location = useLocation();\n    const dispositivo = location.state;\n\n\n    return (\n        <s.Body>\n            <s.app>\n\n                <s.playback_box>\n                    <Playback datos={dispositivo}/>\n                    <Mapa datos={dispositivo}/>\n                    <s.left_map_control>\n\n                        <s.l_m_c_item>\n                            <s.iconfont_speed><i.IoIosSpeedometer /></s.iconfont_speed>\n                        </s.l_m_c_item>\n                        <s.l_m_c_item>\n                            <s.iconfont_speed><i.IoDocumentTextSharp /></s.iconfont_speed>\n                        </s.l_m_c_item>\n                        <s.l_m_c_item>\n                            <s.iconfont_speed><i.GiGps /></s.iconfont_speed></s.l_m_c_item>\n                    </s.left_map_control>\n\n\n                    <s.right_map_control>\n                        <s.alert_icon />\n                        <s.starting_icon />\n                        <s.stop_icon />\n                        <s.info_icon />\n                    </s.right_map_control>\n\n\n                    <s.play_progress_box>\n                        <s.play_progress_content>\n                            <s.play_progress_stop />\n                        </s.play_progress_content>\n                    </s.play_progress_box>\n                    <BarraInferior />\n\n                </s.playback_box>\n            </s.app>\n\n        </s.Body>\n\n    )\n\n}\n\nexport default Recorrido;","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Principal/Principal.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/agregarUsuarios/t.js",["697","698","699","700","701"],"import React, {useState, useEffect} from 'react'; \n\nimport * as ri from 'react-icons/all';\n\nimport * as sd from './agregarUsuarios.styles';\nimport * as s from '../ContenidoAdminDashboard/ContenidoAdminDashboard.styles';\n\n\n\nconst T = (props) => {\n\n\n\n    const [timeZones, setTimeZones] = useState([\n        {\n          \"offset\": \"GMT-12:00\",\n          \"name\": \"Etc/GMT-12\"\n        },\n        {\n          \"offset\": \"GMT-11:00\",\n          \"name\": \"Etc/GMT-11\"\n        },\n        {\n          \"offset\": \"GMT-11:00\",\n          \"name\": \"Pacific/Midway\"\n        },\n        {\n          \"offset\": \"GMT-10:00\",\n          \"name\": \"America/Adak\"\n        },\n        {\n          \"offset\": \"GMT-09:00\",\n          \"name\": \"America/Anchorage\"\n        },\n        {\n          \"offset\": \"GMT-09:00\",\n          \"name\": \"Pacific/Gambier\"\n        },\n        {\n          \"offset\": \"GMT-08:00\",\n          \"name\": \"America/Dawson_Creek\"\n        },\n        {\n          \"offset\": \"GMT-08:00\",\n          \"name\": \"America/Ensenada\"\n        },\n        {\n          \"offset\": \"GMT-08:00\",\n          \"name\": \"America/Los_Angeles\"\n        },\n        {\n          \"offset\": \"GMT-07:00\",\n          \"name\": \"America/Chihuahua\"\n        },\n        {\n          \"offset\": \"GMT-07:00\",\n          \"name\": \"America/Denver\"\n        },\n        {\n          \"offset\": \"GMT-06:00\",\n          \"name\": \"America/Belize\"\n        },\n        {\n          \"offset\": \"GMT-06:00\",\n          \"name\": \"America/Cancun\"\n        },\n        {\n          \"offset\": \"GMT-06:00\",\n          \"name\": \"America/Chicago\"\n        },\n        {\n          \"offset\": \"GMT-06:00\",\n          \"name\": \"Chile/EasterIsland\"\n        },\n        {\n          \"offset\": \"GMT-05:00\",\n          \"name\": \"America/Bogota\"\n        },\n        {\n          \"offset\": \"GMT-05:00\",\n          \"name\": \"America/Havana\"\n        },\n        {\n          \"offset\": \"GMT-05:00\",\n          \"name\": \"America/New_York\"\n        },\n        {\n          \"offset\": \"GMT-04:30\",\n          \"name\": \"America/Caracas\"\n        },\n        {\n          \"offset\": \"GMT-04:00\",\n          \"name\": \"America/Campo_Grande\"\n        },\n        {\n          \"offset\": \"GMT-04:00\",\n          \"name\": \"America/Glace_Bay\"\n        },\n        {\n          \"offset\": \"GMT-04:00\",\n          \"name\": \"America/Goose_Bay\"\n        },\n        {\n          \"offset\": \"GMT-04:00\",\n          \"name\": \"America/Santiago\"\n        },\n        {\n          \"offset\": \"GMT-04:00\",\n          \"name\": \"America/La_Paz\"\n        },\n        {\n          \"offset\": \"GMT-03:00\",\n          \"name\": \"America/Argentina/Buenos_Aires\"\n        },\n        {\n          \"offset\": \"GMT-03:00\",\n          \"name\": \"America/Montevideo\"\n        },\n        {\n          \"offset\": \"GMT-03:00\",\n          \"name\": \"America/Araguaina\"\n        },\n        {\n          \"offset\": \"GMT-03:00\",\n          \"name\": \"America/Godthab\"\n        },\n        {\n          \"offset\": \"GMT-03:00\",\n          \"name\": \"America/Miquelon\"\n        },\n        {\n          \"offset\": \"GMT-03:00\",\n          \"name\": \"America/Sao_Paulo\"\n        },\n        {\n          \"offset\": \"GMT-03:30\",\n          \"name\": \"America/St_Johns\"\n        },\n        {\n          \"offset\": \"GMT-02:00\",\n          \"name\": \"America/Noronha\"\n        },\n        {\n          \"offset\": \"GMT-01:00\",\n          \"name\": \"Atlantic/Cape_Verde\"\n        },\n        {\n          \"offset\": \"GMT\",\n          \"name\": \"Europe/Belfast\"\n        },\n        {\n          \"offset\": \"GMT\",\n          \"name\": \"Africa/Abidjan\"\n        },\n        {\n          \"offset\": \"GMT\",\n          \"name\": \"Europe/Dublin\"\n        },\n        {\n          \"offset\": \"GMT\",\n          \"name\": \"Europe/Lisbon\"\n        },\n        {\n          \"offset\": \"GMT\",\n          \"name\": \"Europe/London\"\n        },\n        {\n          \"offset\": \"UTC\",\n          \"name\": \"UTC\"\n        },\n        {\n          \"offset\": \"GMT+01:00\",\n          \"name\": \"Africa/Algiers\"\n        },\n        {\n          \"offset\": \"GMT+01:00\",\n          \"name\": \"Africa/Windhoek\"\n        },\n        {\n          \"offset\": \"GMT+01:00\",\n          \"name\": \"Atlantic/Azores\"\n        },\n        {\n          \"offset\": \"GMT+01:00\",\n          \"name\": \"Atlantic/Stanley\"\n        },\n        {\n          \"offset\": \"GMT+01:00\",\n          \"name\": \"Europe/Amsterdam\"\n        },\n        {\n          \"offset\": \"GMT+01:00\",\n          \"name\": \"Europe/Belgrade\"\n        },\n        {\n          \"offset\": \"GMT+01:00\",\n          \"name\": \"Europe/Brussels\"\n        },\n        {\n          \"offset\": \"GMT+02:00\",\n          \"name\": \"Africa/Cairo\"\n        },\n        {\n          \"offset\": \"GMT+02:00\",\n          \"name\": \"Africa/Blantyre\"\n        },\n        {\n          \"offset\": \"GMT+02:00\",\n          \"name\": \"Asia/Beirut\"\n        },\n        {\n          \"offset\": \"GMT+02:00\",\n          \"name\": \"Asia/Damascus\"\n        },\n        {\n          \"offset\": \"GMT+02:00\",\n          \"name\": \"Asia/Gaza\"\n        },\n        {\n          \"offset\": \"GMT+02:00\",\n          \"name\": \"Asia/Jerusalem\"\n        },\n        {\n          \"offset\": \"GMT+03:00\",\n          \"name\": \"Africa/Addis_Ababa\"\n        },\n        {\n          \"offset\": \"GMT+03:00\",\n          \"name\": \"Asia/Riyadh89\"\n        },\n        {\n          \"offset\": \"GMT+03:00\",\n          \"name\": \"Europe/Minsk\"\n        },\n        {\n          \"offset\": \"GMT+03:30\",\n          \"name\": \"Asia/Tehran\"\n        },\n        {\n          \"offset\": \"GMT+04:00\",\n          \"name\": \"Asia/Dubai\"\n        },\n        {\n          \"offset\": \"GMT+04:00\",\n          \"name\": \"Asia/Yerevan\"\n        },\n        {\n          \"offset\": \"GMT+04:00\",\n          \"name\": \"Europe/Moscow\"\n        },\n        {\n          \"offset\": \"GMT+04:30\",\n          \"name\": \"Asia/Kabul\"\n        },\n        {\n          \"offset\": \"GMT+05:00\",\n          \"name\": \"Asia/Tashkent\"\n        },\n        {\n          \"offset\": \"GMT+05:30\",\n          \"name\": \"Asia/Kolkata\"\n        },\n        {\n          \"offset\": \"GMT+05:45\",\n          \"name\": \"Asia/Katmandu\"\n        },\n        {\n          \"offset\": \"GMT+06:00\",\n          \"name\": \"Asia/Dhaka\"\n        },\n        {\n          \"offset\": \"GMT+06:00\",\n          \"name\": \"Asia/Yekaterinburg\"\n        },\n        {\n          \"offset\": \"GMT+06:30\",\n          \"name\": \"Asia/Rangoon\"\n        },\n        {\n          \"offset\": \"GMT+07:00\",\n          \"name\": \"Asia/Bangkok\"\n        },\n        {\n          \"offset\": \"GMT+07:00\",\n          \"name\": \"Asia/Novosibirsk\"\n        },\n        {\n          \"offset\": \"GMT+08:00\",\n          \"name\": \"Etc/GMT+8\"\n        },\n        {\n          \"offset\": \"GMT+08:00\",\n          \"name\": \"Asia/Hong_Kong\"\n        },\n        {\n          \"offset\": \"GMT+08:00\",\n          \"name\": \"Asia/Krasnoyarsk\"\n        },\n        {\n          \"offset\": \"GMT+08:00\",\n          \"name\": \"Australia/Perth\"\n        },\n        {\n          \"offset\": \"GMT+08:45\",\n          \"name\": \"Australia/Eucla\"\n        },\n        {\n          \"offset\": \"GMT+09:00\",\n          \"name\": \"Asia/Irkutsk\"\n        },\n        {\n          \"offset\": \"GMT+09:00\",\n          \"name\": \"Asia/Seoul\"\n        },\n        {\n          \"offset\": \"GMT+09:00\",\n          \"name\": \"Asia/Tokyo\"\n        },\n        {\n          \"offset\": \"GMT+09:30\",\n          \"name\": \"Australia/Adelaide\"\n        },\n        {\n          \"offset\": \"GMT+09:30\",\n          \"name\": \"Australia/Darwin\"\n        },\n        {\n          \"offset\": \"GMT+09:30\",\n          \"name\": \"Pacific/Marquesas\"\n        },\n        {\n          \"offset\": \"GMT+10:00\",\n          \"name\": \"Etc/GMT+10\"\n        },\n        {\n          \"offset\": \"GMT+10:00\",\n          \"name\": \"Australia/Brisbane\"\n        },\n        {\n          \"offset\": \"GMT+10:00\",\n          \"name\": \"Australia/Hobart\"\n        },\n        {\n          \"offset\": \"GMT+10:00\",\n          \"name\": \"Asia/Yakutsk\"\n        },\n        {\n          \"offset\": \"GMT+10:30\",\n          \"name\": \"Australia/Lord_Howe\"\n        },\n        {\n          \"offset\": \"GMT+11:00\",\n          \"name\": \"Asia/Vladivostok\"\n        },\n        {\n          \"offset\": \"GMT+11:30\",\n          \"name\": \"Pacific/Norfolk\"\n        },\n        {\n          \"offset\": \"GMT+12:00\",\n          \"name\": \"Etc/GMT+12\"\n        },\n        {\n          \"offset\": \"GMT+12:00\",\n          \"name\": \"Asia/Anadyr\"\n        },\n        {\n          \"offset\": \"GMT+12:00\",\n          \"name\": \"Asia/Magadan\"\n        },\n        {\n          \"offset\": \"GMT+12:00\",\n          \"name\": \"Pacific/Auckland\"\n        },\n        {\n          \"offset\": \"GMT+12:45\",\n          \"name\": \"Pacific/Chatham\"\n        },\n        {\n          \"offset\": \"GMT+13:00\",\n          \"name\": \"Pacific/Tongatapu\"\n        },\n        {\n          \"offset\": \"GMT+14:00\",\n          \"name\": \"Pacific/Kiritimati\"\n        }\n      ]);\n\n      const [enterprise, setEnterprise] = useState('');\n      const [contacto, setContacto] = useState('');\n      const [name, setName] = useState('');\n      const [email, setEmail] = useState('');\n      const [password, setPassword] = useState('');\n      const [phone, setPhone] = useState('');\n      const [movil, setMovil] = useState('');\n      const [direccion, setDireccion] = useState('');\n      const [webSite, setWebSite] = useState('');\n      const [users, setUsers] = useState([]);\n      const [tz, setTz] = useState('');\n      const [attributes, setAttributes] = useState([]);\n      const [client, setClient] = useState('');\n\n      const handleEnviar = async () => {\n        const response = await fetch('/api/users', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json',\n                     'Credentials': 'include',\n                     'Accept':'*/*'    },\n          body: JSON.stringify({name, email, password, phone, attributes: {direccion, webSite, movil, contacto, enterprise, tz, client}})\n        });\n    \n        if (response.ok) {\n            console.log('Estado: 200')\n        } \n      }\n\n\n    const handleMostarar = async() => {\n        const response = await fetch('/api/users', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Credentials': 'include',\n                'Accept':'*/*',\n            }\n        }).then(response =>response.json()\n        .then(data=>{setUsers(data)})\n        );\n    }\n\n    useEffect(() => {\n        handleMostarar();\n    }, []);\n\n    const enviar = (e) => {\n        e.preventDefault();\n        handleEnviar();\n    }\n\n\n\n    return(\n        <sd.add_user_page_h100b>\n            <sd.block_titlebar>Añadir al cliente &nbsp; &nbsp; <sd.set_template><ri.VscGear /> Configuración</sd.set_template></sd.block_titlebar>\n\n            <sd.has_titlebar_content>\n                <sd.el_scrollbar_wrap>\n                    <sd.el_scrollbar_view>\n                        <sd.submit_form_box>\n                            <sd.el_form_user_add_half_form>\n\n                                <sd.el_row>\n\n                                    <sd.el_form_item_online_is_required>\n                                        <sd.el_form_item_label>Atención al cliente superior</sd.el_form_item_label>\n                                        <sd.el_form_item_content>\n                                            <sd.user_tree_select>\n                                                <sd.data_tips_ >\n                                                    <sd.el_auto_complete aria-haspopup=\"listbox\" role=\"combobox\" aria-owns=\"el_auto_complete_5676\">\n                                                        <sd.el_input_group>\n                                                            <sd.select onChange={event => setClient(event.target.value)}>\n                                                            <optgroup label=\"admin\">\n                                                            {users.length > 0 &&\n                                                            users.map(item => (\n                                                            <option key={item._id} value={item.name}>\n                                                            {item.name}\n                                                             </option>\n                                                            ))}\n                                                            </optgroup>\n                                                            </sd.select>\n                                                            <sd.el_input_group_append><sd.el_button_select_btn><ri.MdKeyboardArrowDown/></sd.el_button_select_btn></sd.el_input_group_append>\n                                                        </sd.el_input_group>\n                                                    </sd.el_auto_complete>\n                                                </sd.data_tips_>\n                                            </sd.user_tree_select>\n                                        </sd.el_form_item_content>\n                                    </sd.el_form_item_online_is_required>\n\n                                    <sd.el_form_item_is_required>\n                                        <sd.el_form_item_label>Cuenta de inicio de sesión</sd.el_form_item_label>\n                                        <sd.el_form_item_content>\n                                            <sd.el_input_suffix>\n                                                <sd.el_input_inner onChange={event => setName(event.target.value)}/>\n                                            </sd.el_input_suffix>\n                                        </sd.el_form_item_content>\n                                    </sd.el_form_item_is_required>\n\n                                    <sd.el_form_item>\n                                        <sd.el_form_item_label>Nombre de la empresa</sd.el_form_item_label>\n                                        <sd.el_form_item_content>\n                                            <sd.el_input_suffix>\n                                                <sd.el_input_inner onChange={event => setEnterprise(event.target.value)}/>\n                                            </sd.el_input_suffix>\n                                        </sd.el_form_item_content>\n                                    </sd.el_form_item>\n\n                                    <sd.el_form_item_is_required>\n                                        <sd.el_form_item_label>Contraseña</sd.el_form_item_label>\n                                        <sd.el_form_item_content>\n                                            <sd.el_input_suffix>\n                                                <sd.el_input_inner type=\"password\" onChange={event => setPassword(event.target.value)}/>\n                                            </sd.el_input_suffix>\n                                        </sd.el_form_item_content>\n                                    </sd.el_form_item_is_required>\n\n                                    <sd.el_form_item>\n                                        <sd.el_form_item_label>Confirmar contraseña</sd.el_form_item_label>\n                                        <sd.el_form_item_content>\n                                            <sd.el_input_suffix>\n                                                <sd.el_input_inner type=\"password\"/>\n                                            </sd.el_input_suffix>\n                                        </sd.el_form_item_content>\n                                    </sd.el_form_item>\n\n                                    <sd.el_form_item_online_is_required>\n                                        <sd.el_form_item_label>Tipo de cliente</sd.el_form_item_label>\n                                        <sd.el_form_item_content>\n                                            <sd.el_radio></sd.el_radio>\n                                            <sd.el_radio></sd.el_radio>\n                                            <sd.el_radio></sd.el_radio>\n                                            <sd.el_radio></sd.el_radio>\n                                        </sd.el_form_item_content>\n                                    </sd.el_form_item_online_is_required>\n\n                                    <sd.el_form_item_online_is_required>\n                                        <sd.el_form_item_label>Zona horaria</sd.el_form_item_label>\n                                        <sd.el_form_item_content>\n                                            <sd.user_tree_select>\n                                                <sd.data_tips_ >\n                                                    <sd.el_auto_complete aria-haspopup=\"listbox\" role=\"combobox\" aria-owns=\"el_auto_complete_5676\">\n                                                        <sd.el_input_group>\n                                                        <sd.select onChange={event => setTz(event.target.value)}>\n                                                            {timeZones.length > 0 &&\n                                                            timeZones.map(item => (\n                                                            <option key={item._id} value={item.offset}>\n                                                            {item.offset}\n                                                             </option>\n                                                            ))}\n                                                            </sd.select>\n                                                            <sd.el_input_group_append><sd.el_button_select_btn><ri.MdKeyboardArrowDown/></sd.el_button_select_btn></sd.el_input_group_append>\n                                                        </sd.el_input_group>\n                                                    </sd.el_auto_complete>\n                                                </sd.data_tips_>\n                                            </sd.user_tree_select>\n                                        </sd.el_form_item_content>\n                                    </sd.el_form_item_online_is_required>\n\n                                    <sd.el_form_item_is_required>\n                                        <sd.el_form_item_label>Contacto</sd.el_form_item_label>\n                                        <sd.el_form_item_content>\n                                            <sd.el_input_suffix>\n                                                <sd.el_input_inner onChange={event => setContacto(event.target.value)}/>\n                                            </sd.el_input_suffix>\n                                        </sd.el_form_item_content>\n                                    </sd.el_form_item_is_required>\n\n                                    <sd.el_form_item>\n                                        <sd.el_form_item_label>Móvil</sd.el_form_item_label>\n                                        <sd.el_form_item_content>\n                                            <sd.el_input_suffix>\n                                                <sd.el_input_inner type=\"tel\" onChange={event => setMovil(event.target.value)}/>\n                                            </sd.el_input_suffix>\n                                        </sd.el_form_item_content>\n                                    </sd.el_form_item>\n\n                                    <sd.el_form_item_is_required>\n                                        <sd.el_form_item_label>Teléfono</sd.el_form_item_label>\n                                        <sd.el_form_item_content>\n                                            <sd.el_input_suffix>\n                                                <sd.el_input_inner type=\"tel\" onChange={event => setPhone(event.target.value)}/>\n                                            </sd.el_input_suffix>\n                                        </sd.el_form_item_content>\n                                    </sd.el_form_item_is_required>\n\n                                    <sd.el_form_item>\n                                        <sd.el_form_item_label>Correo electrónico</sd.el_form_item_label>\n                                        <sd.el_form_item_content>\n                                            <sd.el_input_suffix>\n                                                <sd.el_input_inner onChange={event => setEmail(event.target.value)}/>\n                                            </sd.el_input_suffix>\n                                        </sd.el_form_item_content>\n                                    </sd.el_form_item>\n\n                                    <sd.el_form_item_is_required>\n                                        <sd.el_form_item_label>Dirección</sd.el_form_item_label>\n                                        <sd.el_form_item_content>\n                                            <sd.el_input_suffix>\n                                                <sd.el_input_inner onChange={event => setDireccion(event.target.value)}/>\n                                            </sd.el_input_suffix>\n                                        </sd.el_form_item_content>\n                                    </sd.el_form_item_is_required>\n\n                                    <sd.el_form_item>\n                                        <sd.el_form_item_label>Página web</sd.el_form_item_label>\n                                        <sd.el_form_item_content>\n                                            <sd.el_input_suffix>\n                                                <sd.el_input_inner onChange={event => setWebSite(event.target.value)}/>\n                                            </sd.el_input_suffix>\n                                        </sd.el_form_item_content>\n                                    </sd.el_form_item>\n                                    \n\n                                </sd.el_row>\n\n                                <sd.el_form_item_form_btn_box>\n                                    <sd.el_form_item_content>\n                                        <sd.el_button_primary onClick={enviar}><span>Confirmar</span></sd.el_button_primary>\n                                        <sd.el_button_default><span>Reiniciar</span></sd.el_button_default>\n                                    </sd.el_form_item_content>\n                                </sd.el_form_item_form_btn_box>\n\n                            </sd.el_form_user_add_half_form>\n                        </sd.submit_form_box>\n                    </sd.el_scrollbar_view>\n                </sd.el_scrollbar_wrap>\n            </sd.has_titlebar_content>\n\n        </sd.add_user_page_h100b>\n    )\n\n\n}\n\nexport default T;","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoMonitor/Monitor.js",["702","703","704","705","706"],"import React, { useEffect, useState } from 'react';\n\nimport * as s from './Monitor.styles';\n\nimport MainView from '../MainView/MainView';\n\nimport Draggable from 'react-draggable';\n\nimport BarraInferior from '../BarraInferior/BarraInferior';\nimport BarraLateral from '../BarraLateral/BarraLateral';\n\nimport * as fa from 'react-icons/fa';\nimport * as ai from 'react-icons/ai';\nimport {GiFootprint} from \"react-icons/gi\";\nimport {VscThreeBars} from \"react-icons/vsc\";\nimport {BiTargetLock} from \"react-icons/bi\";\nimport {BsThreeDotsVertical, BsDot} from \"react-icons/bs\";\n\nimport * as sapp from '../../App.styles'\n\nimport './submenustyles.css';\n\nimport Todos from './Todos';\nimport Online from './Online';\nimport Offline from './Offline';\n\n\n\nconst ContenidoMonitor = (props) => {\n    const [contador, setContador] = React.useState(10);\n    const [toggle, setToggle] = React.useState(false);\n    const [device, setDevice] = useState([])\n    const [deviceOption, setDeviceOption] = useState(1)\n    var disponibles = 0;\n    device.forEach((data) => {\n        /* console.log(data) */\n        if (data.status === \"online\") {\n            disponibles = disponibles + 1;\n            /* console.log(disponibles) */\n        }\n    })\n    useEffect(() => {\n        const interval = setInterval(() => {\n            Devices()\n        }, 10000);\n        return () => clearInterval(interval);\n    }, [])\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resultado = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n                /* .then(response => response.json())\n                .catch(error => console.log('error', error)); */\n                const deviceData = await resultado.json();\n                /* console.log(deviceData) */\n                setDevice(deviceData);\n                /* console.log(device) */\n    }\n\n    const DeviceOpt = () => {\n        if (deviceOption === 1) { return <Todos/> }\n        if (deviceOption === 2) { return <Online />}\n        if (deviceOption === 3) { return <Offline />}\n    }\n\n    const handleToggle = () => {\n        setToggle(!toggle)\n        /* console.log(toggle); */\n    }\n\n    React.useEffect(()=> {\n        contador > 0 && setTimeout(() => setContador(contador -1), 1000);\n        if(contador == 0) {\n            setContador(10);\n        }\n    }, [contador])\n\n    return(\n        <s.App>\n            <sapp.content_box>\n        <s.contenido_monitor>\n\n            <s.caja_direccion_dispositivo><span></span></s.caja_direccion_dispositivo>\n\n            <s.refrescar>\n                <span>\"Refrescarse después de \"\n                    <s.refTemporizador>{contador}</s.refTemporizador>\n                    \" segundos\"\n                </span>\n            </s.refrescar>\n\n            <s.caja_dispositivo_pequena visibility={toggle} onClick={handleToggle}/>\n\n            \n            <Draggable bounds=\"parent\">\n            <s.caja_dispositivo_panel visibility={toggle} style={{left:'0px', top:'0px'}}>\n                \n                <s.caja_dispositivo_titulo >\n                \n                    <s.barra_arrastable />\n                    <s.barra_superior_titulo>\n                    &nbsp;\n                         &nbsp;<fa.FaLaptop />&nbsp;&nbsp;Mis Metas\n                    </s.barra_superior_titulo>\n                    <s.opcion_derecha onClick={handleToggle} visibility={toggle}/>\n                </s.caja_dispositivo_titulo>\n\n                <s.contenido_panel_dispositivo>\n                    <s.busqueda_dispositivo>\n\n                        <s.busqueda_en_linea aria-haspopup=\"listbox\" role=\"combobox\" aria-owns=\"el-complete-8812\">\n                            <s.sufijo_entrada>\n                                <s.entrada_interna type='text' autoComplete='off' valuekey='value' placeholder='Objetivo/IMEI' />\n                                \n                              {/*  <s.el_input__suffix>\n                                    <s.el_input__suffix_inner>\n                                       <s.icono_cerrar>\n                                            <ai.AiOutlineClose/>   \n                                        </s.icono_cerrar> \n                                    </s.el_input__suffix_inner>\n                                </s.el_input__suffix>\n                                                        */}\n                             {/* agregar el icono de cerrar */}\n                            </s.sufijo_entrada>\n                        </s.busqueda_en_linea>\n                    </s.busqueda_dispositivo>\n                    <s.submenu1>\n                        <s.submenu1left>\n                            <s.seguirSpan><GiFootprint/></s.seguirSpan>\n                            <s.listado><VscThreeBars/></s.listado>\n                        </s.submenu1left>\n                        <s.submenu1right>\n                            <s.ordenarList>\n                                <option value=\"name\">Nombre</option>\n                                <option value=\"status\">Estado</option>\n                                <option value=\"speed\">Velocidad</option>\n                            </s.ordenarList>\n                            <s.objetivo>T</s.objetivo>\n                            <s.rastreador><BiTargetLock/></s.rastreador>\n                        </s.submenu1right>\n                    </s.submenu1>\n                    <s.submenu2>\n                        <s.submenu2opciones>\n                            <s.submenu2opcionesli onClick={() => setDeviceOption(1)} className={deviceOption === 1 ? 'submenuclass' : ''}>Todos ({device.length})</s.submenu2opcionesli>\n                            <s.submenu2opcionesli onClick={() => setDeviceOption(2)} className={deviceOption === 2 ? 'submenuclass' : ''}>En Linea ({disponibles})</s.submenu2opcionesli>\n                            <s.submenu2opcionesli onClick={() => setDeviceOption(3)} className={deviceOption === 3 ? 'submenuclass' : ''}>Fuera de Linea</s.submenu2opcionesli>\n                        </s.submenu2opciones>\n                    </s.submenu2>\n                    {\n                        DeviceOpt()\n                    }\n                </s.contenido_panel_dispositivo>\n\n                <s.arbol_caja_monitor>\n                    <s.titulo_caja>\n                        <s.icono_fondo>\n                            <ai.AiFillCaretDown />\n                        </s.icono_fondo>\n                    </s.titulo_caja>\n                </s.arbol_caja_monitor>  \n            </s.caja_dispositivo_panel>\n            \n            </Draggable> \n            \n\n            <MainView />\n            \n        </s.contenido_monitor>\n        </sapp.content_box>\n        </s.App>\n    );\n\n}\n\nexport default ContenidoMonitor;\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Reportes.js",["707","708"],"import React, { useContext, useState } from 'react'\nimport * as s from './Reportes.styles';\nimport * as sapp from '../../App.styles'\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemHeading,\n    AccordionItemButton,\n    AccordionItemPanel,\n} from 'react-accessible-accordion';\nimport './styles.css';\n\n/* Estadisticas de Operación */\nimport InfoGral from './Components/EstadisticasOp/InfoGral';\nimport InfoKilo from './Components/EstadisticasOp/InfoKilo';\nimport DetallesVel from './Components/EstadisticasOp/DetallesVel';\nimport DetallesEstadia from './Components/EstadisticasOp/DetallesEstadia';\n/* Reportes de Viaje */\nimport ReportesViaje from './Components/ReportesViaje/ReportesViaje';\nimport InformeViaje from './Components/ReportesViaje/InformeViaje';\n/* Comportamiento */\nimport VisionGral from './Components/Comportamiento/VisionGral';\nimport InformeComp from './Components/Comportamiento/InformeComp';\nimport DetallesComp from './Components/Comportamiento/DetallesComp';\n/* ACC */\nimport VisionAcc from './Components/ACC/VisionAcc';\nimport ReporteAcc from './Components/ACC/ReporteAcc';\nimport InformeRM from './Components/ACC/InformeRM';\n/* Reporte de Información del Vehículo */\nimport InfoCombustible from './Components/InfoVehiculo/InfoCombustible';\nimport InfoPresNeu from './Components/InfoVehiculo/InfoPresNeu';\nimport TemperatureReport from './Components/InfoVehiculo/TemperatureReport';\n/* Informe OBD */\nimport DetailsCombViaje from './Components/OBD/DetailsCombViaje';\nimport ResCombViaje from './Components/OBD/ResCombViaje';\nimport InfoDTC from './Components/OBD/InfoDTC';\n/* Estadística de Alarma */\nimport GralAlarma from './Components/StatusAlarm/GralAlarma';\nimport StatusAlarma from './Components/StatusAlarm/StatusAlarma';\nimport DetailsAlarma from './Components/StatusAlarm/DetailsAlarma';\n\n/* Generar Reportes */\nimport GeneReportes from './Components/GeneReportes/GeneReportes';\n\n/* CONTEXT */\nimport {MenContext} from '../../Context/MenuContext';\n\nconst Reportes = () => {\n    const { submenuOp, setSubmenuOp } = useContext(MenContext);\n    const [vista, setVista] = useState(1);\n    const contenido = () =>{\n        if (submenuOp === 1) {return <InfoGral />}\n        if (submenuOp === 2) {return <InfoKilo />}\n        if (submenuOp === 3) {return <DetallesVel />}\n        if (submenuOp === 4) {return <DetallesEstadia />}\n        if (submenuOp === 5) {return <ReportesViaje />}\n        if (submenuOp === 6) {return <InformeViaje />}\n        if (submenuOp === 7) {return <VisionGral />}\n        if (submenuOp === 8) {return <InformeComp />}\n        if (submenuOp === 9) {return <DetallesComp />}\n        if (submenuOp === 10) {return <VisionAcc />}\n        if (submenuOp === 11) {return <ReporteAcc />}\n        if (submenuOp === 12) {return <InformeRM />}\n        if (submenuOp === 13) {return <InfoCombustible />}\n        if (submenuOp === 14) {return <InfoPresNeu />}\n        if (submenuOp === 15) {return <TemperatureReport />}\n        if (submenuOp === 16) {return <ResCombViaje />}\n        if (submenuOp === 17) {return <DetailsCombViaje />}\n        if (submenuOp === 18) {return <InfoDTC />}\n        if (submenuOp === 19) {return <GralAlarma />}\n        if (submenuOp === 20) {return <StatusAlarma />}\n        if (submenuOp === 21) {return <DetailsAlarma />}\n        if (submenuOp === 22) {return <GeneReportes />}\n        if (submenuOp === 23) {return <GeneReportes />}\n    }\n    return (\n        <s.App>\n            <sapp.content_box>\n        <s.contenido_monitor>\n            <s.caja_dispositivo_panel style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n                <s.caja_dispositivo_titulo >\n                \n                    <s.barra_arrastable />\n                    <s.barra_superior_titulo>\n                    &nbsp;\n                        &nbsp;<BiBarChart />&nbsp;&nbsp;Informes Generales\n                    </s.barra_superior_titulo>\n                </s.caja_dispositivo_titulo>\n\n                <s.contenido_panel_dispositivo>\n                    <Accordion>\n                        <AccordionItem>\n                            <AccordionItemHeading>\n                                <AccordionItemButton><AiFillCaretDown/> Estadísticas de Operación</AccordionItemButton>\n                            </AccordionItemHeading>\n                            <AccordionItemPanel>\n                                <s.submenu2opciones style={{ listStyle:'none' }}>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(1)} className={submenuOp === 1 ? 'menumenu' : ''}>Información General de Moviemiento</s.submenu2opcionesli>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(2)} className={submenuOp === 2 ? 'menumenu' : ''}>Informe sobre Kilometraje</s.submenu2opcionesli>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(3)} className={submenuOp === 3 ? 'menumenu' : ''}>Detalles de exceso de velocidad</s.submenu2opcionesli>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(4)} className={submenuOp === 4 ? 'menumenu' : ''}>Detalles de Estadia</s.submenu2opcionesli>\n                                </s.submenu2opciones>\n                            </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                            <AccordionItemHeading>\n                                <AccordionItemButton><AiFillCaretDown/> Reporte de Viaje</AccordionItemButton>\n                            </AccordionItemHeading>\n                            <AccordionItemPanel>\n                                <s.submenu2opciones style={{ listStyle:'none' }}>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(5)} className={submenuOp === 5 ? 'menumenu' : ''}>Reporte de Viaje</s.submenu2opcionesli>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(6)} className={submenuOp === 6 ? 'menumenu' : ''}>Informe de viaje en exceso de velocidad</s.submenu2opcionesli>\n                                </s.submenu2opciones>\n                            </AccordionItemPanel>\n                        </AccordionItem>\n                        {/* <AccordionItem>\n                            <AccordionItemHeading>\n                                <AccordionItemButton><AiFillCaretDown/> Informe de Comportamiento de conducción</AccordionItemButton>\n                            </AccordionItemHeading>\n                            <AccordionItemPanel>\n                                <s.submenu2opciones style={{ listStyle:'none' }}>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(7)} className={submenuOp === 7 ? 'menumenu' : ''}>Visión general del comportamiento de conducción</s.submenu2opcionesli>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(8)} className={submenuOp === 8 ? 'menumenu' : ''}>Informe de comportamiento de conducción</s.submenu2opcionesli>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(9)} className={submenuOp === 9 ? 'menumenu' : ''}>Detalles del comportamiento de conducción</s.submenu2opcionesli>\n                                </s.submenu2opciones>\n                            </AccordionItemPanel>\n                        </AccordionItem> */}\n                        <AccordionItem>\n                            <AccordionItemHeading>\n                                <AccordionItemButton> <AiFillCaretDown/>Reporte de ACC (Encendido)</AccordionItemButton>\n                            </AccordionItemHeading>\n                            <AccordionItemPanel>\n                                <s.submenu2opciones style={{ listStyle:'none' }}>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(10)} className={submenuOp === 10 ? 'menumenu' : ''}>Visión general del ACC</s.submenu2opcionesli>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(11)} className={submenuOp === 11 ? 'menumenu' : ''}>Reporte de ACC (Encendido)</s.submenu2opcionesli>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(12)} className={submenuOp === 12 ? 'menumenu' : ''}>Informe de Ralenté Mínimo</s.submenu2opcionesli>\n                                </s.submenu2opciones>\n                            </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                            <AccordionItemHeading>\n                                <AccordionItemButton><AiFillCaretDown/> Reporte de Información del Vehículo</AccordionItemButton>\n                            </AccordionItemHeading>\n                            <AccordionItemPanel>\n                                <s.submenu2opciones style={{ listStyle:'none' }}>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(13)} className={submenuOp === 13 ? 'menumenu' : ''}>Informe de Combustible</s.submenu2opcionesli>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(14)} className={submenuOp === 14 ? 'menumenu' : ''}>Informe de presión de neúmaticos</s.submenu2opcionesli>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(15)} className={submenuOp === 15 ? 'menumenu' : ''}>Temperature Report</s.submenu2opcionesli>\n                                </s.submenu2opciones>\n                            </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                            <AccordionItemHeading>\n                                <AccordionItemButton><AiFillCaretDown/> Informe OBD</AccordionItemButton>\n                            </AccordionItemHeading>\n                            <AccordionItemPanel>\n                                <s.submenu2opciones style={{ listStyle:'none' }}>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(16)} className={submenuOp === 16 ? 'menumenu' : ''}>Resumen de consumo de combustible de viaje</s.submenu2opcionesli>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(17)} className={submenuOp === 17 ? 'menumenu' : ''}>Detalles de consumo de combustible de viaje</s.submenu2opcionesli>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(18)} className={submenuOp === 18 ? 'menumenu' : ''}>Informe DTC</s.submenu2opcionesli>\n                                </s.submenu2opciones>\n                            </AccordionItemPanel>\n                        </AccordionItem>\n                        <AccordionItem>\n                            <AccordionItemHeading>\n                                <AccordionItemButton><AiFillCaretDown/> Estadística de Alarma</AccordionItemButton>\n                            </AccordionItemHeading>\n                            <AccordionItemPanel>\n                                <s.submenu2opciones style={{ listStyle:'none' }}>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(19)} className={submenuOp === 19 ? 'menumenu' : ''}>Descripción General de Alarma</s.submenu2opcionesli>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(20)} className={submenuOp === 20 ? 'menumenu' : ''}>Estadística de Alarma</s.submenu2opcionesli>\n                                    <s.submenu2opcionesli onClick={() => setSubmenuOp(21)} className={submenuOp === 21 ? 'menumenu' : ''}>Detalle de Alarma</s.submenu2opcionesli>\n                                </s.submenu2opciones>\n                            </AccordionItemPanel>\n                        </AccordionItem>\n                    </Accordion>\n                </s.contenido_panel_dispositivo>  \n            </s.caja_dispositivo_panel>\n            {/* TODO: AQUI VA EL CONTENIDO DE LA SECCION */}\n            <s.contentReportes>\n                {contenido()}\n            </s.contentReportes>    \n        </s.contenido_monitor>\n        </sapp.content_box>\n        </s.App>\n    )\n}\n\nexport default Reportes\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Dispositivo.js",["709","710"],"import React, { useContext, useState } from 'react'\nimport * as s from './Dispositivo.styles';\nimport * as sapp from '../../App.styles'\n\n\nimport './styles.css';\n\nimport ConfigDispositivos from './Components/ConfigDispositvos';\nimport DetallesAlarma from './Components/DetallesAlarma';\nimport HorarioComand from './Components/HorarioComand';\nimport AdminNotify from './Components/AdminNotify';\nimport GestionMan from './Components/GestionMan';\nimport GestionLinks from './Components/GestionLinks';\n\n/* Context */\nimport {MenContext} from '../../Context/MenuContext';\n\n\nconst Dispositivo = () => {\n    const { submenuOp, setSubmenuOp } = useContext(MenContext);\n\n    const contenido = () =>{\n        if (submenuOp === 24) {return <ConfigDispositivos />}\n        if (submenuOp === 25) {return <DetallesAlarma />}\n        if (submenuOp === 26) {return <HorarioComand />}\n        if (submenuOp === 27) {return <AdminNotify />}\n        if (submenuOp === 28) {return <GestionMan />}\n        if (submenuOp === 29) {return <GestionLinks />}\n    }\n    return (\n        <s.App>\n            <sapp.content_box>\n        <s.contenido_monitor>\n            {/* TODO: AQUI VA EL CONTENIDO DE LA SECCION */}\n            <s.contentReportes>\n                {contenido()}\n            </s.contentReportes>    \n        </s.contenido_monitor>\n        </sapp.content_box>\n        </s.App>\n    )\n}\n\nexport default Dispositivo\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/Mapa.js",["711","712","713","714","715","716","717"],"import React, { useEffect, useState } from 'react'\nimport {MapContainer, Marker, Popup, TileLayer, ZoomControl, LayersControl, useMap, Circle, LayerGroup } from 'react-leaflet';\n\nimport '../../styles/mapa.css';\nimport L from 'leaflet';\n\nimport icon from '../../assets/images/arrow_n.png';\n\nconst Mapa = ({datos}) => {\n\n    let DefaultIcon = L.icon({\n        iconUrl: icon,\n    });\n\n\n\n    return(\n        <MapContainer center={[datos.latitude, datos.longitude]} zoom={13} zoomControl={false} minZoom={0} maxZoom={21} scrollWheelZoom={true}>\n        <LayersControl position=\"bottomright\">\n            <LayersControl.BaseLayer checked name=\"Google\">\n            <TileLayer\n            url=\"http://www.google.cn/maps/vt?lyrs=m@189,traffic&gl=cn&x={x}&y={y}&z={z}\"\n            attribution=\"Datos del mapa &copy; 2020 INEGI México\"/>\n            </LayersControl.BaseLayer>\n\n            <LayersControl.BaseLayer checked={window.valorCapaGh} name=\"Híbrido\">\n            <TileLayer\n            url=\"http://www.google.com/maps/vt?lyrs=s@189,traffic&gl=cn&x={x}&y={y}&z={z}\"\n            attribution=\"Datos del mapa &copy; 2020 INEGI México\"/>\n            </LayersControl.BaseLayer>\n\n            <LayersControl.BaseLayer checked={window.valorCapaGt} name=\"Terreno\">\n            <TileLayer\n            url=\"http://www.google.cn/maps/vt?lyrs=p@189,traffic&gl=cn&x={x}&y={y}&z={z}\"\n            attribution=\"Datos del mapa &copy; 2020 INEGI México\"/>\n            </LayersControl.BaseLayer>\n\n            <LayersControl.BaseLayer checked={window.valorCapaOsm} name=\"Open Street Maps\">\n            <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contribuidores'/>\n            </LayersControl.BaseLayer>\n\n            <LayersControl.BaseLayer checked={window.valorCapaOsmBn} name=\"Open Street Maps Blanco y Negro\">\n            <TileLayer\n            url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contribuidores'/>\n            </LayersControl.BaseLayer>\n\n            <LayersControl.BaseLayer checked={window.valorCapaBing}  name=\"Bing\">\n            <TileLayer\n            url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contribuidores'/>\n            </LayersControl.BaseLayer>\n        </LayersControl>\n        <Marker position={[datos.latitude, datos.longitude]} icon={DefaultIcon}></Marker>\n        </MapContainer>\n        \n    )\n}\n\nexport default Mapa;","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraLateral/BarraLateral.js",["718","719","720","721","722","723"],"import React, { useContext, useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport '../../styles/modals.css';\nimport {\n    BrowserRouter as Router,\n    useHistory,\n  } from \"react-router-dom\";\n\nimport * as s from './BarraLateral.styles';\nimport perfil from '../../assets/images/perfil.jpg';\n\nimport * as ic from 'react-icons/all';\nimport { getSessionCookie } from '../../sessions';\n\nimport * as Cookies from 'js-cookie';\n\nimport './styles.css'\n\n/* Modals */\nimport ContenidoCuenta from '../ContenidoCuenta/ContenidoCuenta';\nimport ProveedorServicios from '../ProveedorServicios/ProveedorServicios';\nimport ModificarPassword from '../ModificarPassword/ModificarPassword';\nimport RegistroSesion from '../RegistroSesion/RegistroSesion';\nimport ManualUsuario from '../ManualUsuario/ManualUsuario';\nimport Mensajes from '../Mensajes/Mensajes';\nimport Preferencias from '../Preferencias/Preferencias';\nimport ApiGoogle from '../ApiGoogle/ApiGoogle';\nimport Notificaciones from '../Notificaciones/Notificaciones';\n\nimport {MenContext} from '../../Context/MenuContext';\n\nModal.setAppElement('#root');\n\nconst BarraLateral = (props) => {\n\n    const [sesion, setSesion] = useState(false);\n    const history = useHistory();\n\n    const handleSalir = (e) => {\n        e.preventDefault();\n        salir();\n    }\n\n    const consultarDispositivos = async() => {\n\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        myHeaders.append(\"Accept\", \"*/*\");\n\n        var requestOptions = {\n            method: 'GET',\n            credentials: 'include',\n            headers: myHeaders,\n            redirect: 'follow'\n          };\n          \n           await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            .then(response => response.text())\n            .then(result => console.log(result))\n            .catch(error => console.log('error', error));\n    }\n\n    const handleDevices = () =>{\n        consultarDispositivos();\n    }\n\n    const Probar = () => {\n        var requestOptions = {\n            method: 'GET',\n            redirect: 'manual'\n        }\n        fetch('http://52.36.58.203:7082/api/session?token='+Cookies.get('session'), requestOptions)\n        .then((response) => {\n            if(response.ok) {\n                salir();\n                Cookies.remove('session');\n                history.push('/');\n\n            }else{\n                console.log('ASKI');\n            }\n        })\n        .catch(error => console.log('error', error));\n        {/*Cookies.remove(\"session\");\n        history.push(\"/\");\n        console.log(Cookies)\n          fetch(\"http://52.36.58.203:7082/api/session\")\n            .then(response => response.text())\n            .then(result => console.log(result))\n        .catch(error => console.log('error', error));*/}\n    }\n\n    const redireccionar = () => {\n        history.push(\"/\")\n    }\n\n    const salir = async() => {\n        var myHeaders = new Headers();\n\n        var requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow',\n            credentials: 'include'\n        };\n\n        fetch(\"https://www.protrack.ad105.net/api/session\", requestOptions)\n        .then((response) => {\n            console.log('Estado'+response.status)\n            if(response.status === 204){\n                alert('Sesión finalizada')\n                redireccionar();\n            }else{\n                alert('Ocurrió un error')\n            }\n        }).catch(error => console.log('error: ', error))\n    }\n    /* State Modal */\n    const [modalCuenta, setModalCuenta] = useState(false);\n    const [modalServicios, setModalServicios] = useState(false);\n    const [modalModPassword, setModalModPassword] = useState(false);\n    const [modalRegistroSesion, setModalRegistroSesion] = useState(false);\n    const [modalManualUsuario, setModalManualUsuario] = useState(false);\n    const [modalMensajes, setModalMensajes] = useState(false);\n    const [modalPreferencias, setModalPreferencias] = useState(false);\n    const [modalApiGoogle, setModalApiGoogle] = useState(false);\n    const [modalNotificaciones, setModalNotificaciones] = useState(false);\n\n\n    /* useContext */\n    const { menuOp, setMenuOp, submenuOp, setSubmenuOp } = useContext(MenContext);\n    return (\n        <Router>\n        <s.menu_caja>\n\n            <s.cuenta>\n                <s.caja_imagen onClick={() => setModalCuenta(true)} style={{ backgroundImage: `url(${perfil})` }} />\n                <s.nombre_cuenta>demo</s.nombre_cuenta>\n                <s.submenu_perfil >\n                    <s.submenu_elemento onClick={() => setModalCuenta(true)}><ic.FiUserPlus /> Cuenta</s.submenu_elemento>\n                    <s.submenu_elemento onClick={() => setModalServicios(true)}><ic.FaUserAlt /> Proveedor de servicios</s.submenu_elemento>\n                    <s.submenu_elemento onClick={() => setModalModPassword(true)}><ic.AiFillLock /> Modificar la contraseña</s.submenu_elemento>\n                    <s.submenu_elemento onClick={() => setModalRegistroSesion(true)}><ic.FaUser /> Registro de inicio de sesión</s.submenu_elemento>\n                    <s.submenu_elemento onClick={() => setModalManualUsuario(true)}><ic.AiOutlineCloudDownload /> Manual de usuario</s.submenu_elemento>\n                </s.submenu_perfil>\n            </s.cuenta>\n            {/* MODALS */}\n            {/* Modal Cuenta */}\n            <Modal \n                isOpen={modalCuenta}\n                onRequestClose={() => setModalCuenta(false)}\n                style={{\n                    overlay: {\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        right: 0,\n                        bottom: 0,\n                        backgroundColor: 'rgba(15, 15, 15, 0.507)'\n                    },\n                    content: {\n                        width: 650,\n                        height: 478\n                    }\n                }}\n            >\n                <s.HeaderModal>\n                    <s.TituloModal><ic.FiUserPlus /> Cuenta</s.TituloModal>\n                    <s.CerrarModal onClick={() => setModalCuenta(false)}>+</s.CerrarModal>\n                </s.HeaderModal>\n                <ContenidoCuenta/>\n                <s.DivBotones>\n                    <s.BotonCancelar onClick={() => setModalCuenta(false)}>Cancelar</s.BotonCancelar>\n                    <s.BotonGuardar>Guardar</s.BotonGuardar>\n                </s.DivBotones>\n            </Modal>\n                {/* Modal Servicios */}\n            <Modal \n                isOpen={modalServicios}\n                onRequestClose={() => setModalServicios(false)}\n                style={{\n                    overlay: {\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        right: 0,\n                        bottom: 0,\n                        backgroundColor: 'rgba(15, 15, 15, 0.507)'\n                    },\n                    content: {\n                        width: 350\n                    }\n                }}\n            >\n                <s.HeaderModal>\n                    <s.TituloModal><ic.FaUserAlt /> Proveedor de Servicios</s.TituloModal>\n                    <s.CerrarModal onClick={() => setModalServicios(false)}>+</s.CerrarModal>\n                </s.HeaderModal>\n                <ProveedorServicios/>\n            </Modal>\n            {/* Modal Password */}\n            <Modal \n                isOpen={modalModPassword}\n                onRequestClose={() => setModalModPassword(false)}\n                style={{\n                    overlay: {\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        right: 0,\n                        bottom: 0,\n                        backgroundColor: 'rgba(15, 15, 15, 0.507)'\n                    },\n                    content: {\n                        width: 350\n                    }\n                }}\n            >   \n                <s.HeaderModal>\n                    <s.TituloModal><ic.AiFillLock /> Modificar Password</s.TituloModal>\n                    <s.CerrarModal onClick={() => setModalModPassword(false)}>+</s.CerrarModal>\n                </s.HeaderModal>\n                <ModificarPassword/>\n                <s.DivBotones>\n                    <s.BotonCancelar onClick={() => setModalModPassword(false)}>Cancelar</s.BotonCancelar>\n                    <s.BotonGuardar>Guardar</s.BotonGuardar>\n                </s.DivBotones>\n            </Modal>\n            {/* Modal Registro */}\n            <Modal \n                isOpen={modalRegistroSesion}\n                onRequestClose={() => setModalRegistroSesion(false)}\n                style={{\n                    overlay: {\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        right: 0,\n                        bottom: 0,\n                        backgroundColor: 'rgba(15, 15, 15, 0.507)'\n                    },\n                    content: {\n                        width: 850,\n                        height: 427\n                    }\n                }}\n            >\n                <s.HeaderModal>\n                    <s.TituloModal><ic.FaUser /> Registro de Inicio de Sesión</s.TituloModal>\n                    <s.CerrarModal onClick={() => setModalRegistroSesion(false)}>+</s.CerrarModal>\n                </s.HeaderModal>\n                <RegistroSesion/>\n            </Modal>\n            {/* Modal Manual */}\n            <Modal \n                isOpen={modalManualUsuario}\n                onRequestClose={() => setModalManualUsuario(false)}\n                style={{\n                    overlay: {\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        right: 0,\n                        bottom: 0,\n                        backgroundColor: 'rgba(15, 15, 15, 0.507)'\n                    },\n                    content: {\n                        width: 350\n                    }\n                }}\n            >\n                <s.HeaderModal>\n                    <s.TituloModal><ic.AiOutlineCloudDownload /> Manual de Usuario</s.TituloModal>\n                    <s.CerrarModal onClick={() => setModalManualUsuario(false)}>+</s.CerrarModal>\n                </s.HeaderModal>\n                <ManualUsuario/>\n            </Modal>\n            \n\n            <s.menu_superior>\n\n                <s.monitor onClick={() => setMenuOp(1)} className={menuOp === 1 ? 'seleccionMonitor' : ''}>\n                    <s.icono_monitor />\n                    <s.texto_elemento_menu>Monitor</s.texto_elemento_menu>\n                    <s.tooltip_monitor>Monitor</s.tooltip_monitor>\n                </s.monitor>\n\n                <s.reportes className={menuOp === 2 ? 'seleccionReportes' : ''}>\n                    <s.icono_reportes onClick={() => {setMenuOp(2); setSubmenuOp(1)}}/>\n                    <s.texto_elemento_menu onClick={() => {setMenuOp(2); setSubmenuOp(1)}}>Reportes</s.texto_elemento_menu>\n                    <s.submenu_reportes tabIndex=\"-1\">\n                        <s.submenu_reportes_grupo>Informes generales</s.submenu_reportes_grupo>\n                        <s.submenu_reportes_grupo_contenido_operacion>\n                            <s.submenu_reportes_grupo_dos className={submenuOp === 1 || submenuOp === 2 || submenuOp === 3 || submenuOp === 4 ? 'subMenus' : ''}>\n                                <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                <span onClick={() => {setMenuOp(2); setSubmenuOp(1)}}> Estadísticas de Operación &nbsp; &nbsp; &nbsp;</span>\n                                <s.submenu_reportes_grupo_dos_icono_derecha><ic.AiOutlineRight /></s.submenu_reportes_grupo_dos_icono_derecha>\n\n                                <s.submenu_reportes_submenu>\n                                    <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 1 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(1)}}> Informe General de Movimiento</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n\n                                    <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 2 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(2)}}> Informe sobre el kilometraje</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n\n                                    <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 3 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(3)}}> Detalles de exceso de velocidad</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n\n                                    <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 4 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(4)}}> Detalles de estadias</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n                                </s.submenu_reportes_submenu>\n\n\n                            </s.submenu_reportes_grupo_dos>\n                        </s.submenu_reportes_grupo_contenido_operacion>\n\n                        <s.submenu_reportes_grupo_contenido>\n                            <s.submenu_reportes_grupo_dos className={submenuOp === 5 || submenuOp === 6 ? 'subMenus' : ''}>\n                                <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                <span onClick={() => {setMenuOp(2); setSubmenuOp(5)}}> Reporte de viaje &nbsp; &nbsp; &nbsp;</span>\n                                <s.submenu_reportes_grupo_dos_icono_derecha><ic.AiOutlineRight /></s.submenu_reportes_grupo_dos_icono_derecha>\n                                <s.submenu_reportes_submenu>\n                                <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 5 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(5)}}> Reporte de viaje</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n\n                                    <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 6 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(6)}}> Informe de viaje de exceso de velocidad</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n                                </s.submenu_reportes_submenu>\n                            </s.submenu_reportes_grupo_dos>\n                        </s.submenu_reportes_grupo_contenido>\n\n                        {/* <s.submenu_reportes_grupo_contenido>\n                            <s.submenu_reportes_grupo_dos className={submenuOp === 7 || submenuOp === 8 || submenuOp === 9 ? 'subMenus' : ''}>\n                                <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                <span onClick={() => {setMenuOp(2); setSubmenuOp(7)}}> Informe de comportamiento de conducción &nbsp; &nbsp; &nbsp;</span>\n                                <s.submenu_reportes_grupo_dos_icono_derecha><ic.AiOutlineRight /></s.submenu_reportes_grupo_dos_icono_derecha>\n                                <s.submenu_reportes_submenu>\n                                <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 7 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(7)}}> Visión general del comporamiento de conducción</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n\n                                    <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 8 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(8)}}> Informe de comportamiento de conducción</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n\n                                    <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 9 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(9)}}> Detalles de comportamiento de conducción</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n                                </s.submenu_reportes_submenu>\n                            </s.submenu_reportes_grupo_dos>\n                        </s.submenu_reportes_grupo_contenido> */}\n\n                        <s.submenu_reportes_grupo_contenido>\n                            <s.submenu_reportes_grupo_dos className={submenuOp === 10 || submenuOp === 11 || submenuOp === 12 ? 'subMenus' : ''}>\n                                <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                <span onClick={() => {setMenuOp(2); setSubmenuOp(10)}}> Reporte de ACC (Encendido) &nbsp; &nbsp; &nbsp;</span>\n                                <s.submenu_reportes_grupo_dos_icono_derecha><ic.AiOutlineRight /></s.submenu_reportes_grupo_dos_icono_derecha>\n                                <s.submenu_reportes_submenu>\n                                <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 10 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(10)}}> Visión general de ACC</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n\n                                    <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 11 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(11)}}> Reporte de ACC (Enciendido)</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n\n                                    <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 12 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(12)}}> Informe de Ralentí Mínimo</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n                                </s.submenu_reportes_submenu>\n                            </s.submenu_reportes_grupo_dos>\n                        </s.submenu_reportes_grupo_contenido>\n\n                        <s.submenu_reportes_grupo_contenido>\n                            <s.submenu_reportes_grupo_dos className={submenuOp === 13 || submenuOp === 14 || submenuOp === 15 ? 'subMenus' : ''}>\n                                <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                <span onClick={() => {setMenuOp(2); setSubmenuOp(13)}}> Reporte de información del vehículo &nbsp; &nbsp; &nbsp;</span>\n                                <s.submenu_reportes_grupo_dos_icono_derecha><ic.AiOutlineRight /></s.submenu_reportes_grupo_dos_icono_derecha>\n                                <s.submenu_reportes_submenu>\n                                <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 13 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(13)}}> Informe de combustible</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n\n                                    <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 14 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(14)}}> Informe de presión de neúmaticos</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n\n                                    <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 15 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(15)}}> Temperature Report</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n                                </s.submenu_reportes_submenu>\n                            </s.submenu_reportes_grupo_dos>\n                        </s.submenu_reportes_grupo_contenido>\n\n                        <s.submenu_reportes_grupo_contenido>\n                            <s.submenu_reportes_grupo_dos className={submenuOp === 16 || submenuOp === 17 || submenuOp === 18 ? 'subMenus' : ''}>\n                                <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                <span onClick={() => {setMenuOp(2); setSubmenuOp(16)}}> Informe OBD &nbsp; &nbsp; &nbsp;</span>\n                                <s.submenu_reportes_grupo_dos_icono_derecha><ic.AiOutlineRight /></s.submenu_reportes_grupo_dos_icono_derecha>\n                                <s.submenu_reportes_submenu>\n                                <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 16 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(16)}}> Resumen de consumo de combustible de viaje</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n\n                                    <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 17 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(17)}}> Detalles de consumo de combustible de viaje</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n\n                                    <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 18 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(18)}}> Informe DTC</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n                                </s.submenu_reportes_submenu>\n                            </s.submenu_reportes_grupo_dos>\n                        </s.submenu_reportes_grupo_contenido>\n\n                        <s.submenu_reportes_grupo_contenido>\n                            <s.submenu_reportes_grupo_dos className={submenuOp === 19 || submenuOp === 20 || submenuOp === 21 ? 'subMenus' : ''}>\n                                <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                <span onClick={() => {setMenuOp(2); setSubmenuOp(19)}}> Estadística de Alarma &nbsp; &nbsp; &nbsp;</span>\n                                <s.submenu_reportes_grupo_dos_icono_derecha><ic.AiOutlineRight /></s.submenu_reportes_grupo_dos_icono_derecha>\n                                \n                                <s.submenu_reportes_submenu>\n                                <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 19 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(19)}}> Descripción general de alarma</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n\n                                    <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 20 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(20)}}> Estadística de alarma</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n\n                                    <s.submenu_reportes_grupo_contenido>\n                                        <s.submenu_reportes_grupo_dos className={submenuOp === 21 ? 'subMenus' : ''}>\n                                            <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                            <span onClick={() => {setMenuOp(2); setSubmenuOp(21)}}> Detalle de Alarma</span>\n                                        </s.submenu_reportes_grupo_dos>\n                                    </s.submenu_reportes_grupo_contenido>\n                                </s.submenu_reportes_submenu>\n                            </s.submenu_reportes_grupo_dos>\n                        </s.submenu_reportes_grupo_contenido>\n\n                        <s.submenu_reportes_grupo>Generar Reporte</s.submenu_reportes_grupo>\n                        <s.submenu_reportes_grupo_contenido>\n                            <s.submenu_reportes_grupo_dos className={submenuOp === 22 ? 'subMenus' : ''}>\n                                <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                <span onClick={() => {setMenuOp(2); setSubmenuOp(22)}}> Tareas de informe | Nuevo</span>\n                            </s.submenu_reportes_grupo_dos>\n                        </s.submenu_reportes_grupo_contenido>\n\n                        <s.submenu_reportes_grupo_contenido>\n                            <s.submenu_reportes_grupo_dos className={submenuOp === 23 ? 'subMenus' : ''}>\n                                <s.submenu_reportes_grupo_dos_icono_izquierda><ic.IoIosStats /></s.submenu_reportes_grupo_dos_icono_izquierda>\n                                <span onClick={() => {setMenuOp(2); setSubmenuOp(23)}}> Buscar reporte</span>\n                            </s.submenu_reportes_grupo_dos>\n                        </s.submenu_reportes_grupo_contenido>\n\n                    </s.submenu_reportes>\n                </s.reportes>\n\n\n\n                <s.dispositivo className={menuOp === 3 ? 'seleccionDispos' : ''}>\n                    <s.icono_dispositivos onClick={() => {setMenuOp(3); setSubmenuOp(24)}}/>\n                    <s.texto_elemento_menu onClick={() => {setMenuOp(3); setSubmenuOp(24)}}>Dispositivo</s.texto_elemento_menu>\n                    <s.submenu_dispositivo tabIndex=\"-1\">\n                        <s.submenu_dispositivo_contenido_item onClick={() => {setMenuOp(3); setSubmenuOp(24)}} className={submenuOp === 24 ? 'subMenus' : ''}>\n                            <s.submenu_dispositivo_contenido_item_icono><ic.FaCarAlt /></s.submenu_dispositivo_contenido_item_icono> &nbsp;\n                            Configuración del Dispositivo\n                        </s.submenu_dispositivo_contenido_item>\n\n                        <s.submenu_dispositivo_contenido_item onClick={() => {setMenuOp(3); setSubmenuOp(25)}} className={submenuOp === 25 ? 'subMenus' : ''}>\n                            <s.submenu_dispositivo_contenido_item_icono><ic.TiFlag /></s.submenu_dispositivo_contenido_item_icono> &nbsp;\n                            Detalle de Alarma\n                        </s.submenu_dispositivo_contenido_item>\n\n                        <s.submenu_dispositivo_contenido_item_dividido onClick={() => {setMenuOp(3); setSubmenuOp(26)}} className={submenuOp === 26 ? 'subMenus' : ''}>\n                            <s.submenu_dispositivo_contenido_item_icono><ic.GoTerminal /></s.submenu_dispositivo_contenido_item_icono> &nbsp;\n                            Horario para Comando\n                        </s.submenu_dispositivo_contenido_item_dividido>\n\n                        <s.submenu_dispositivo_contenido_item onClick={() => {setMenuOp(3); setSubmenuOp(27)}} className={submenuOp === 27 ? 'subMenus' : ''}>\n                            <s.submenu_dispositivo_contenido_item_icono><ic.BsBellFill /></s.submenu_dispositivo_contenido_item_icono> &nbsp;\n                            Administración de notificaciones de vencimiento\n                        </s.submenu_dispositivo_contenido_item>\n\n                        <s.submenu_dispositivo_contenido_item onClick={() => {setMenuOp(3); setSubmenuOp(28)}} className={submenuOp === 28 ? 'subMenus' : ''}>\n                            <s.submenu_dispositivo_contenido_item_icono><ic.AiFillTool /></s.submenu_dispositivo_contenido_item_icono> &nbsp;\n                            Gestión de mantenimiento\n                        </s.submenu_dispositivo_contenido_item>\n\n                        <s.submenu_dispositivo_contenido_item onClick={() => {setMenuOp(3); setSubmenuOp(29)}} className={submenuOp === 29 ? 'subMenus' : ''}>\n                            <s.submenu_dispositivo_contenido_item_icono><ic.FaShareAlt /></s.submenu_dispositivo_contenido_item_icono> &nbsp;\n                            Gestionar link`s compartidos\n                        </s.submenu_dispositivo_contenido_item>\n                    </s.submenu_dispositivo>\n                </s.dispositivo>\n\n            </s.menu_superior>\n\n            <s.menu_inferior>\n\n                <s.anterior onClick={handleDevices}>\n                    <s.icono_anterior />\n                    <s.tooltip_anterior role=\"tooltip\" aria-hidden=\"true\" >Versión Anterior</s.tooltip_anterior>\n                </s.anterior>\n\n\n                <s.opciones>\n                    <s.icono_opciones />\n                    <s.submenu_opciones tabIndex=\"-1\">\n                        <s.submenu_opciones_item onClick={() => setModalPreferencias(true)}>\n                            <s.submenu_opciones_item_icono><ic.HiCog /></s.submenu_opciones_item_icono> &nbsp;\n                            Preferencias\n                        </s.submenu_opciones_item>\n                    \n\n                        <s.submenu_opciones_item onClick={() => setModalNotificaciones(true)}>\n                            <s.submenu_opciones_item_icono><ic.BsBellFill /></s.submenu_opciones_item_icono> &nbsp;\n                            Notificación de la aplicación\n                        </s.submenu_opciones_item>\n\n                        <s.submenu_opciones_item onClick={() => setModalApiGoogle(true)}>\n                            <s.submenu_opciones_item_icono><ic.GoKey /></s.submenu_opciones_item_icono> &nbsp;\n                            Llave API de Google Maps\n                        </s.submenu_opciones_item>\n                    </s.submenu_opciones>\n                </s.opciones>\n                {/* Modals */}\n                    <Modal \n                        isOpen={modalPreferencias}\n                        onRequestClose={() => setModalPreferencias(false)}\n                        style={{\n                            overlay: {\n                                position: 'fixed',\n                                top: 0,\n                                left: 0,\n                                right: 0,\n                                bottom: 0,\n                                backgroundColor: 'rgba(15, 15, 15, 0.507)'\n                            },\n                            content: {\n                                width: 650,\n                                height: 478\n                            }\n                        }}\n                    >\n                        <s.HeaderModal>\n                            <s.TituloModal><ic.FiSettings /> Preferencias</s.TituloModal>\n                            <s.CerrarModal onClick={() => setModalPreferencias(false)}>+</s.CerrarModal>\n                        </s.HeaderModal>\n                        <Preferencias/>\n                        <s.DivBotones>\n                            <s.BotonCancelar onClick={() => setModalPreferencias(false)}>Cancelar</s.BotonCancelar>\n                            <s.BotonGuardar>Guardar</s.BotonGuardar>\n                        </s.DivBotones>\n                    </Modal>\n\n                    <Modal \n                        isOpen={modalNotificaciones}\n                        onRequestClose={() => setModalNotificaciones(false)}\n                        style={{\n                            overlay: {\n                                position: 'fixed',\n                                top: 0,\n                                left: 0,\n                                right: 0,\n                                bottom: 0,\n                                backgroundColor: 'rgba(15, 15, 15, 0.507)'\n                            },\n                            content: {\n                                width: 600,\n                                height: 612\n                            }\n                        }}\n                    >\n                        <s.HeaderModal>\n                            <s.TituloModal><ic.BsBellFill/> Notificaciones de la Aplicación</s.TituloModal>\n                            <s.CerrarModal onClick={() => setModalNotificaciones(false)}>+</s.CerrarModal>\n                        </s.HeaderModal>\n                        <Notificaciones/>\n                        <s.DivBotones>\n                            <s.BotonCancelar onClick={() => setModalNotificaciones(false)}>Cancelar</s.BotonCancelar>\n                            <s.BotonGuardar>Guardar</s.BotonGuardar>\n                        </s.DivBotones>\n                    </Modal>\n\n                    <Modal \n                        isOpen={modalApiGoogle}\n                        onRequestClose={() => setModalApiGoogle(false)}\n                        style={{\n                            overlay: {\n                                position: 'fixed',\n                                top: 0,\n                                left: 0,\n                                right: 0,\n                                bottom: 0,\n                                backgroundColor: 'rgba(15, 15, 15, 0.507)'\n                            },\n                            content: {\n                                width: 600,\n                                height: 478\n                            }\n                        }}\n                    >\n                        <s.HeaderModal>\n                            <s.TituloModal><ic.GoKey /> Clave API de Google Maps</s.TituloModal>\n                            <s.CerrarModal onClick={() => setModalApiGoogle(false)}>+</s.CerrarModal>\n                        </s.HeaderModal>\n                        <ApiGoogle/>\n                    </Modal>\n\n                <s.mensajes onClick={() => setModalMensajes(true)}>\n                    <s.icono_mensajes />\n                    <s.tooltip_mensaje role=\"tooltip\" aria-hidden=\"true\" >Mensaje</s.tooltip_mensaje>\n                </s.mensajes>\n                {/* Modal */}\n                <Modal \n                    isOpen={modalMensajes}\n                    onRequestClose={() => setModalMensajes(false)}\n                    style={{\n                        overlay: {\n                            position: 'fixed',\n                            top: 0,\n                            left: 0,\n                            right: 0,\n                            bottom: 0,\n                            backgroundColor: 'rgba(15, 15, 15, 0.507)'\n                        },\n                        content: {\n                            width: 850,\n                            height: 427\n                        }\n                    }}\n                >\n                    <s.HeaderModal>\n                        <s.TituloModal><ic.FiMail /> Mensajes</s.TituloModal>\n                        <s.CerrarModal onClick={() => setModalMensajes(false)}>+</s.CerrarModal>\n                    </s.HeaderModal>\n                    <Mensajes/>\n                </Modal>\n\n                <s.salir>\n                    <s.icono_salir onClick={handleSalir}/>\n                    <s.tooltip_salir role=\"tooltip\" aria-hidden=\"true\">Salir</s.tooltip_salir>   \n                </s.salir>\n            \n            </s.menu_inferior> \n        </s.menu_caja>\n        </Router>\n    );\n}\n\nexport default BarraLateral;","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoAdminDashboard/ContenidoAdminDashboard.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/Playback.js",["724"],"import React, { useState } from 'react';\nimport * as s from './Recorrido.styles';\n\nimport * as i from 'react-icons/all';\n\nimport { usePromiseTracker } from 'react-promise-tracker';\nimport { trackPromise } from 'react-promise-tracker';\n\nimport Loader from 'react-loader-spinner';\n\nimport DatePicker from 'react-date-picker';\n\nconst Playback = ({datos}) => {\n    const [de, setDe] = useState(new Date());\n    const [hasta, setHasta] = useState(new Date());\n\n    const LoadingIndicator = () => {\n        const {promiseInProgress} = usePromiseTracker();\n        return(\n            promiseInProgress &&\n            <s.animacionCargar>\n                <Loader type=\"Oval\" color=\"#ffab05\" height=\"50\" width=\"50\" />\n            </s.animacionCargar>\n        );\n    }\n\n    const Probarfecha = (e) => {\n        e.preventDefault();\n        console.log('Fecha de: '+de.toISOString()+' Fecha hasta: '+hasta.toISOString());\n    }\n\n    const reporte = (e) => {\n        e.preventDefault();\n        var requestOptions = {\n            method: 'GET',\n            credentials: 'include'\n        };\n\n        trackPromise(\n            fetch(\"https://www.protrack.ad105.net/api/positions?deviceId=\"+datos.deviceId+\"&from=\"+de.toISOString()+\"&to=\"+hasta.toISOString(), requestOptions)\n            .then(response => response.json())\n            .then((responseData) => {\n                console.log(responseData);\n            }).catch(error => console.warn(error))\n            );\n    }\n\n    return(\n        <s.playback_header>\n            <LoadingIndicator />\n                        <s.el_form>\n\n                            <s.el_form_item>\n                                <s.el_form_item_label>Device</s.el_form_item_label>\n\n                                <s.el_form_item_content>\n                                    <s.w150>\n                                        <s.el_select_device>\n\n                                            <s.el_input>\n                                                <s.el_input_inner type=\"text\" autoComplete=\"off\" placeholder=\"Por favor selecciona el dispositivo   \" readOnly=\"readonly\" />\n                                                <s.el_input_prefix>\n                                                    <s.el_input_prefix_inner>\n                                                        <s.el_select_caret><i.GoTriangleUp /></s.el_select_caret>\n                                                    </s.el_input_prefix_inner>\n                                                </s.el_input_prefix>\n                                            </s.el_input>\n\n                                            <s.el_select_dropdown>\n                                                <s.el_scrollbar>\n\n                                                    <s.el_select_dropdown_wrap>\n                                                        <s.el_scrollbar_view>\n                                                            <s.el_select_dropdown_item>Hola</s.el_select_dropdown_item>\n                                                            <s.el_select_dropdown_item>Hola</s.el_select_dropdown_item>\n                                                            <s.el_select_dropdown_item>Hola</s.el_select_dropdown_item>\n                                                            <s.el_select_dropdown_item>Hola</s.el_select_dropdown_item>\n                                                            <s.el_select_dropdown_item>Hola</s.el_select_dropdown_item>\n                                                            <s.el_select_dropdown_item>Hola</s.el_select_dropdown_item>\n                                                            <s.el_select_dropdown_item>Hola</s.el_select_dropdown_item>\n                                                            <s.el_select_dropdown_item>Hola</s.el_select_dropdown_item>\n                                                            <s.el_select_dropdown_item>Hola</s.el_select_dropdown_item>\n                                                            <s.el_select_dropdown_item>Hola</s.el_select_dropdown_item>\n                                                            <s.el_select_dropdown_item>Hola</s.el_select_dropdown_item>\n                                                            <s.el_select_dropdown_item>Hola</s.el_select_dropdown_item>\n                                                            <s.el_select_dropdown_item>Hola</s.el_select_dropdown_item>\n                                                        </s.el_scrollbar_view>\n                                                    </s.el_select_dropdown_wrap>\n\n                                                    <s.el_scrollbar_horizontal>\n                                                        <s.el_scrollbar_thumb />\n                                                    </s.el_scrollbar_horizontal>\n\n                                                    <s.el_scrollbar_vertical>\n                                                        <s.el_scrollbar_thumb_v />\n                                                    </s.el_scrollbar_vertical>\n\n                                                    <s.popper_arrow>\n                                                    </s.popper_arrow>\n                                                </s.el_scrollbar>\n                                            </s.el_select_dropdown>\n\n                                        </s.el_select_device>\n\n                                        <s.form_item_detail>\n                                            <i.HiOutlineDocument />\n                                        </s.form_item_detail>\n\n                                    </s.w150>\n                                </s.el_form_item_content>\n\n                            </s.el_form_item>\n\n                            <s.el_form_item>\n                                <s.el_form_item_content>\n                                    <s.el_form_item_label>Time</s.el_form_item_label>\n                                    <DatePicker\n                                        onChange={setDe}\n                                        value={de}\n                                    />\n                                </s.el_form_item_content>\n                            </s.el_form_item>\n\n                            <s.el_form_item>\n                                <s.el_form_item_content>\n                                    <s.el_form_item_label>To</s.el_form_item_label>\n                                    <DatePicker\n                                        onChange={setHasta}\n                                        value={hasta}\n                                    />\n                                </s.el_form_item_content>\n                            </s.el_form_item>\n\n                            <s.el_form_item>\n                                <s.el_form_item_content>\n                                    <span>\n                                        <s.el_popover_reference_wrapper>\n                                            <s.link>\n                                                <s.iconfont><i.IoOptionsOutline /> </s.iconfont>\n                                                <span>Option</span>\n                                            </s.link>\n                                        </s.el_popover_reference_wrapper>\n                                    </span>\n                                </s.el_form_item_content>\n                            </s.el_form_item>\n\n                            <s.el_form_item>\n                                <s.el_form_item_content>\n\n                                    <s.el_button_warning onClick={reporte}>\n                                        <i.HiOutlinePlay />\n                                        <span>&nbsp;Play</span>\n                                    </s.el_button_warning>\n\n                                    <s.el_button_info>\n                                        <i.AiOutlinePauseCircle />\n                                        <span>&nbsp;Pause</span>\n                                    </s.el_button_info>\n\n                                    <s.el_button_default>\n                                        <span>Reset</span>\n                                    </s.el_button_default>\n                                    <s.iconfont>&nbsp;&nbsp;&nbsp;<i.FcInfo /></s.iconfont>\n                                </s.el_form_item_content>\n                            </s.el_form_item>\n\n                            <s.outline_play_btn>\n                                <i.AiOutlinePauseCircle />\n                                &nbsp; Play local data\n                            </s.outline_play_btn>\n\n                        </s.el_form>\n\n\n                    </s.playback_header>\n    )\n\n}\n\nexport default Playback;","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/BarraInferior/BarraInferior.js",["725","726"],"import React from 'react';\n\n\nimport * as s from './BarraInferior.styles';\nimport {Icon} from '@iconify/react';\nimport * as ic from 'react-icons/all';\n\nimport Draggable from 'react-draggable';\n\nimport GeoCercas from './GeoCercas';\n\nconst BarraInferior = () => {\n\n    const [toggle, setToggle] = React.useState(false);\n    const [toggleGeo, setToggleGeo] = React.useState(false);\n    const [layer, setLayer] = React.useState(false);\n    const [zoom, setZoom] = React.useState(5);\n\n    const handleToggle = () => {\n        setToggle(!toggle)\n    }\n    const handleToggleGeo = () => {\n        setToggleGeo(!toggleGeo)\n    }\n\n    const handleLayerGs = () => {\n        setLayer(!layer);\n        window.valorCapaGs = layer;\n    }\n\n    const handleLayerGh = () => {\n        setLayer(!layer);\n        window.valorCapaGh = layer;\n    }\n\n    \n    const handleLayerGt = () => {\n        setLayer(!layer);\n        window.valorCapaGt = layer;\n    }\n\n    \n    const handleLayerOsm = () => {\n        setLayer(!layer);\n        window.valorCapaOsm = layer;\n    }\n\n    \n    const handleLayerOsmBn = () => {\n        setLayer(!layer);\n        window.valorCapaOsmBn = layer;\n    }\n\n    \n    const handleLayerBing = () => {\n        setLayer(!layer);\n        window.valorCapaBing = layer;\n    }\n\n    const handleZoomMin = () => {\n        setZoom(zoom-1);\n        window.zoom = zoom;\n    }\n\n    const handleZoomMax = () => {\n        setZoom(zoom+1);\n        window.zoom = zoom;\n    }\n    const zoomByRange = (val) => {\n        setZoom(val);\n        window.zoom = zoom;\n    }\n\n\n    return (\n        <s.herramienta_mapa>\n           <s.caja_izquierda>\n            <s.icono_distancia/>\n                <s.icono_area/>\n                <s.icono_trafico/>\n            <s.icono_mapa visibility={toggle} onClick={handleToggle}>\n                <s.capa_mapa visibility={toggle}>\n                    <s.capa_mapa_titulo>\n                        <s.capa_mapa_titulo_icono_izquierda />\n                        Mapa \n                        <s.capa_mapa_titulo_icono_derecha><ic.AiOutlineMinus/></s.capa_mapa_titulo_icono_derecha>\n                    </s.capa_mapa_titulo>\n                    <s.capa_mapa_item_seleccionado gs={layer} onClick={handleLayerGs}>Google</s.capa_mapa_item_seleccionado>\n                    <s.capa_mapa_item gh={layer} onClick={handleLayerGh}>Google Hybrid</s.capa_mapa_item>\n                    <s.capa_mapa_item gt={layer} onClick={handleLayerGt}>Google Terrain</s.capa_mapa_item>\n                    <s.capa_mapa_item osm={layer} onClick={handleLayerOsm}>Open Street Maps</s.capa_mapa_item>\n                    <s.capa_mapa_item osmbn={layer} onClick={handleLayerOsmBn}>Open Street Maps B/N</s.capa_mapa_item>\n                    <s.capa_mapa_item bing={layer} onClick={handleLayerBing}>Bing</s.capa_mapa_item>\n                </s.capa_mapa>\n            </s.icono_mapa>\n    {/* El valor es de -13 a 47*/}\n            <s.caja_zoom>\n                    <s.icono_zoom_menos onClick={handleZoomMin}/>\n                    <s.zoom_slider type=\"range\" defaultValue={zoom} min=\"0\" max=\"21\" step=\"1\" onChange={(e) => zoomByRange(e.target.value)}>\n                        {/* <s.slider role={\"slider\"} aria-valuemin={\"0\"} aria-valuemax={\"21\"} aria-orientation={\"horizontal\"} aria-valuetext={\"13\"} aria-label={\"slider entre 0 y 21\"}>\n                            <s.slider_runway>\n                                <s.slider_bar style={{width: '9.52381%', left: '0%'}}></s.slider_bar>\n                                <Draggable axis=\"x\" defaultPosition={{x:-13, y:0}} bounds={{left:-13, right:47}}>\n                                <s.slider_button_wrapper style={{left:''}}> \n                                    <s.slider_button aria-describedby={\"el-tooltip-5456\"} tabindex={\"0\"}></s.slider_button>\n                                </s.slider_button_wrapper>\n                                </Draggable>\n                            </s.slider_runway>\n                        </s.slider> */}\n                    </s.zoom_slider>\n                    <s.icono_zoom_mas onClick={handleZoomMax}/>\n            </s.caja_zoom>\n\n                <s.direccion_mapa>\n                    <s.busqueda type={'text'} autoComplete={'off'} placeholder={'Búsqueda de Dirección'}/>\n                    <s.input_prefix>\n                        \n                    </s.input_prefix>\n                </s.direccion_mapa>\n           </s.caja_izquierda>\n\n            <s.caja_derecha>\n                <s.icono_POI></s.icono_POI>\n                <s.icono_Ruta></s.icono_Ruta>\n                <s.icono_GEO visibility={toggleGeo} onClick={handleToggleGeo}>\n                </s.icono_GEO>\n                <s.icono_Alertas></s.icono_Alertas>\n                <s.icono_Recorrido></s.icono_Recorrido>\n            </s.caja_derecha>\n            <s.geofences visibility={toggleGeo}>\n                <s.capa_mapa_titulo onClick={handleToggleGeo}>\n                    <s.capa_mapa_titulo_icono_izquierdaGeo />\n                    GeoCercas\n                    <s.capa_mapa_titulo_icono_derecha><ic.AiOutlineMinus/></s.capa_mapa_titulo_icono_derecha>\n                </s.capa_mapa_titulo>\n                <GeoCercas />\n            </s.geofences>\n\n\n        </s.herramienta_mapa>\n    );\n}\n\nexport default BarraInferior;","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/BarraInferior.js",["727","728"],"import React, {useContext} from 'react';\r\n\r\n\r\nimport * as s from './BarraInferior.styles';\r\nimport {Icon} from '@iconify/react';\r\nimport * as ic from 'react-icons/all';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nimport GeoCercas from './GeoCercas';\r\n\r\nimport Alarms from './Alarms';\r\n\r\nimport DescargarRecorrido from './DescargarRecorrido';\r\n\r\nimport './PopUp.css';\r\n\r\n/* CONTEXT */\r\nimport {MenContext} from '../../Context/MenuContext';\r\n\r\nconst BarraInferior = () => {\r\n\r\n    const [toggle, setToggle] = React.useState(false);\r\n    const [toggleGeo, setToggleGeo] = React.useState(false);\r\n    const [toggleAlarm, setToggleAlarm] = React.useState(false);\r\n    const [toggleTrip, setToggleTrip] = React.useState(false);\r\n    const [toggleTraffic, setToggleTraffic] = React.useState(false);\r\n    const [togglePOI, setTogglePOI] = React.useState(false);\r\n    const [toggleRuta, setToggleRuta] = React.useState(false);\r\n    const [layer, setLayer] = React.useState(false);\r\n    const [zoom, setZoom] = React.useState(5);\r\n    const { distanceLine, areaLine, setDistanceLine, setAreaLine } = useContext(MenContext);\r\n\r\n    const handleToggle = () => {\r\n        setToggle(!toggle)\r\n    }\r\n    const handleToggleGeo = () => {\r\n        setToggleGeo(!toggleGeo)\r\n    }\r\n    const handleToggleAlarm = () => {\r\n        setToggleAlarm(!toggleAlarm)\r\n    }\r\n    const handleToggleLine = () => {\r\n        setDistanceLine(!distanceLine)\r\n    }\r\n    const handleToggleArea = () => {\r\n        setAreaLine(!areaLine)\r\n    }\r\n    const handleToggleTrip = () => {\r\n        setToggleTrip(!toggleTrip)\r\n    }\r\n    const handleToggleTraffic = () => {\r\n        setToggleTraffic(!toggleTraffic)\r\n    }\r\n    const handleTogglePOI = () => {\r\n        setTogglePOI(!togglePOI)\r\n    }\r\n    const handleToggleRuta = () => {\r\n        setToggleRuta(!toggleRuta)\r\n    }\r\n\r\n    const handleLayerGs = () => {\r\n        setLayer(!layer);\r\n        window.valorCapaGs = layer;\r\n    }\r\n\r\n    const handleLayerGh = () => {\r\n        setLayer(!layer);\r\n        window.valorCapaGh = layer;\r\n    }\r\n\r\n    \r\n    const handleLayerGt = () => {\r\n        setLayer(!layer);\r\n        window.valorCapaGt = layer;\r\n    }\r\n\r\n    \r\n    const handleLayerOsm = () => {\r\n        setLayer(!layer);\r\n        window.valorCapaOsm = layer;\r\n    }\r\n\r\n    \r\n    const handleLayerOsmBn = () => {\r\n        setLayer(!layer);\r\n        window.valorCapaOsmBn = layer;\r\n    }\r\n\r\n    \r\n    const handleLayerBing = () => {\r\n        setLayer(!layer);\r\n        window.valorCapaBing = layer;\r\n    }\r\n\r\n    const handleZoomMin = () => {\r\n        setZoom(zoom-1);\r\n        window.zoom = zoom;\r\n    }\r\n\r\n    const handleZoomMax = () => {\r\n        setZoom(zoom+1);\r\n        window.zoom = zoom;\r\n    }\r\n    const zoomByRange = (val) => {\r\n        setZoom(val);\r\n        window.zoom = zoom;\r\n    }\r\n\r\n\r\n    return (\r\n        <s.herramienta_mapa>\r\n           <s.caja_izquierda>\r\n            <s.icono_distancia visibility={distanceLine} onClick={handleToggleLine}/>\r\n            <s.icono_area visibility={areaLine} onClick={handleToggleArea}/>\r\n            <s.icono_trafico visibility={toggleTraffic} onClick={handleToggleTraffic}/>\r\n            <s.icono_mapa visibility={toggle} onClick={handleToggle}>\r\n                <s.capa_mapa visibility={toggle}>\r\n                    <s.capa_mapa_titulo>\r\n                        <s.capa_mapa_titulo_icono_izquierda />\r\n                        Mapa \r\n                        <s.capa_mapa_titulo_icono_derecha><ic.AiOutlineMinus/></s.capa_mapa_titulo_icono_derecha>\r\n                    </s.capa_mapa_titulo>\r\n                    <s.capa_mapa_item_seleccionado gs={layer} onClick={handleLayerGs}>Google</s.capa_mapa_item_seleccionado>\r\n                    <s.capa_mapa_item gh={layer} onClick={handleLayerGh}>Google Hybrid</s.capa_mapa_item>\r\n                    <s.capa_mapa_item gt={layer} onClick={handleLayerGt}>Google Terrain</s.capa_mapa_item>\r\n                    <s.capa_mapa_item osm={layer} onClick={handleLayerOsm}>Open Street Maps</s.capa_mapa_item>\r\n                    <s.capa_mapa_item osmbn={layer} onClick={handleLayerOsmBn}>Open Street Maps B/N</s.capa_mapa_item>\r\n                    <s.capa_mapa_item bing={layer} onClick={handleLayerBing}>Bing</s.capa_mapa_item>\r\n                </s.capa_mapa>\r\n            </s.icono_mapa>\r\n    {/* El valor es de -13 a 47*/}\r\n            <s.caja_zoom>\r\n                    <s.icono_zoom_menos onClick={handleZoomMin}/>\r\n                    <s.zoom_slider type=\"range\" defaultValue={zoom} min=\"0\" max=\"21\" step=\"1\" onChange={(e) => zoomByRange(e.target.value)}>\r\n                        {/* <s.slider role={\"slider\"} aria-valuemin={\"0\"} aria-valuemax={\"21\"} aria-orientation={\"horizontal\"} aria-valuetext={\"13\"} aria-label={\"slider entre 0 y 21\"}>\r\n                            <s.slider_runway>\r\n                                <s.slider_bar style={{width: '9.52381%', left: '0%'}}></s.slider_bar>\r\n                                <Draggable axis=\"x\" defaultPosition={{x:-13, y:0}} bounds={{left:-13, right:47}}>\r\n                                <s.slider_button_wrapper style={{left:''}}> \r\n                                    <s.slider_button aria-describedby={\"el-tooltip-5456\"} tabindex={\"0\"}></s.slider_button>\r\n                                </s.slider_button_wrapper>\r\n                                </Draggable>\r\n                            </s.slider_runway>\r\n                        </s.slider> */}\r\n                    </s.zoom_slider>\r\n                    <s.icono_zoom_mas onClick={handleZoomMax}/>\r\n            </s.caja_zoom>\r\n\r\n                <s.direccion_mapa>\r\n                    <s.busqueda type={'text'} autoComplete={'off'} placeholder={'Búsqueda de Dirección'}/>\r\n                    <s.input_prefix>\r\n                        \r\n                    </s.input_prefix>\r\n                </s.direccion_mapa>\r\n           </s.caja_izquierda>\r\n\r\n            <s.caja_derecha>\r\n                <s.icono_POI visibility={togglePOI} onClick={handleTogglePOI}></s.icono_POI>\r\n                <s.icono_Ruta visibility={toggleRuta} onClick={handleToggleRuta}></s.icono_Ruta>\r\n                <s.icono_GEO visibility={toggleGeo} onClick={handleToggleGeo}>\r\n                </s.icono_GEO>\r\n                <s.icono_Alertas visibility={toggleAlarm} onClick={handleToggleAlarm}></s.icono_Alertas>\r\n                <s.icono_Recorrido visibility={toggleTrip} onClick={handleToggleTrip}></s.icono_Recorrido>\r\n            </s.caja_derecha>\r\n            <s.geofences visibility={toggleGeo} className=\"geofence-scroll\">\r\n                <s.capa_mapa_titulo onClick={handleToggleGeo}>\r\n                    <s.capa_mapa_titulo_icono_izquierdaGeo />\r\n                    GeoCercas\r\n                    <s.capa_mapa_titulo_icono_derecha><ic.AiOutlineMinus/></s.capa_mapa_titulo_icono_derecha>\r\n                </s.capa_mapa_titulo>\r\n                <GeoCercas ver={toggleGeo} ocultar={setToggleGeo}/>\r\n            </s.geofences>\r\n\r\n            <s.alarms visibility={toggleAlarm} className=\"geofence-scroll\">\r\n                <s.capa_mapa_titulo onClick={handleToggleAlarm}>\r\n                    <s.capa_mapa_titulo_icono_izquierdaAlert />\r\n                    Alertas\r\n                    <s.capa_mapa_titulo_icono_derecha><ic.AiOutlineMinus/></s.capa_mapa_titulo_icono_derecha>\r\n                </s.capa_mapa_titulo>\r\n                <Alarms ver={toggleAlarm} ocultar={setToggleAlarm}/>\r\n            </s.alarms>\r\n\r\n            <s.trips visibility={toggleTrip} className=\"geofence-scroll\">\r\n                <s.capa_mapa_titulo onClick={handleToggleTrip}>\r\n                    <s.capa_mapa_titulo_icono_izquierdaTrip />\r\n                    Descarga de Recorrido\r\n                    <s.capa_mapa_titulo_icono_derecha><ic.AiOutlineMinus/></s.capa_mapa_titulo_icono_derecha>\r\n                </s.capa_mapa_titulo>\r\n                <DescargarRecorrido ver={toggleAlarm} ocultar={setToggleAlarm}/>\r\n            </s.trips>\r\n\r\n\r\n        </s.herramienta_mapa>\r\n    );\r\n}\r\n\r\nexport default BarraInferior;","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraLateralAdmin/BarraLateralAdmin.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoAdmin/ContenidoAdmin.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraSuperiorAdmin/BarraSuperior.js",["729","730"],"import React from 'react';\n\nimport * as s from './BarraSuperior.styles';\nimport * as ri from 'react-icons/all';\n\nconst BarraSuperior = (props) => {\n    return(\n        <s.header_top>\n            <s.header_box>\n                <s.header_content>\n\n                    <s.btn_monitor>\n                        <s.base_icon/> Monitor\n                    </s.btn_monitor>\n\n                    <s.search_box>\n                        <s.header_search_box>\n                        <s.input_inner placeholder={\"IMEI/Cuenta/Cliente\"}/>\n\n                        <s.input_prefix >\n                            <s.icon_search_box></s.icon_search_box>\n                        </s.input_prefix>\n\n                        </s.header_search_box>\n\n                        <s.btn_search_device>\n                            <span><s.base_icon_device />Dispositivo</span>\n                        </s.btn_search_device>\n\n                        <s.btn_search_user>\n                        <span><s.base_icon_user />Cliente</span>\n                        </s.btn_search_user>\n                    </s.search_box>\n\n                    <s.header_option>\n                        <a><s.go_back_icon/></a>\n                        <s.badge_item><s.message_icon/> </s.badge_item>\n                        <s.set_icon></s.set_icon>\n                    </s.header_option>\n\n                    <span></span>\n                    <span></span>\n\n                </s.header_content>\n            </s.header_box>\n        </s.header_top>\n    )\n}\n\nexport default BarraSuperior;","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/agregarDispositivos/agregarDispositivos.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoAdminDashboard/ContenidoAdminDashboard.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/Recorrido.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/agregarUsuarios/agregarUsuarios.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/LogIn/Login.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoMonitor/Online.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoMonitor/Offline.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoMonitor/Todos.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoMonitor/Monitor.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/App.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/ConfigDispositvos.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/cards/TarjetaUsuarios.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Notificaciones/Notificaciones.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ApiGoogle/ApiGoogle.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/cards/TarjetaDashboard.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/DetallesAlarma.js",["731","732","733"],"import React, { useEffect, useState } from 'react'\nimport * as s from '../Dispositivo.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\n/* import ReactExport from \"react-data-export\"; */\n\nimport DataTable from 'react-data-table-component';\n\nimport '../styles.css';\nconst DetallesAlarma = () => {\n    const [device, setDevice] = useState([]); //SE GUARDAN LOS DISPOSITIVOS\n    const [deviceId, setDeviceId] = useState(\"0\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [errorDevice, setErrorDevice] = useState(false);\n    const ubicacion = [];\n    const [reportData, setReportData] = useState([]); //SE GUARDAN LOS REPORTES\n    /* //INSTANCIAS PARA EL EXCEL\n    const ExcelFile = ReactExport.ExcelFile;\n    const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n    const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n    const [filename, setFilename] = useState(\"\") */;\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const DesdeForm = () =>{\n        //validar\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        if (dateFrom.trim() === '' || dateTo.trim() === '') {\n            alert(\"Se debe de indicar una Fecha de Inicio y de Final para generar el reporte\")\n            setError(true);\n            return;\n        }\n        if (dateFrom > dateTo) {\n            alert(\"La fecha de partida no puede ser mayor a la fecha de llegada\");\n            setError(true);\n            return;\n        }\n        setError(false);\n        setErrorDevice(false)\n        Devices();\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DevicesAll = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n        var requestOptions = {\n            method: 'GET',\n            credentials: 'include',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n            console.log(\"antes de consulta \"+ dateFrom)\n            console.log(\"antes de consulta \"+ dateTo)\n            //generar url route\n            let urlRoute = \"https://www.protrack.ad105.net/api/reports/route?\";\n            let groupIdRoute;\n            for(let i = 0; i < devAll.length; i++){\n                groupIdRoute= devAll[i].groupId;\n            }\n            urlRoute = urlRoute+\"deviceId=\"+deviceId+\"&\";\n            urlRoute = urlRoute+\"groupId=\"+groupIdRoute+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo;\n            console.log(urlRoute)\n            const resultadoRoute = await fetch(`${urlRoute}`, requestOptions)\n            const deviceDataRoute = await resultadoRoute.json();\n            console.log(deviceDataRoute)\n\n            //generar url events\n            let url = \"https://www.protrack.ad105.net/api/reports/events?\";\n            let groupId;\n            for(let i = 0; i < devAll.length; i++){\n                groupId= devAll[i].groupId;\n            }\n            url = url+\"deviceId=\"+deviceId+\"&\";\n            url = url+\"groupId=\"+groupId+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo;\n            console.log(url)\n            const resultado2 = await fetch(`${url}`, requestOptions)\n            const deviceData2 = await resultado2.json();\n\n            console.log(deviceData2)\n            for(let i = 0; i< deviceData2.length; i++){\n                for (let j = 0; j < devAll.length; j++) {\n                    if(deviceData2[i].deviceId === devAll[j].id){\n                        ubicacion.push({id: i, name: devAll[j].name, type: deviceData2[i].type, time: deviceData2[i].serverTime})\n                    }\n                }\n            }\n            console.log(ubicacion);\n            setReportData(ubicacion);\n            \n            /* console.log(ubicacion)\n            setReportData(deviceData2); */\n            /* setFilename(`DetallesDeAlarma ${dateFrom} - ${dateTo}`); */\n    }\n    const Fecha = (fecha) => {\n        const fecha1 = new Date();\n        const date = new Date(fecha);\n        if (fecha1.getDate() === date.getDate()) {\n            return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n        }\n        return date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate()+' '+date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n    }\n    const typeAlarm = (type) => {\n        let alarma = '';\n        switch (type) {\n            case 'deviceMoving':\n                    alarma = 'Dispositivo en Movimiento';\n                break;\n            case 'jamming':\n                    alarma = 'Dispositivo con Interferencia';\n                break;\n            case 'deviceStopped':\n                    alarma = 'Dispositivo Detenido';\n                break;\n            case 'deviceOffline':\n                    alarma = 'Dispositivo Fuera de Línea';\n                break;\n            case 'deviceOnline':\n                    alarma = 'Dispositivo en línea';\n                break;\n            case 'geofenceExit':\n                    alarma = 'Dispositivo saliendo de GeoCerca';\n                break;\n            case 'geofenceEnter':\n                    alarma = 'Dispositivo entrando a GeoCerca';\n                break;\n            case 'powerCut':\n                    alarma = 'Bateria desconectada';\n                break;\n            case 'sos':\n                    alarma = 'Alarma SOS';\n                break;\n            case 'lowBattery':\n                    alarma = 'Bateria Baja';\n                break;\n            case 'door':\n                    alarma = 'Puerta';\n                break;\n            case 'fuelUp':\n                    alarma = 'Cargando combustible';\n                break;\n            case 'fuelDown':\n                    alarma = 'Vaciando combustible';\n                break;\n            case 'ignitionOff':\n                    alarma = 'Motor Apagado';\n                break;\n            case 'ignitionOn':\n                    alarma = 'Motor Encendido';\n                break;\n            case 'noGps':\n                    alarma = 'No se encuentra Gps';\n                break;\n            case 'overSpeed':\n                    alarma = 'Alarma Exceso de Velocidad';\n                break;\n            case 'oilLeak':\n                    alarma = 'Fuga de combustible';\n                break;\n            case 'deviceUnknown':\n                alarma = 'Dispositivo Desconocido';\n                break;\n            case 'alarm':\n                alarma = 'Alarma';\n\n                break;\n            default:\n                break;\n        }\n        return alarma;\n    }\n    const columns = [\n        {\n            name: '#',\n            selector: 'id',\n            sortable: true,\n        },\n        {\n            name: 'Objetivo',\n            selector: 'name',\n            sortable: true,\n        },\n        {\n            name: 'Tipo de Alarma',\n            sortable: true,\n            cell: row => <span>{typeAlarm(row.type)}</span>\n        },\n        {\n            name: 'Hora de Alarma',\n            sortable: true,\n            cell: row => <span>{Fecha(row.time)}</span>\n        },\n        /* {\n            name: 'Tiempo GPS',\n            selector: 'gps',\n            sortable: true,\n        },\n        {\n            name: 'Velocidad (Milla)',\n            selector: 'velMilla',\n            sortable: true,\n        }, */\n        /* {\n            name: 'Ubicación',\n            selector: 'ubiacion',\n            sortable: true,\n        }, */\n    ];\n    //config pagination\n    const paginationComponentOptions = {\n        rowsPerPageText: 'Filas por página',\n        rangeSeparatorText: 'de',\n        selectAllRowsItem: true,\n        selectAllRowsItemText: 'Todos',\n    };\n    return (\n        <div className=\"menuContent\" style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Detalles de Alarma\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral>Dispositivo <s.selecttGral onChange={(e) => setDeviceId(e.target.value)} className={errorDevice ? 'errorFormDate' :  ''}>\n                                <option value=\"\" selected> -- Dispositivo -- </option>\n                            {devAll.map((item) => (\n                                <option value={item.id}>{item.name}</option>\n                            ))}\n                        </s.selecttGral></s.LabelGral>\n                        <div>\n                            <div>\n                            <s.LabelGral>Desde <s.inputGral type=\"date\" onChange={(e) =>DateFromValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"date\" onChange={(e) => DateToValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.LabelGral>Tipo de Alarma <s.selecttGral>\n                            <option value=\"\" disabled>-- Selecciona --</option>\n                        </s.selecttGral> </s.LabelGral>\n                        <s.InfoBoton onClick={DesdeForm}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={reportData}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                            pagination\n                            paginationComponentOptions={paginationComponentOptions}\n                        />\n                    </s.divTable>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </div>\n    )\n}\n\nexport default DetallesAlarma\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Preferencias/Preferencias.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/MainView/MainView.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Mensajes/Mensajes.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ModificarPassword/ModificarPassword.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/RegistroSesion/RegistroSesion.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Reportes.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoCuenta/ContenidoCuenta.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ManualUsuario/ManualUsuario.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ProveedorServicios/ProveedorServicios.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/Comportamiento/InformeComp.js",["734","735","736"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst InformeComp = () => {\n    const [device, setDevice] = useState([]);\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [deviceId, setDeviceId] = useState(\"\");\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const Datos = () => {\n        Devices()\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateYesterday = () => {\n        let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date2 = new Date(date);\n        date2 = date2.toISOString();\n        setDateFrom(date2);\n        setDateTo(date2);\n        console.log(date2)\n        Datos();\n    }\n    const DateWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        date2 = date2.toISOString();\n\n        //Fecha actual\n        let dateToday = new Date();\n        dateToday = dateToday.toISOString();\n        //console.log(dateToday);\n        setDateFrom(date2);\n        setDateTo(dateToday);\n        Datos();\n    }\n    const DateLastWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        date2 = date2.toISOString();\n        //Fecha actual\n        let dateToday = new Date();\n        dateToday = dateToday.toISOString();\n        //console.log(dateToday);\n        setDateFrom(date2);\n        setDateTo(dateToday);\n        Datos();\n    }\n    const DateMonth = () => {\n        let date = new Date();\n        let primerDia = new Date(date.getFullYear(), date.getMonth(), 1);\n        let diaActual = date;\n        setDateFrom(primerDia.toISOString());\n        setDateTo(diaActual.toISOString());\n        Datos();\n    }\n    const DateLastMonth = () => {\n        let dte = new Date();\n        var primerDia = new Date(dte.getFullYear(), dte.getMonth() -1, 1);\n        var ultimoDia = new Date(dte.getFullYear(), dte.getMonth(), 0);\n        setDateFrom(primerDia.toISOString());\n        //Fecha actual\n        setDateTo(ultimoDia.toISOString());\n        Datos();\n    }\n    const DevicesAll = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            if (dateFrom === \"\" && dateTo === \"\" && deviceId === \"\") {\n                const resultado = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n                const resultado2 = await fetch(`https://www.protrack.ad105.net/api/positions`, requestOptions)\n                /* .then(response => response.json())\n                .catch(error => console.log('error', error)); */\n                const deviceData = await resultado.json();\n                const deviceData2 = await resultado2.json();\n\n                var full = [] //JSONS MEZClados\n                Object.keys(deviceData).forEach(k=>{full[k] = Object.assign(deviceData[k],deviceData2[k])});\n\n                console.log('full data')\n                console.log(full);\n                setDevice(full);\n            }\n            else{\n                const resultado = await fetch(`https://www.protrack.ad105.net/api/devices/${deviceId}`, requestOptions)\n                const resultado2 = await fetch(`https://www.protrack.ad105.net/api/positions?deviceid=${deviceId}&from=${dateFrom}:00.000z&to=${dateTo}:00.000z`, requestOptions)\n                /* .then(response => response.json())\n                .catch(error => console.log('error', error)); */\n                const deviceData = await resultado.json();\n                const deviceData2 = await resultado2.json();\n\n                var full = [] //JSONS MEZClados\n                Object.keys(deviceData).forEach(k=>{full[k] = Object.assign(deviceData[k],deviceData2[k])});\n\n                console.log('full data')\n                console.log(full);\n                setDevice(full);\n            }\n    }\n    const data = [{ id: 1, objetivo: 'Vehiculo 1', kilometraje: '6.22', velocidad: '76', estadia: '2' }]\n    const columns = [\n        {\n            name: '#',\n            selector: 'deviceId',\n            sortable: true,\n        },\n        {\n            name: 'Objetivo',\n            selector: 'name',\n            sortable: true,\n        },\n        {\n            name: 'Fatiga de conducción',\n            selector: 'fatiga',\n            sortable: true,\n        },\n        {\n            name: 'Aceleración de conducción dura',\n            selector: 'aceleracion',\n            sortable: true,\n        },\n        {\n            name: 'Frenado Brusco',\n            selector: 'frenado',\n            sortable: true,\n        },\n        {\n            name: 'Giro Brusco',\n            selector: 'giro',\n            sortable: true,\n        },\n        {\n            name: 'Giro Pronunciado',\n            selector: 'pronunciado',\n            sortable: true,\n        },\n    ];\n    return (\n        <s.caja_dispositivo_panelGral style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Informe de Comportamiento de Conducción\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral>Dispositivo <s.selecttGral onChange={(e) => setDeviceId(e.target.value)}>\n                                <option value=\"\" selected> -- Dispositivo -- </option>\n                            {devAll.map((item) => (\n                                <option value={item.id}>{item.name}</option>\n                            ))}\n                        </s.selecttGral></s.LabelGral>\n                        <div>\n                            <div>\n                            <s.LabelGral>Hora <s.inputGral type=\"datetime-local\" onChange={(e) =>DateFromValue(e.target.value)}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"datetime-local\" onChange={(e) => DateToValue(e.target.value)}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.InfoBoton onClick={() => Datos()}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.row2>\n                        <s.DivSpan>\n                            <s.SpanFechas onClick={DateYesterday}>Ayer </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateWeek}>Esta Semana </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastWeek}>La Semana Pasada</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateMonth}>Este Mes</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastMonth}>Mes Pasado</s.SpanFechas>\n                        </s.DivSpan>\n                    </s.row2>\n                    <s.divCards>\n                        <s.divCard>\n                            <s.LabelCard>Total Fatiga de conducción:</s.LabelCard>\n                            <s.LabelCard2></s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Total Aceleración de conducción dura:</s.LabelCard>\n                            <s.LabelCard2></s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Total Frenado Brusco:</s.LabelCard>\n                            <s.LabelCard2></s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Total Giro Brusco:</s.LabelCard>\n                            <s.LabelCard2></s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Total Giro Pronunciado:</s.LabelCard>\n                            <s.LabelCard2></s.LabelCard2>\n                        </s.divCard>\n                    </s.divCards>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={device}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <s.ExcelButon>Exportar Excel</s.ExcelButon>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </s.caja_dispositivo_panelGral>\n    )\n}\n\nexport default InformeComp\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/EstadisticasOp/DetallesEstadia.js",["737","738","739","740","741","742","743","744"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\nimport ReactExport from \"react-data-export\";\nimport axios from 'axios';\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst DetallesEstadia = () => {\n    const [device, setDevice] = useState([]); //SE GUARDAN LOS DISPOSITIVOS\n    const [deviceId, setDeviceId] = useState(\"0\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [errorDevice, setErrorDevice] = useState(false);\n    const ubicacion = [];\n    const [reportData, setReportData] = useState([]); //SE GUARDAN LOS REPORTES\n    const [datosTotal, setDatosTotal] = useState([]);\n    //INSTANCIAS PARA EL EXCEL\n    const ExcelFile = ReactExport.ExcelFile;\n    const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n    const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n    const [filename, setFilename] = useState(\"\");\n\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const DesdeForm = () =>{\n        //validar\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        if (dateFrom.trim() === '' || dateTo.trim() === '') {\n            alert(\"Se debe de indicar una Fecha de Inicio y de Final para generar el reporte\")\n            setError(true);\n            return;\n        }\n        if (dateFrom > dateTo) {\n            alert(\"La fecha de partida no puede ser mayor a la fecha de llegada\");\n            setError(true);\n            return;\n        }\n        setError(false);\n        setErrorDevice(false)\n        Devices();\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToday = () => {\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        setErrorDevice(false)\n        let date = new Date();\n        let dateF1 = new Date(date.getFullYear(), date.getMonth(), date.getDate())\n        dateF1 = dateF1.toISOString()\n\n        let date2 = new Date();\n        let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF2 = dateF2.toISOString()\n        \n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        console.log(dateF1, dateF2)\n        Devices();\n    }\n    const DateYesterday = () => {\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        setErrorDevice(false)\n        let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date1Y = new Date(date)\n        let dateF1 = new Date(date1Y.getFullYear(), date1Y.getMonth(), date1Y.getDate())\n        dateF1 = dateF1.toISOString();\n\n        let date2 = new Date();\n        let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF2 = dateF2.toISOString()\n        \n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        console.log(dateF1, dateF2)\n        Devices();\n    }\n    const Address = async(lon, lat, name, time) => {\n        const url = `https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/reverseGeocode?f=pjson&featureTypes=&location=${lon},${lat}`\n                const resultado = await axios.get(url);\n                //return ubicacion.ShortLabel;\n                console.log(resultado.data.address.LongLabel)\n                /* setUbicacion([\n                    ...ubicacion,\n                    {\n                        lon: lon, \n                        lat: lat, \n                        address: resultado.data.address.LongLabel,\n                        name: name,\n                        time: time,\n                    }\n                ]); */\n    }\n    const DevicesAll = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            console.log(\"antes de consulta \"+ dateFrom)\n            console.log(\"antes de consulta \"+ dateTo)\n            //generar url\n            let url = \"https://www.protrack.ad105.net/api/reports/stops?\";\n            let groupId;\n            for(let i = 0; i < devAll.length; i++){\n                groupId= devAll[i].groupId;\n            }\n            url = url+\"deviceId=\"+deviceId+\"&\";\n            url = url+\"groupId=\"+groupId+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo;\n            console.log(url)\n            const resultado2 = await fetch(`${url}`, requestOptions)\n            const deviceData2 = await resultado2.json();\n            \n\n            console.log(deviceData2)\n            for(let i = 0; i < deviceData2.length; i++){\n                //obtener direccion\n                const url = `https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/reverseGeocode?f=pjson&featureTypes=&location=${deviceData2[i].longitude},${deviceData2[i].latitude}`\n                const resultado = await axios.get(url);\n                //return ubicacion.ShortLabel;\n                console.log(resultado.data.address.LongLabel)\n                ubicacion.push({id: i, lon: deviceData2[i].longitude, lat: deviceData2[i].latitude, address: resultado.data.address.LongLabel, name: deviceData2[i].deviceName, startTime: deviceData2[i].startTime, endTime: deviceData2[i].endTime, duration: deviceData2[i].duration});\n            }\n            console.log(ubicacion);\n            setDatosTotal(ubicacion);\n            \n            /* console.log(ubicacion)\n            setReportData(deviceData2); */\n            setFilename(`DetallesdeEstadia ${dateFrom} - ${dateTo}`);\n    }\n    const TimeFormat = (duration) => {\n        let seconds = (duration / 1000).toFixed(1);\n        let minutes = (duration / (1000 * 60)).toFixed(1);\n        let hours = (duration / (1000 * 60 * 60)).toFixed(1);\n        let days = (duration / (1000 * 60 * 60 * 24)).toFixed(1);\n        if (seconds < 60) return seconds + \" Seg\";\n        else if (minutes < 60) return minutes + \" Min\";\n        else if (hours < 24) return hours + \" Hrs\";\n        else return days + \" Días\"\n    }\n    const Fecha = (fecha) => {\n        const fecha1 = new Date();\n        const date = new Date(fecha);\n        if (fecha1.getDate() === date.getDate()) {\n            return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n        }\n        return date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate()+' '+date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n    }\n    const obtenerUbicacion = (name, time) => {\n        for(let i = 0; i < ubicacion.length; i++){\n            if (ubicacion[i].name === name && ubicacion[i].time === time) {\n                return ubicacion[i].address;\n            }\n        }\n    }\n    //const data = [{ id: 1, objetivo: 'Vehiculo 1', kilometraje: '6.22', velocidad: '76', estadia: '2' }]\n    const columns = [\n        {\n            name: '#',\n            selector: 'id',\n            sortable: true,\n        },\n        {\n            name: 'Tiempo de Inicio',\n            sortable: true,\n            cell: row => <span>{Fecha(row.startTime)}</span>\n        },\n        {\n            name: 'Tiempo Final',\n            sortable: true,\n            cell: row => <span>{Fecha(row.endTime)}</span>\n        },\n        {\n            name: 'Duración de la Estadia',\n            sortable: true,\n            cell: row => <span>{TimeFormat(row.duration)}</span>\n        },\n        {\n            name: 'Ubicación',\n            sortable: true,\n            cell: row => <s.GMapLink href={`http://map.google.com/maps?q=${row.lat},${row.lon}`} target=\"_blank\" rel=\"noreferrer\">\n                            <small>{row.lat} </small>\n                            <small>{row.lon}</small><br/>\n                            <span>{row.address}</span>\n                        </s.GMapLink>\n        },\n    ];\n    const csvEmptyData = [\n        {\n          foo: \"\"\n        }\n      ];\n    //Estructura para guardar en el excel\n    const data = [\n        {\n            xSteps: 3,\n            columns: [\n                { title: \"DETALLES DE ESTADIAS\", width: {wpx: 300}, height: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:14}, border: {top: {style: \"none\", color: \"#fff\"}, bottom: {style: \"nono\", color: \"#fff\"}, left: {style: \"none\", color: \"#fff\"}, right: {style: \"none\", color: \"#fff\"}}}}\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"ESTADIAS\", width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"DESDE \"+dateFrom+\" A \"+dateTo, width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            ySteps: -1,\n            columns: [\n                { title: \"#\", width: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Tiempo de Inicio\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Tiempo Final\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Duración Estadia\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Ubicación\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n            ],\n            data: datosTotal.map((dev, index) => {\n                return [\n                { value: dev.id, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: Fecha(dev.startTime), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: Fecha(dev.endTime), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: TimeFormat(dev.duration), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.lon+' , '+dev.lat+'\\n'+dev.address, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                ];\n            }),\n        },\n    ];\n    //config pagination\n    const paginationComponentOptions = {\n        rowsPerPageText: 'Filas por página',\n        rangeSeparatorText: 'de',\n        selectAllRowsItem: true,\n        selectAllRowsItemText: 'Todos',\n    };\n    return (\n        <s.caja_dispositivo_panelGral style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Detalles de Estadia\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral>Dispositivo <s.selecttGral onChange={(e) => setDeviceId(e.target.value)} className={errorDevice ? 'errorFormDate' :  ''}>\n                                <option value=\"\" selected> -- Dispositivo -- </option>\n                            {devAll.map((item) => (\n                                <option value={item.id}>{item.name}</option>\n                            ))}\n                        </s.selecttGral></s.LabelGral>\n                        <div>\n                            <div>\n                                <s.LabelGral>Fecha <s.inputGral type=\"date\" onChange={(e) =>DateFromValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                                <s.LabelGral>A <s.inputGral type=\"date\" onChange={(e) => DateToValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.LabelGral>Duración Estadia <s.selecttGral>\n                            <option value=\"180000\">3 minutos</option>\n                            <option value=\"300000\">5 minutos</option>\n                            <option value=\"600000\">10 minutos</option>\n                            <option value=\"1800000\">30 minutos</option>\n                            <option value=\"3600000\">1 hora</option>\n                        </s.selecttGral></s.LabelGral>\n                        <s.LabelCheck><s.CheckBox1 type=\"checkbox\" name=\"indice\"/>Indice de Cuenta </s.LabelCheck>\n                        <s.InfoBoton onClick={DesdeForm}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.row2>\n                        <s.DivSpan>\n                            <s.SpanFechas onClick={DateToday}>Hoy </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateYesterday}>Ayer </s.SpanFechas>\n                        </s.DivSpan>\n                    </s.row2>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={datosTotal}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                            pagination\n                            paginationComponentOptions={paginationComponentOptions}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <ExcelFile element={<s.ExcelButon>Exportar Excel</s.ExcelButon>} filename={filename}>\n                            <ExcelSheet dataSet={data} name={filename} />\n                        </ExcelFile>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </s.caja_dispositivo_panelGral>\n    )\n}\n\nexport default DetallesEstadia\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/Comportamiento/VisionGral.js",["745","746","747","748"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst VisionGral = () => {\n    const [device, setDevice] = useState([]);\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const Datos = () => {\n        Devices()\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateYesterday = () => {\n        let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date2 = new Date(date);\n        date2 = date2.toISOString();\n        setDateFrom(date2);\n        setDateTo(date2);\n        console.log(date2)\n        Datos();\n    }\n    const DateWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        date2 = date2.toISOString();\n\n        //Fecha actual\n        let dateToday = new Date();\n        dateToday = dateToday.toISOString();\n        //console.log(dateToday);\n        setDateFrom(date2);\n        setDateTo(dateToday);\n        Datos();\n    }\n    const DateLastWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        date2 = date2.toISOString();\n        //Fecha actual\n        let dateToday = new Date();\n        dateToday = dateToday.toISOString();\n        //console.log(dateToday);\n        setDateFrom(date2);\n        setDateTo(dateToday);\n        Datos();\n    }\n    const DateMonth = () => {\n        let date = new Date();\n        let primerDia = new Date(date.getFullYear(), date.getMonth(), 1);\n        let diaActual = date;\n        setDateFrom(primerDia.toISOString());\n        setDateTo(diaActual.toISOString());\n        Datos();\n    }\n    const DateLastMonth = () => {\n        let dte = new Date();\n        var primerDia = new Date(dte.getFullYear(), dte.getMonth() -1, 1);\n        var ultimoDia = new Date(dte.getFullYear(), dte.getMonth(), 0);\n        setDateFrom(primerDia.toISOString());\n        //Fecha actual\n        setDateTo(ultimoDia.toISOString());\n        Datos();\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            if (dateFrom === \"\" && dateTo === \"\") {\n                const resultado = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n                const resultado2 = await fetch(`https://www.protrack.ad105.net/api/positions`, requestOptions)\n                /* .then(response => response.json())\n                .catch(error => console.log('error', error)); */\n                const deviceData = await resultado.json();\n                const deviceData2 = await resultado2.json();\n\n                var full = [] //JSONS MEZClados\n                Object.keys(deviceData).forEach(k=>{full[k] = Object.assign(deviceData[k],deviceData2[k])});\n\n                console.log('full data')\n                console.log(full);\n                setDevice(full);\n            }\n            else{\n                const resultado = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n                const resultado2 = await fetch(`https://www.protrack.ad105.net/api/positions?from=${dateFrom}:00.000z&to=${dateTo}:00.000z`, requestOptions)\n                /* .then(response => response.json())\n                .catch(error => console.log('error', error)); */\n                const deviceData = await resultado.json();\n                const deviceData2 = await resultado2.json();\n\n                var full = [] //JSONS MEZClados\n                Object.keys(deviceData).forEach(k=>{full[k] = Object.assign(deviceData[k],deviceData2[k])});\n\n                console.log('full data')\n                console.log(full);\n                setDevice(full);\n            }\n\n                \n    }\n    const data = [{ id: 1, objetivo: 'Vehiculo 1', kilometraje: '6.22', velocidad: '76', estadia: '2' }]\n    const columns = [\n        {\n            name: '#',\n            selector: 'deviceId',\n            sortable: true,\n        },\n        {\n            name: 'Objetivo',\n            selector: 'name',\n            sortable: true,\n        },\n        {\n            name: 'Fatiga de conducción',\n            selector: 'fatiga',\n            sortable: true,\n        },\n        {\n            name: 'Aceleración de conducción dura',\n            selector: 'aceleracion',\n            sortable: true,\n        },\n        {\n            name: 'Frenado Brusco',\n            selector: 'frenado',\n            sortable: true,\n        },\n        {\n            name: 'Giro Brusco',\n            selector: 'giro',\n            sortable: true,\n        },\n        {\n            name: 'Giro Pronunciado',\n            selector: 'pronunciado',\n            sortable: true,\n        },\n    ];\n    return (\n        <s.caja_dispositivo_panelGral style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Visión General del Comportamiento de Conducción.\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <div>\n                            <div>\n                            <s.LabelGral>Fecha <s.inputGral type=\"datetime-local\" onChange={(e) =>DateFromValue(e.target.value)}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"datetime-local\" onChange={(e) => DateToValue(e.target.value)}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.InfoBoton onClick={() => Datos()}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.row2>\n                        <s.DivSpan>\n                            <s.SpanFechas onClick={DateYesterday}>Ayer </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateWeek}>Esta Semana </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastWeek}>La Semana Pasada</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateMonth}>Este Mes</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastMonth}>Mes Pasado</s.SpanFechas>\n                        </s.DivSpan>\n                    </s.row2>\n                    <s.divCards>\n                        <s.divCard>\n                            <s.LabelCard>Total Fatiga de conducción:</s.LabelCard>\n                            <s.LabelCard2></s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Total Aceleración de conducción dura:</s.LabelCard>\n                            <s.LabelCard2></s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Total Frenado Brusco:</s.LabelCard>\n                            <s.LabelCard2></s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Total Giro Brusco:</s.LabelCard>\n                            <s.LabelCard2></s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Total Giro Pronunciado:</s.LabelCard>\n                            <s.LabelCard2></s.LabelCard2>\n                        </s.divCard>\n                    </s.divCards>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={device}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <s.ExcelButon>Exportar Excel</s.ExcelButon>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </s.caja_dispositivo_panelGral>\n    )\n}\n\nexport default VisionGral\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/ReportesViaje/InformeViaje.js",["749","750","751","752","753","754"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\nimport ReactExport from \"react-data-export\";\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst InformeViaje = () => {\n    const [device, setDevice] = useState([]); //SE GUARDAN LOS DISPOSITIVOS\n    const [deviceId, setDeviceId] = useState(\"0\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [errorDevice, setErrorDevice] = useState(false);\n    const [reportData, setReportData] = useState([]); //SE GUARDAN LOS REPORTES\n    const [ubicacion, setUbicacion] = useState([]);\n    const [totalOdometro, setTotalOdometro] = useState(0);\n    const [totalDuration, setTotalDuration] = useState(0);\n    const [totalSpeed, setTotalSpeed] = useState(0)\n    //INSTANCIAS PARA EL EXCEL\n    const ExcelFile = ReactExport.ExcelFile;\n    const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n    const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n    const [filename, setFilename] = useState(\"\");\n\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const DesdeForm = () =>{\n        //validar\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        if (dateFrom.trim() === '' || dateTo.trim() === '') {\n            alert(\"Se debe de indicar una Fecha de Inicio y de Final para generar el reporte\")\n            setError(true);\n            return;\n        }\n        if (dateFrom > dateTo) {\n            alert(\"La fecha de partida no puede ser mayor a la fecha de llegada\");\n            setError(true);\n            return;\n        }\n        setError(false);\n        setErrorDevice(false)\n        Devices();\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToday = () => {\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        setErrorDevice(false)\n        let date = new Date();\n        let dateF1 = new Date(date.getFullYear(), date.getMonth(), date.getDate())\n        dateF1 = dateF1.toISOString()\n\n        let date2 = new Date();\n        let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF2 = dateF2.toISOString()\n        \n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        console.log(dateF1, dateF2)\n        Devices();\n    }\n    const DateYesterday = () => {\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        setErrorDevice(false)\n        let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date1Y = new Date(date)\n        let dateF1 = new Date(date1Y.getFullYear(), date1Y.getMonth(), date1Y.getDate())\n        dateF1 = dateF1.toISOString();\n\n        let date2 = new Date();\n        let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF2 = dateF2.toISOString()\n        \n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        console.log(dateF1, dateF2)\n        Devices();\n    }\n    const DevicesAll = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            console.log(\"antes de consulta \"+ dateFrom)\n            console.log(\"antes de consulta \"+ dateTo)\n            //generar url\n            let url = \"https://www.protrack.ad105.net/api/reports/trips?\";\n            let groupId;\n            for(let i = 0; i < devAll.length; i++){\n                groupId= devAll[i].groupId;\n            }\n            url = url+\"deviceId=\"+deviceId+\"&\";\n            url = url+\"groupId=\"+groupId+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo;\n            console.log(url)\n            const resultado2 = await fetch(`${url}`, requestOptions)\n            const deviceData2 = await resultado2.json();\n            \n\n            console.log(deviceData2)\n            let odometro = 0;\n            let duracion = 0;\n            let speed = 0;\n            for(let i = 0; i < deviceData2.length; i++){\n                speed = speed + deviceData2[i].averageSpeed;\n                duracion = duracion + deviceData2[i].duration;\n                odometro = odometro + deviceData2[i].endOdometer\n            }\n            setTotalDuration(duracion)\n            setTotalSpeed(speed)\n            setTotalOdometro(odometro)\n            \n            console.log(ubicacion)\n            setReportData(deviceData2);\n            setFilename(`InformedeViajeenExcesodeVelocidad ${dateFrom} - ${dateTo}`);\n    }\n    const TimeFormat = (duration) => {\n        let seconds = (duration / 1000).toFixed(1);\n        let minutes = (duration / (1000 * 60)).toFixed(1);\n        let hours = (duration / (1000 * 60 * 60)).toFixed(1);\n        let days = (duration / (1000 * 60 * 60 * 24)).toFixed(1);\n        if (seconds < 60) return seconds + \" Seg\";\n        else if (minutes < 60) return minutes + \" Min\";\n        else if (hours < 24) return hours + \" Hrs\";\n        else return days + \" Días\"\n    }\n    const Fecha = (fecha) => {\n        const fecha1 = new Date();\n        const date = new Date(fecha);\n        if (fecha1.getDate() === date.getDate()) {\n            return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n        }\n        return date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate()+' '+date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n    }\n    //const data = [{ id: 1, objetivo: 'Vehiculo 1', kilometraje: '6.22', velocidad: '76', estadia: '2' }]\n    const columns = [\n        {\n            name: '#',\n            selector: 'deviceId',\n            sortable: true,\n        },\n        {\n            name: 'Tiempo Inicio',\n            sortable: true,\n            cell: row => <span>{Fecha(row.startTime)}</span>\n        },\n        {\n            name: 'Tiempo Final',\n            sortable: true,\n            cell: row => <span>{Fecha(row.endTime)}</span>\n        },\n        {\n            name: 'Kilometraje(Km)',\n            sortable: true,\n            cell: row => <span>{((row.averageSpeed)*1.852).toFixed(2)+' Km/h'}</span>\n        },\n        {\n            name: 'Duración',\n            sortable: true,\n            cell: row => <span>{TimeFormat(row.duration)}</span>\n        },\n        {\n            name: 'Lugar de Inicio',\n            sortable: true,\n            cell: row => <s.GMapLink href={`http://map.google.com/maps?q=${row.startLat},${row.startLon}`} target=\"_blank\" rel=\"noreferrer\">\n                            <span>{row.startLat}</span>\n                            <span>{row.startLon}</span>\n                        </s.GMapLink>\n        },\n        {\n            name: 'fin Localización',\n            sortable: true,\n            cell: row => <s.GMapLink href={`http://map.google.com/maps?q=${row.endLat},${row.endLon}`} target=\"_blank\" rel=\"noreferrer\">\n                            <span>{row.endLat}</span>\n                            <span>{row.endLon}</span>\n                        </s.GMapLink>\n        },\n    ];\n    const csvEmptyData = [\n        {\n          foo: \"\"\n        }\n      ];\n    //Estructura para guardar en el excel\n    const data = [\n        {\n            xSteps: 3,\n            columns: [\n                { title: \"Informe de Viaje en Exceso de Velocidad\", width: {wpx: 300}, height: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:14}, border: {top: {style: \"none\", color: \"#fff\"}, bottom: {style: \"nono\", color: \"#fff\"}, left: {style: \"none\", color: \"#fff\"}, right: {style: \"none\", color: \"#fff\"}}}}\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"Exceso de Velocidad\", width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"DESDE \"+dateFrom+\" A \"+dateTo, width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            ySteps: -1,\n            columns: [\n                { title: \"#\", width: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Tiempo de Inicio\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Tiempo Final\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Kilometraje(Km)\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Duración\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Lugar de Inicio\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Fin localización\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n            ],\n            data: reportData.map((dev, index) => {\n                return [\n                { value: dev.deviceId, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: Fecha(dev.startTime), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: Fecha(dev.endTime), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: ((dev.averageSpeed)*1.852).toFixed(2)+' Km/h', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: TimeFormat(dev.duration), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.startLat+' , '+dev.startLon, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.endLat+' , '+dev.endLon, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                ];\n            }),\n        },\n    ];\n    return (\n        <s.caja_dispositivo_panelGral style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Informe de Viaje en exceso de Velocidad\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral>Dispositivo <s.selecttGral onChange={(e) => setDeviceId(e.target.value)} className={errorDevice ? 'errorFormDate' :  ''}>\n                                <option value=\"\" selected> -- Dispositivo -- </option>\n                            {devAll.map((item) => (\n                                <option value={item.id}>{item.name}</option>\n                            ))}\n                        </s.selecttGral></s.LabelGral>\n                        <div>\n                            <div>\n                            <s.LabelGral>Fecha <s.inputGral type=\"date\" onChange={(e) =>DateFromValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"date\" onChange={(e) => DateToValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.InfoBoton onClick={DesdeForm}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.row2>\n                        <s.DivSpan>\n                            <s.SpanFechas onClick={DateYesterday}>Ayer </s.SpanFechas>\n                        </s.DivSpan>\n                    </s.row2>\n                    <s.divCards>\n                        <s.divCard>\n                            <s.LabelCard>Total Odometro:</s.LabelCard>\n                            <s.LabelCard2>{totalOdometro.toFixed(0)+' Km'}</s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Total Duración:</s.LabelCard>\n                            <s.LabelCard2>{TimeFormat(totalDuration)}</s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Velocidad Mínima:</s.LabelCard>\n                            <s.LabelCard2>{((totalSpeed)*1.852).toFixed(2)+' Km/h'}</s.LabelCard2>\n                        </s.divCard>\n                    </s.divCards>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={reportData}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <ExcelFile element={<s.ExcelButon>Exportar Excel</s.ExcelButon>} filename={filename}>\n                            <ExcelSheet dataSet={data} name={filename} />\n                        </ExcelFile>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </s.caja_dispositivo_panelGral>\n    )\n}\n\nexport default InformeViaje\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/GeoCercas.js",["755","756","757","758","759","760","761","762","763","764","765","766"],"import React, { useEffect, useState, useContext } from 'react'\nimport * as s from './GeoCercas.styles'\nimport { BsBellFill, BsPlus, BsGearFill, BsPencil, BsTrash } from \"react-icons/bs\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { SiCircle } from \"react-icons/si\";\nimport { FiTarget } from \"react-icons/fi\";\nimport { FaDrawPolygon } from \"react-icons/fa\";\nimport { BsCircle } from \"react-icons/bs\";\nimport { HiOutlineViewGridAdd } from \"react-icons/hi\";\nimport { AiOutlineClockCircle } from \"react-icons/ai\";\n\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemHeading,\n    AccordionItemButton,\n    AccordionItemPanel,\n} from 'react-accessible-accordion';\nimport Modal from 'react-modal';\nimport '../../styles/modals.css';\nimport { AiFillCaretDown } from 'react-icons/ai';\nimport './PopUp.css';\nimport GeoCercasModal from './GeoCercasModal';\n\nimport './PopUp.css';\n/* CONTEXT */\nimport {MenContext} from '../../Context/MenuContext';\n\nconst GeoCercas = ({ver, ocultar}) => {\n    /* State desde context */\n    const { drawClick, setDrawClick, colorValue, setColorValue, latFenceCircle, lngFenceCirlce, bounds, radiusFence } = useContext(MenContext);\n    /* State */\n    const [geoFences, setGeoFences] = useState([]);\n    const [modalState, setModalState] = useState(false); // State MODAL\n    const [geoItem, setGeoItem] = useState([])\n    const [toggle, setToggle] = React.useState(false);\n    const [icon, setIcon] = useState(0); // Valor color del colorpicker\n    const [nameFence, setNameFence] = useState(\"\"); //Nombre para GEOCERCA\n    const [refrsh, setRefrsh] = useState(false);\n    const [boundsC, setBoundsC] = useState(\"\");\n    const handleToggle = () => {\n        setToggle(!toggle)\n    }\n    const [toggle2, setToggle2] = React.useState(false);\n    const mostrarFormGeo = () => {\n        setToggle2(!toggle2)\n        setDrawClick({\n            shape: null,\n            active: false,\n            color: null,\n        })\n    }\n    const [toggle3, setToggle3] = React.useState(false);\n    const timeInput = () => {\n        setToggle3(!toggle3)\n    }\n    useEffect(() => {\n        GeoCercas()\n    }, [refrsh])\n    const GeoCercas = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resultado = await fetch(\"https://www.protrack.ad105.net/api/geofences\", requestOptions)\n                /* .then(response => response.json())\n                .catch(error => console.log('error', error)); */\n                const geofenceData = await resultado.json();\n                /* console.log(deviceData) */\n                setGeoFences(geofenceData);\n                /* console.log(device) */\n    }\n    const deleteGeo = async(id) =>{\n        \n        var confirmar = window.confirm(\"¿Borrar GeoCerca?\");\n        if (confirmar) {\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'DELETE',\n                credentials: 'include',\n                headers: myHeaders,\n            };\n            \n            const resultado = await fetch(`https://www.protrack.ad105.net/api/geofences/${id}`, requestOptions)\n\n            setRefrsh(!refrsh);\n        }\n        else{\n            console.log(\"No se Elimino Geocerca\")\n        }\n    }\n    const saveItem = (modal, item) => {\n        setModalState(modal);\n        setGeoItem(item);\n    }\n\n    const FormGeoCerca = (valor, icon) =>{\n        setToggle2(valor);\n        handleToggle();\n        setIcon(icon);\n        if (icon === 1) {\n            setDrawClick({\n                shape: 'circle',\n                active: true,\n                color: colorValue,\n            })\n        }\n        if (icon === 2) {\n            setDrawClick({\n                shape: 'polygon',\n                active: true,\n                color: colorValue,\n            })\n        }\n    }\n    const saveFence = async() => {\n        console.log(nameFence);\n        if (nameFence === '') {\n            return alert(\"Nombre de Geocerca no puede estar en blanco\");\n        }\n        var dataFence = {}\n        if (drawClick.shape === \"circle\") {\n            dataFence = {\n                \"id\": 0,\n                \"name\": `${nameFence}`,\n                \"description\": `${nameFence}`,\n                \"area\": `CIRCLE(${latFenceCircle} ${lngFenceCirlce}, ${radiusFence})`,\n                \"calendarId\": 0,\n                \"attributes\": {\n                    \"shape\": \"circle\",\n                    \"color\": `${colorValue}`,\n                }\n            }\n        }\n        if (drawClick.shape === \"polygon\") {\n            var bnds = bounds.toString().replaceAll('LatLng(', '(');\n            var bnds = bnds.replaceAll(',', '');\n            var bnds = bnds.replaceAll('(', '');\n            var bnds = bnds.replaceAll(')', ',');\n\n            var bnds2 = bounds[0][0];\n            var bnds2 = bnds2.toString().replaceAll('LatLng(', '(');\n            var bnds2 = bnds2.replaceAll(',', '');\n            var bnds2 = bnds2.replaceAll('(', '');\n            var bnds2 = bnds2.replaceAll(')', '');\n\n            bnds = '('+bnds+' '+bnds2+')';\n            /* console.log(\"Puntos: \"+bounds.toString().replaceAll('LatLng(', '(')); */\n            /* console.log(bnds); */\n            dataFence = {\n                \"id\": 0,\n                \"name\": `${nameFence}`,\n                \"description\": `${nameFence}`,\n                \"area\": `POLYGON(${bnds})`,\n                \"calendarId\": 0,\n                \"attributes\": {\n                    \"shape\": \"polygon\",\n                    \"color\": `${colorValue}`,\n                }\n            }\n        }\n        console.log(dataFence);\n        const response = await fetch(\"https://www.protrack.ad105.net/api/geofences/\", \n                                    {\n                                        credentials: 'include',\n                                        method: 'POST',\n                                        headers:{\n                                        'Content-Type': 'application/json',\n                                    },\n                                    body: JSON.stringify(dataFence)\n                                    });\n        if(response.ok) {\n            const geofence = await response.json();\n            console.log(geofence.id);\n        }else{\n            alert('No OK');\n        }\n\n        setRefrsh(!refrsh);\n        setToggle2(false)\n        setDrawClick({\n            shape: null,\n            active: false,\n            color: null,\n        })\n    }\n    return (\n        <s.Container>\n            <s.geoForm visibility={toggle2}>\n                <s.geoFormContent>\n                    <s.rowFenceForm>\n                        <s.CheckBoxFenceForm type=\"checkbox\" checked/>\n                        {\n                            icon === 1 ? <BsCircle className=\"iconsGeoFence\" /> : <FaDrawPolygon className=\"iconsGeoFence\" />\n                        }\n                        <s.entrada_interna type='text' autoComplete='off' placeholder='Nombre GEO-CERCA' onChange={(e) => setNameFence(e.target.value)} />\n                        <HiOutlineViewGridAdd className=\"iconsGeoFenceForm\"/>\n                        <s.ColorPicker type=\"color\" onChange={(e) => setColorValue(e.target.value)}/>\n                        <AiOutlineClockCircle className=\"iconsGeoFenceForm\" onClick={timeInput}/>\n                    </s.rowFenceForm>\n                    <s.rowFenceForm className=\"numberFormGeo\">\n                        <s.entrada_interna type='number' min=\"0\" max=\"400\" step=\"10\" />Km/h\n                    </s.rowFenceForm>\n                    <s.rowFenceForm2 className=\"dateFormGeo\" visibility={toggle3}>\n                        <s.entrada_interna type='time'/>\n                    </s.rowFenceForm2>\n                    <s.rowFenceForm className=\"buttonFormGeo\">\n                        <s.FenceFormButtonAction onClick={saveFence}>Guardar</s.FenceFormButtonAction>\n                        <s.FenceFormButtonCancel onClick={mostrarFormGeo}>Cancelar</s.FenceFormButtonCancel>\n                    </s.rowFenceForm>\n                </s.geoFormContent>\n            </s.geoForm>\n            <s.busqueda_dispositivo>\n                <s.CheckBoxSearch type=\"checkbox\"/>\n                <s.busqueda_en_linea aria-haspopup=\"listbox\" role=\"combobox\" aria-owns=\"el-complete-8812\">\n                    <s.sufijo_entrada>\n                        <s.entrada_interna type='text' autoComplete='off' valuekey='value' placeholder='Nombre' />\n\n                    </s.sufijo_entrada>\n                </s.busqueda_en_linea>\n                <s.GeoAlarm onClick={() => setModalState(true)}>\n                    <BsBellFill/>\n                </s.GeoAlarm>\n                <s.GeoAlarm onClick={handleToggle}>\n                    <BsPlus/>\n                </s.GeoAlarm>\n                <s.geoFenceOptions visibility={toggle}>\n                        <s.geoFenceOpt onClick={() => FormGeoCerca(true, 1)}><BsCircle /> Circulo</s.geoFenceOpt>\n                        <s.geoFenceOpt onClick={() => FormGeoCerca(true, 2)}><FaDrawPolygon /> Poligono</s.geoFenceOpt>\n                </s.geoFenceOptions>\n                <s.GeoAlarm>\n                    <IoIosArrowDown/>\n                </s.GeoAlarm>\n            </s.busqueda_dispositivo>\n            <Accordion allowZeroExpanded className=\"acordion-geo\">\n                <AccordionItem>\n                    <AccordionItemHeading>\n                        <AccordionItemButton className=\"accordion__button2\">\n                            <AiFillCaretDown/>\n                            <s.CheckBox1 type=\"checkbox\"/>\n                            Grupo Predeterminado ({geoFences.length})\n                        </AccordionItemButton>\n                    </AccordionItemHeading>\n                    <AccordionItemPanel className=\"itemPanelGeo\">\n                        {\n                            geoFences.map(item => (\n                                <s.divGeofenceItem key={item.id}>\n                                    <s.GeoItemDiv>\n                                        <s.CheckBox1 type=\"checkbox\"/>\n                                        <s.SpanGeoItemIcon>\n                                            {item.attributes.shape === 'circle' ?<BsCircle/> : null}\n                                            {item.attributes.shape === 'polygon' ?<FaDrawPolygon/> : null}\n                                        </s.SpanGeoItemIcon>\n                                        <s.SpanGeoItem id={item.id}>{item.name}</s.SpanGeoItem>\n                                    </s.GeoItemDiv>\n                                    <s.BuutonDivGeo>\n                                        <s.ButtonGeoItem onClick={() => saveItem(true, item)}><BsGearFill/></s.ButtonGeoItem>\n                                        <s.ButtonGeoItem><BsPencil/></s.ButtonGeoItem>\n                                        <s.ButtonGeoItem onClick={() => deleteGeo(item.id)}><BsTrash/></s.ButtonGeoItem>\n                                    </s.BuutonDivGeo>\n                                </s.divGeofenceItem>\n                            ))\n                        }\n                    </AccordionItemPanel>\n                </AccordionItem>\n            </Accordion>\n            <Modal \n                isOpen={modalState}\n                onRequestClose={() => setModalState(false)}\n                style={{\n                    overlay: {\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        right: 0,\n                        bottom: 0,\n                        backgroundColor: 'rgba(15, 15, 15, 0.507)'\n                    },\n                    content: {\n                        width: 650,\n                        height: 478\n                    }\n                }}\n            >\n                <s.HeaderModal>\n                    <s.TituloModal><BsGearFill/> Configuración de GeoCercas</s.TituloModal>\n                    <s.CerrarModal onClick={() => setModalState(false)}>+</s.CerrarModal>\n                </s.HeaderModal>\n                {/* CONTENIDO */}\n                <GeoCercasModal data={geoItem}/>\n            </Modal>\n        </s.Container>\n    )\n}\n\nexport default GeoCercas\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/EstadisticasOp/DetallesVel.js",["767","768","769","770","771","772","773","774","775"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\nimport ReactExport from \"react-data-export\";\nimport axios from 'axios';\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst DetallesVel = () => {\n    const [device, setDevice] = useState([]); //SE GUARDAN LOS DISPOSITIVOS\n    const [deviceId, setDeviceId] = useState(\"0\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [errorDevice, setErrorDevice] = useState(false);\n    const ubicacion = [];\n    const [reportData, setReportData] = useState([]); //SE GUARDAN LOS REPORTES\n    const [datosTotal, setDatosTotal] = useState([]);\n    //INSTANCIAS PARA EL EXCEL\n    const ExcelFile = ReactExport.ExcelFile;\n    const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n    const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n    const [filename, setFilename] = useState(\"\");\n\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const DesdeForm = () =>{\n        //validar\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        if (dateFrom.trim() === '' || dateTo.trim() === '') {\n            alert(\"Se debe de indicar una Fecha de Inicio y de Final para generar el reporte\")\n            setError(true);\n            return;\n        }\n        if (dateFrom > dateTo) {\n            alert(\"La fecha de partida no puede ser mayor a la fecha de llegada\");\n            setError(true);\n            return;\n        }\n        setError(false);\n        setErrorDevice(false)\n        Devices();\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToday = () => {\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        setErrorDevice(false)\n        let date = new Date();\n        let dateF1 = new Date(date.getFullYear(), date.getMonth(), date.getDate())\n        dateF1 = dateF1.toISOString()\n\n        let date2 = new Date();\n        let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF2 = dateF2.toISOString()\n        \n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        console.log(dateF1, dateF2)\n        Devices();\n    }\n    const DateYesterday = () => {\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        setErrorDevice(false)\n        let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date1Y = new Date(date)\n        let dateF1 = new Date(date1Y.getFullYear(), date1Y.getMonth(), date1Y.getDate())\n        dateF1 = dateF1.toISOString();\n\n        let date2 = new Date();\n        let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF2 = dateF2.toISOString()\n        \n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        console.log(dateF1, dateF2)\n        Devices();\n    }\n    const Address = async(id, lon, lat, name, time, speed) => {\n        const url = `https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/reverseGeocode?f=pjson&featureTypes=&location=${lon},${lat}`\n                const resultado = await axios.get(url);\n                //return ubicacion.ShortLabel;\n                console.log(resultado.data.address.LongLabel)\n                ubicacion.push({id: id, lon: lon, lat: lat, address: resultado.data.address.LongLabel, name: name, time: time, speed: speed});\n    }\n    const DevicesAll = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            if (deviceId === \"all\") {\n                console.log(\"antes de consulta \"+ dateFrom)\n                console.log(\"antes de consulta \"+ dateTo)\n                //generar url\n                let url = \"https://www.protrack.ad105.net/api/reports/trips?\";\n                let groupId;\n                for(let i = 0; i < devAll.length; i++){\n                    url = url+\"deviceId=\"+devAll[i].id+\"&\";\n                    groupId= devAll[i].groupId;\n                }\n                url = url+\"groupId=\"+groupId+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo;\n                console.log(url)\n                const resultado2 = await fetch(`${url}`, requestOptions)\n                const deviceData2 = await resultado2.json();\n\n                console.log(deviceData2)\n                for(let i = 0; i < deviceData2.length; i++){\n                    //obtener direccion\n                    const url = `https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/reverseGeocode?f=pjson&featureTypes=&location=${deviceData2[i].endLon},${deviceData2[i].endLat}`\n                    const resultado = await axios.get(url);\n                    //return ubicacion.ShortLabel;\n                    console.log(resultado.data.address.LongLabel)\n                    ubicacion.push({id: i, lon: deviceData2[i].endLon, lat: deviceData2[i].endLat, address: resultado.data.address.LongLabel, name: deviceData2[i].deviceName, time: deviceData2[i].endTime, speed: deviceData2[i].averageSpeed});\n                 }\n                 console.log(ubicacion);\n                 setDatosTotal(ubicacion);\n                /* setReportData(deviceData2);\n                console.log(reportData) */\n                setFilename(`DetallesdeExcesodeVelocidad ${dateFrom} - ${dateTo}`);\n            }\n            else{\n                console.log(\"antes de consulta \"+ dateFrom)\n                console.log(\"antes de consulta \"+ dateTo)\n                //generar url\n                let url = \"https://www.protrack.ad105.net/api/reports/trips?\";\n                let groupId;\n                for(let i = 0; i < devAll.length; i++){\n                    groupId= devAll[i].groupId;\n                }\n                url = url+\"deviceId=\"+deviceId+\"&\";\n                url = url+\"groupId=\"+groupId+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo;\n                console.log(url)\n                const resultado2 = await fetch(`${url}`, requestOptions)\n                const deviceData2 = await resultado2.json();\n                \n\n                console.log(deviceData2)\n                for(let i = 0; i < deviceData2.length; i++){\n                    //obtener direccion\n                    const url = `https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/reverseGeocode?f=pjson&featureTypes=&location=${deviceData2[i].endLon},${deviceData2[i].endLat}`\n                    const resultado = await axios.get(url);\n                    //return ubicacion.ShortLabel;\n                    console.log(resultado.data.address.LongLabel)\n                    ubicacion.push({id: i, lon: deviceData2[i].endLon, lat: deviceData2[i].endLat, address: resultado.data.address.LongLabel, name: deviceData2[i].deviceName, time: deviceData2[i].endTime, speed: deviceData2[i].averageSpeed});\n                 }\n               \n                console.log(ubicacion)\n                setDatosTotal(ubicacion);\n                /* setReportData(deviceData2);\n                console.log(reportData); */\n                setFilename(`DetallesdeExcesodeVelocidad ${dateFrom} - ${dateTo}`);\n            }\n    }\n    const TimeFormat = (duration) => {\n        let seconds = (duration / 1000).toFixed(1);\n        let minutes = (duration / (1000 * 60)).toFixed(1);\n        let hours = (duration / (1000 * 60 * 60)).toFixed(1);\n        let days = (duration / (1000 * 60 * 60 * 24)).toFixed(1);\n        if (seconds < 60) return seconds + \" Seg\";\n        else if (minutes < 60) return minutes + \" Min\";\n        else if (hours < 24) return hours + \" Hrs\";\n        else return days + \" Días\"\n    }\n    const Fecha = (fecha) => {\n        const fecha1 = new Date();\n        const date = new Date(fecha);\n        if (fecha1.getDate() === date.getDate()) {\n            return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n        }\n        return date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate();\n    }\n    const obtenerUbicacion = (speed) => {\n        let address\n        for(let i = 0; i < ubicacion.length; i++){\n            if (ubicacion[i].averageSpeed === speed) {\n                address = ubicacion[i].address;\n            }\n        }\n        return address;\n    }\n\n    //const data = [{ id: 1, objetivo: 'Vehiculo 1', kilometraje: '6.22', velocidad: '76', estadia: '2' }]\n    const columns = [\n        {\n            name: '#',\n            selector: 'id',\n            sortable: true,\n        },\n        {\n            name: 'Objetivo',\n            selector: 'name',\n            sortable: true,\n        },\n        {\n            name: 'Tiempo GPS',\n            sortable: true,\n            cell: row => <span>{Fecha(row.time)}</span>\n        },\n        {\n            name: 'Velocidad (Km/h)',\n            sortable: true,\n            cell: row => <span>{((row.speed)*1.852).toFixed(2)+' Km/h'}</span>\n        },\n        {\n            name: 'Longitud',\n            selector: 'lon',\n            sortable: true,\n        },\n        {\n            name: 'Latitud',\n            selector: 'lat',\n            sortable: true,\n        },\n        {\n            name: 'Ubicación',\n            sortable: true,\n            cell: row => <s.GMapLink href={`http://map.google.com/maps?q=${row.lat},${row.lon}`} target=\"_blank\" rel=\"noreferrer\">\n                            <span>{row.address}</span>\n                        </s.GMapLink>\n        },\n    ];\n    const csvEmptyData = [\n        {\n          foo: \"\"\n        }\n      ];\n    //Estructura para guardar en el excel\n    const data = [\n        {\n            xSteps: 3,\n            columns: [\n                { title: \"DETALLES DE EXCESO DE VELOCIDAD\", width: {wpx: 300}, height: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:14}, border: {top: {style: \"none\", color: \"#fff\"}, bottom: {style: \"nono\", color: \"#fff\"}, left: {style: \"none\", color: \"#fff\"}, right: {style: \"none\", color: \"#fff\"}}}}\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"EXCESO DE VELOCIDAD\", width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"DESDE \"+dateFrom+\" A \"+dateTo, width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            ySteps: -1,\n            columns: [\n                { title: \"#\", width: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Objetivo\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Tiempo GPS\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Velocidad (Km/h)\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Longitud\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Latitud\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Ubicación\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n            ],\n            data: datosTotal.map((dev, index) => {\n                return [\n                { value: dev.id, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.name, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: Fecha(dev.time), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: ((dev.speed)*1.852).toFixed(2)+' Km/h', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.lon, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.lat, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.address, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                ];\n            }),\n        },\n    ];\n    //config pagination\n    const paginationComponentOptions = {\n        rowsPerPageText: 'Filas por página',\n        rangeSeparatorText: 'de',\n        selectAllRowsItem: true,\n        selectAllRowsItemText: 'Todos',\n    };\n    return (\n        <s.caja_dispositivo_panelGral style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Detalles de Exceso de Velocidad\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral>Dispositivo <s.selecttGral onChange={(e) => setDeviceId(e.target.value)} className={errorDevice ? 'errorFormDate' :  ''}>\n                                <option value=\"\" selected> -- Dispositivo -- </option>\n                                <option value=\"all\" > -- TODOS -- </option>\n                            {devAll.map((item) => (\n                                <option value={item.id}>{item.name}</option>\n                            ))}\n                        </s.selecttGral></s.LabelGral>\n                        <div>\n                            <div>\n                            <s.LabelGral>Fecha <s.inputGral type=\"date\" onChange={(e) =>DateFromValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"date\" onChange={(e) => DateToValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.InfoBoton onClick={DesdeForm}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.row2>\n                        <s.DivSpan>\n                            <s.SpanFechas onClick={DateToday}>Hoy </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateYesterday}>Ayer </s.SpanFechas>\n                        </s.DivSpan>\n                    </s.row2>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={datosTotal}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                            pagination\n                            paginationComponentOptions={paginationComponentOptions}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <ExcelFile element={<s.ExcelButon>Exportar Excel</s.ExcelButon>} filename={filename}>\n                            <ExcelSheet dataSet={data} name={filename} />\n                        </ExcelFile>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </s.caja_dispositivo_panelGral>\n    )\n}\n\nexport default DetallesVel\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/ACC/InformeRM.js",["776","777","778","779","780","781","782","783"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\nimport ReactExport from \"react-data-export\";\nimport axios from 'axios';\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst InformeRM = () => {\n    const [device, setDevice] = useState([]); //SE GUARDAN LOS DISPOSITIVOS\n    const [deviceId, setDeviceId] = useState(\"0\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [errorDevice, setErrorDevice] = useState(false);\n    const ubicacion = [];\n    const [reportData, setReportData] = useState([]); //SE GUARDAN LOS REPORTES\n    const [datosTotal, setDatosTotal] = useState([]);\n    //INSTANCIAS PARA EL EXCEL\n    const ExcelFile = ReactExport.ExcelFile;\n    const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n    const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n    const [filename, setFilename] = useState(\"\");\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const DesdeForm = () =>{\n        //validar\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        if (dateFrom.trim() === '' || dateTo.trim() === '') {\n            alert(\"Se debe de indicar una Fecha de Inicio y de Final para generar el reporte\")\n            setError(true);\n            return;\n        }\n        if (dateFrom > dateTo) {\n            alert(\"La fecha de partida no puede ser mayor a la fecha de llegada\");\n            setError(true);\n            return;\n        }\n        setError(false);\n        setErrorDevice(false)\n        Devices();\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateYesterday = () => {\n        let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date1Y = new Date(date)\n        let dateF1 = new Date(date1Y.getFullYear(), date1Y.getMonth(), date1Y.getDate())\n        dateF1 = dateF1.toISOString();\n\n        let date2 = new Date();\n        let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF2 = dateF2.toISOString()\n        \n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        console.log(dateF1, dateF2)\n        Devices();\n    }\n    const DateWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DateLastWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DateMonth = () => {\n        let date = new Date();\n        let primerDia = new Date(date.getFullYear(), date.getMonth(), 1);\n        let dateF1 = new Date(primerDia.getFullYear(), primerDia.getMonth(), primerDia.getDate())\n        let diaActual = date;\n        let dateF2 = new Date(diaActual.getFullYear(), diaActual.getMonth(), diaActual.getDate())\n        setDateFrom(dateF1.toISOString());\n        setDateTo(dateF2.toISOString());\n        Devices();\n    }\n    const DateLastMonth = () => { //bien\n        let dte = new Date();\n        var primerDia = new Date(dte.getFullYear(), dte.getMonth() -1, 1);\n        let dateF1 = new Date(primerDia.getFullYear(), primerDia.getMonth(), primerDia.getDate())\n        var ultimoDia = new Date(dte.getFullYear(), dte.getMonth(), 0);\n        let dateF2 = new Date(ultimoDia.getFullYear(), ultimoDia.getMonth(), ultimoDia.getDate())\n        setDateFrom(dateF1.toISOString());\n        //Fecha actual\n        setDateTo(dateF2.toISOString());\n        Devices();\n    }\n    const Address = async(lon, lat, name, time) => {\n        const url = `https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/reverseGeocode?f=pjson&featureTypes=&location=${lon},${lat}`\n                const resultado = await axios.get(url);\n                //return ubicacion.ShortLabel;\n                console.log(resultado.data.address.LongLabel)\n                /* setUbicacion([\n                    ...ubicacion,\n                    {\n                        lon: lon, \n                        lat: lat, \n                        address: resultado.data.address.LongLabel,\n                        name: name,\n                        time: time,\n                    }\n                ]); */\n    }\n    const DevicesAll = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            console.log(\"antes de consulta \"+ dateFrom)\n            console.log(\"antes de consulta \"+ dateTo)\n            //generar url\n            let url = \"https://www.protrack.ad105.net/api/reports/stops?\";\n            let groupId;\n            for(let i = 0; i < devAll.length; i++){\n                groupId= devAll[i].groupId;\n            }\n            url = url+\"deviceId=\"+deviceId+\"&\";\n            url = url+\"groupId=\"+groupId+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo;\n            console.log(url)\n            const resultado2 = await fetch(`${url}`, requestOptions)\n            const deviceData2 = await resultado2.json();\n            \n\n            console.log(deviceData2)\n            for(let i = 0; i < deviceData2.length; i++){\n                //obtener direccion\n                const url = `https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/reverseGeocode?f=pjson&featureTypes=&location=${deviceData2[i].longitude},${deviceData2[i].latitude}`\n                const resultado = await axios.get(url);\n                //return ubicacion.ShortLabel;\n                console.log(resultado.data.address.LongLabel)\n                ubicacion.push({id: i, lon: deviceData2[i].longitude, lat: deviceData2[i].latitude, address: resultado.data.address.LongLabel, name: deviceData2[i].deviceName, startTime: deviceData2[i].startTime, endTime: deviceData2[i].endTime, duration: deviceData2[i].duration});\n            }\n            console.log(ubicacion);\n            setDatosTotal(ubicacion);\n            \n            /* console.log(ubicacion)\n            setReportData(deviceData2); */\n            setFilename(`InformeRalentíMínimo ${dateFrom} - ${dateTo}`);\n    }\n    const TimeFormat = (duration) => {\n        let seconds = (duration / 1000).toFixed(1);\n        let minutes = (duration / (1000 * 60)).toFixed(1);\n        let hours = (duration / (1000 * 60 * 60)).toFixed(1);\n        let days = (duration / (1000 * 60 * 60 * 24)).toFixed(1);\n        if (seconds < 60) return seconds + \" Seg\";\n        else if (minutes < 60) return minutes + \" Min\";\n        else if (hours < 24) return hours + \" Hrs\";\n        else return days + \" Días\"\n    }\n    const Fecha = (fecha) => {\n        const fecha1 = new Date();\n        const date = new Date(fecha);\n        if (fecha1.getDate() === date.getDate()) {\n            return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n        }\n        return date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate()+' '+date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n    }\n    const obtenerUbicacion = (name, time) => {\n        for(let i = 0; i < ubicacion.length; i++){\n            if (ubicacion[i].name === name && ubicacion[i].time === time) {\n                return ubicacion[i].address;\n            }\n        }\n    }\n    //const data = [{ id: 1, objetivo: 'Vehiculo 1', kilometraje: '6.22', velocidad: '76', estadia: '2' }]\n    const columns = [\n        {\n            name: '#',\n            selector: 'id',\n            sortable: true,\n        },\n        {\n            name: 'Tiempo de Inicio',\n            sortable: true,\n            cell: row => <span>{Fecha(row.startTime)}</span>\n        },\n        {\n            name: 'Tiempo Final',\n            sortable: true,\n            cell: row => <span>{Fecha(row.endTime)}</span>\n        },\n        {\n            name: 'Duración de la Estadia',\n            sortable: true,\n            cell: row => <span>{TimeFormat(row.duration)}</span>\n        },\n        {\n            name: 'Ubicación',\n            sortable: true,\n            cell: row => <s.GMapLink href={`http://map.google.com/maps?q=${row.lat},${row.lon}`} target=\"_blank\" rel=\"noreferrer\">\n                            <small>{row.lat} </small>\n                            <small>{row.lon}</small><br/>\n                            <span>{row.address}</span>\n                        </s.GMapLink>\n        },\n    ];\n    const csvEmptyData = [\n        {\n          foo: \"\"\n        }\n      ];\n    //Estructura para guardar en el excel\n    const data = [\n        {\n            xSteps: 3,\n            columns: [\n                { title: \"INFORME RALENTÍ MÍNIMO\", width: {wpx: 300}, height: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:14}, border: {top: {style: \"none\", color: \"#fff\"}, bottom: {style: \"nono\", color: \"#fff\"}, left: {style: \"none\", color: \"#fff\"}, right: {style: \"none\", color: \"#fff\"}}}}\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"RALENTÍ MÍNIMO\", width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"DESDE \"+dateFrom+\" A \"+dateTo, width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            ySteps: -1,\n            columns: [\n                { title: \"#\", width: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Tiempo de Inicio\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Tiempo Final\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Duración Estadia\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Ubicación\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n            ],\n            data: datosTotal.map((dev, index) => {\n                return [\n                { value: dev.id, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: Fecha(dev.startTime), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: Fecha(dev.endTime), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: TimeFormat(dev.duration), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.lon+' , '+dev.lat+'\\n'+dev.address, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                ];\n            }),\n        },\n    ];\n    //config pagination\n    const paginationComponentOptions = {\n        rowsPerPageText: 'Filas por página',\n        rangeSeparatorText: 'de',\n        selectAllRowsItem: true,\n        selectAllRowsItemText: 'Todos',\n    };\n    return (\n        <s.caja_dispositivo_panelGral style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Informe de Ralentí Mínimo\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral>Dispositivo <s.selecttGral onChange={(e) => setDeviceId(e.target.value)} className={errorDevice ? 'errorFormDate' :  ''}>\n                                <option value=\"\" selected> -- Dispositivo -- </option>\n                            {devAll.map((item) => (\n                                <option value={item.id}>{item.name}</option>\n                            ))}\n                        </s.selecttGral></s.LabelGral>\n                        <div>\n                            <div>\n                            <s.LabelGral>Hora <s.inputGral type=\"date\" onChange={(e) =>DateFromValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"date\" onChange={(e) => DateToValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.LabelGral><s.CheckBox type=\"radio\" name=\"acc\"/>ACC Encendido </s.LabelGral>\n                        <s.LabelGral><s.CheckBox type=\"radio\" name=\"acc\"/>ACC Apagado</s.LabelGral>\n                        <s.InfoBoton onClick={DesdeForm}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.row2>\n                        <s.DivSpan>\n                            <s.SpanFechas onClick={DateYesterday}>Ayer </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateWeek}>Esta Semana </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastWeek}>La Semana Pasada</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateMonth}>Este Mes</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastMonth}>Mes Pasado</s.SpanFechas>\n                        </s.DivSpan>\n                    </s.row2>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={datosTotal}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                            pagination\n                            paginationComponentOptions={paginationComponentOptions}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <ExcelFile element={<s.ExcelButon>Exportar Excel</s.ExcelButon>} filename={filename}>\n                            <ExcelSheet dataSet={data} name={filename} />\n                        </ExcelFile>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </s.caja_dispositivo_panelGral>\n    )\n}\n\nexport default InformeRM\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/ACC/VisionAcc.js",["784","785","786","787","788","789","790","791"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\nimport ReactExport from \"react-data-export\";\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst VisionAcc = () => {\n    const [device, setDevice] = useState([]); //SE GUARDAN LOS DISPOSITIVOS\n    const [deviceId, setDeviceId] = useState(\"0\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [reportData, setReportData] = useState([]); //SE GUARDAN LOS REPORTES\n    const [datosTotal, setDatosTotal] = useState([]);\n    const [totalDevices, setTotalDevices] = useState(0);\n    const [totalOff, setTotalOff] = useState(0);\n    const [totalOn, seTtotalOn] = useState(0)\n    const datosArray= [];\n    //INSTANCIAS PARA EL EXCEL\n    const ExcelFile = ReactExport.ExcelFile;\n    const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n    const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n    const [filename, setFilename] = useState(``);\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const DesdeForm = () =>{\n        //validar\n        if (dateFrom.trim() === '' || dateTo.trim() === '') {\n            alert(\"Se debe de indicar una Fecha de Inicio y de Final para generar el reporte\")\n            setError(true);\n            return;\n        }\n        if (dateFrom > dateTo) {\n            alert(\"La fecha de partida no puede ser mayor a la fecha de llegada\");\n            setError(true);\n            return;\n        }\n        setError(false);\n        \n        Devices();\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateYesterday = () => {\n        let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date1Y = new Date(date)\n        let dateF1 = new Date(date1Y.getFullYear(), date1Y.getMonth(), date1Y.getDate())\n        dateF1 = dateF1.toISOString();\n\n        let date2 = new Date();\n        let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF2 = dateF2.toISOString()\n        \n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        console.log(dateF1, dateF2)\n        Devices();\n    }\n    const DateWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DateLastWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DateMonth = () => {\n        let date = new Date();\n        let primerDia = new Date(date.getFullYear(), date.getMonth(), 1);\n        let dateF1 = new Date(primerDia.getFullYear(), primerDia.getMonth(), primerDia.getDate())\n        let diaActual = date;\n        let dateF2 = new Date(diaActual.getFullYear(), diaActual.getMonth(), diaActual.getDate())\n        setDateFrom(dateF1.toISOString());\n        setDateTo(dateF2.toISOString());\n        Devices();\n    }\n    const DateLastMonth = () => { //bien\n        let dte = new Date();\n        var primerDia = new Date(dte.getFullYear(), dte.getMonth() -1, 1);\n        let dateF1 = new Date(primerDia.getFullYear(), primerDia.getMonth(), primerDia.getDate())\n        var ultimoDia = new Date(dte.getFullYear(), dte.getMonth(), 0);\n        let dateF2 = new Date(ultimoDia.getFullYear(), ultimoDia.getMonth(), ultimoDia.getDate())\n        setDateFrom(dateF1.toISOString());\n        //Fecha actual\n        setDateTo(dateF2.toISOString());\n        Devices();\n    }\n    const DevicesAll = async() =>{  //obtener dispositivos para el select\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n            console.log(devAll);\n    }\n/*     const cantidad = (cantidad) => {\n        let encendido = 0;\n        let apagado = 0;\n        for(let i = 0; i < cantidad.length; i++){\n            if (cantidad[i].type === \"deviceOnline\") {\n                encendido = encendido + 1;\n            }\n            else{\n                apagado = apagado + 1;\n            }\n        }\n        return {encendido, apagado};\n    } */\n    const Devices = async() =>{\n\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n                console.log(\"antes de consulta \"+ dateFrom)\n                console.log(\"antes de consulta \"+ dateTo)\n                //generar url\n                let url = \"https://www.protrack.ad105.net/api/reports/events?\";\n                let groupId;\n                for(let i = 0; i < devAll.length; i++){\n                    url = url+\"deviceId=\"+devAll[i].id+\"&\";\n                    groupId= devAll[i].groupId;\n                }\n                url = url+\"groupId=\"+groupId+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo;\n                console.log(url)\n                const resultado2 = await fetch(`${url}`, requestOptions)\n                const deviceData2 = await resultado2.json();\n\n                console.log(deviceData2)\n                setReportData(deviceData2);\n                let encendido = 0;\n                let apagado = 0;\n                for(let i = 0; i < deviceData2.length; i++){\n                    if (deviceData2[i].type === \"deviceOnline\") {\n                        encendido = encendido + 1;\n                    }\n                    else{\n                        apagado = apagado + 1;\n                    }\n                }\n                setTotalDevices(devAll.length);\n                seTtotalOn(encendido);\n                setTotalOff(apagado);\n                for(let i = 0; i < devAll.length; i++){\n                    let on = 0;\n                    let off = 0;\n                    for(let j = 0; j < reportData.length; j++){\n                    //console.log(devAll[i].id)\n                        if (devAll[i].id === reportData[j].deviceId) {\n                            \n                                if (reportData[j].type === \"deviceOnline\") {\n                                    on = on + 1;\n                                }\n                                else{\n                                    off = off + 1;\n                                }\n                        }\n                    }\n                    console.log(devAll[i].name+' '+on+' '+off);\n                    datosArray.push({id: i, name: devAll[i].name, encendido: on, apagado: off});\n                    //setDatosTotal(...datosTotal, {id: devAll[i].id, name: devAll[i].name, encendido: on, apagado: off})\n                    //console.log(devAll[i].name+' '+on+' '+off);\n                }\n\n                console.log(encendido+\" \"+apagado);\n                console.log(datosArray);\n                setDatosTotal(datosArray);\n                console.log(datosTotal);\n                setFilename(`VisiónGeneraldelACC ${dateFrom} - ${dateTo}`);\n    }\n    const TimeFormat = (duration) => {\n        let seconds = (duration / 1000).toFixed(1);\n        let minutes = (duration / (1000 * 60)).toFixed(1);\n        let hours = (duration / (1000 * 60 * 60)).toFixed(1);\n        let days = (duration / (1000 * 60 * 60 * 24)).toFixed(1);\n        if (seconds < 60) return seconds + \" Seg\";\n        else if (minutes < 60) return minutes + \" Min\";\n        else if (hours < 24) return hours + \" Hrs\";\n        else return days + \" Días\"\n    }\n    const Fecha = (fecha) => {\n        const fecha1 = new Date();\n        const date = new Date(fecha);\n        if (fecha1.getDate() === date.getDate()) {\n            return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n        }\n        return date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate();\n    }\n    const columns = [\n        {\n            name: '#',\n            selector: 'id',\n            sortable: true,\n        },\n        {\n            name: 'Objetivo',\n            selector: 'name',\n            sortable: true,\n        },\n        {\n            name: 'Acc Encendidos',\n            selector: 'encendido',\n            sortable: true,\n        },\n        {\n            name: 'Acc Apagados',\n            selector: 'apagado',\n            sortable: true,\n        },\n    ];\n    const csvEmptyData = [\n        {\n          foo: \"\"\n        }\n      ];\n    const data = [\n        {\n            xSteps: 3,\n            columns: [\n                { title: \"VISIÓN GENERAL DEL ACC\", width: {wpx: 300}, height: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:14}, border: {top: {style: \"none\", color: \"#fff\"}, bottom: {style: \"nono\", color: \"#fff\"}, left: {style: \"none\", color: \"#fff\"}, right: {style: \"none\", color: \"#fff\"}}}}\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"VISIÓN GENERAL DEL ACC\", width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"DESDE \"+dateFrom+\" A \"+dateTo, width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            ySteps: -1,\n            columns: [\n                { title: \"#\", width: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Objetivo\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"ACC Encendidos\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"ACC Apagados\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n            ],\n            data: datosTotal.map((dev, index) => {\n                return [\n                { value: dev.id, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.name, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.encendido, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.apagado, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                ];\n            }),\n        },\n    ];\n    //config pagination\n    const paginationComponentOptions = {\n        rowsPerPageText: 'Filas por página',\n        rangeSeparatorText: 'de',\n        selectAllRowsItem: true,\n        selectAllRowsItemText: 'Todos',\n    };\n    return (\n        <s.caja_dispositivo_panelGral style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Visión general del ACC\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral><s.CheckBox type=\"radio\" name=\"infoGral\"/>Detalles Diarios </s.LabelGral>\n                        <s.LabelGral><s.CheckBox type=\"radio\" name=\"infoGral\"/>Detalles del Periodo</s.LabelGral>\n                        <div>\n                            <div>\n                            <s.LabelGral>Fecha <s.inputGral type=\"date\" onChange={(e) =>DateFromValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"date\" onChange={(e) => DateToValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.InfoBoton onClick={DesdeForm}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.row2>\n                        <s.DivSpan>\n                            <s.SpanFechas onClick={DateYesterday}>Ayer </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateWeek}>Esta Semana </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastWeek}>La Semana Pasada</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateMonth}>Este Mes</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastMonth}>Mes Pasado</s.SpanFechas>\n                        </s.DivSpan>\n                    </s.row2>\n                    <s.divCards>\n                        <s.divCard>\n                            <s.LabelCard>Cantidad de Dispositivos:</s.LabelCard>\n                            <s.LabelCard2>{totalDevices}</s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Total ACC Encendidos:</s.LabelCard>\n                            <s.LabelCard2>{totalOn}</s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Total ACC Apagados:</s.LabelCard>\n                            <s.LabelCard2>{totalOff}</s.LabelCard2>\n                        </s.divCard>\n                    </s.divCards>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={datosTotal}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                            pagination\n                            paginationComponentOptions={paginationComponentOptions}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <ExcelFile element={<s.ExcelButon>Exportar Excel</s.ExcelButon>} filename={filename}>\n                            <ExcelSheet dataSet={data} name={filename}>\n                                <ExcelColumn label=\"INFORMACIÓN GENERAL DE MOVIMIENTO\"/>\n                            </ExcelSheet>\n                        </ExcelFile>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </s.caja_dispositivo_panelGral>\n    )\n}\n\nexport default VisionAcc\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/Comportamiento/DetallesComp.js",["792","793","794"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst DetallesComp = () => {\n    const [device, setDevice] = useState([]);\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [deviceId, setDeviceId] = useState(\"\");\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const Datos = () => {\n        Devices()\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateYesterday = () => {\n        let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date2 = new Date(date);\n        date2 = date2.toISOString();\n        setDateFrom(date2);\n        setDateTo(date2);\n        console.log(date2)\n        Datos();\n    }\n    const DateWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        date2 = date2.toISOString();\n\n        //Fecha actual\n        let dateToday = new Date();\n        dateToday = dateToday.toISOString();\n        //console.log(dateToday);\n        setDateFrom(date2);\n        setDateTo(dateToday);\n        Datos();\n    }\n    const DateLastWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        date2 = date2.toISOString();\n        //Fecha actual\n        let dateToday = new Date();\n        dateToday = dateToday.toISOString();\n        //console.log(dateToday);\n        setDateFrom(date2);\n        setDateTo(dateToday);\n        Datos();\n    }\n    const DateMonth = () => {\n        let date = new Date();\n        let primerDia = new Date(date.getFullYear(), date.getMonth(), 1);\n        let diaActual = date;\n        setDateFrom(primerDia.toISOString());\n        setDateTo(diaActual.toISOString());\n        Datos();\n    }\n    const DateLastMonth = () => {\n        let dte = new Date();\n        var primerDia = new Date(dte.getFullYear(), dte.getMonth() -1, 1);\n        var ultimoDia = new Date(dte.getFullYear(), dte.getMonth(), 0);\n        setDateFrom(primerDia.toISOString());\n        //Fecha actual\n        setDateTo(ultimoDia.toISOString());\n        Datos();\n    }\n    const DevicesAll = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            if (dateFrom === \"\" && dateTo === \"\" && deviceId === \"\") {\n                const resultado = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n                const resultado2 = await fetch(`https://www.protrack.ad105.net/api/positions`, requestOptions)\n                /* .then(response => response.json())\n                .catch(error => console.log('error', error)); */\n                const deviceData = await resultado.json();\n                const deviceData2 = await resultado2.json();\n\n                var full = [] //JSONS MEZClados\n                Object.keys(deviceData).forEach(k=>{full[k] = Object.assign(deviceData[k],deviceData2[k])});\n\n                console.log('full data')\n                console.log(full);\n                setDevice(full);\n            }\n            else{\n                const resultado = await fetch(`https://www.protrack.ad105.net/api/devices/${deviceId}`, requestOptions)\n                const resultado2 = await fetch(`https://www.protrack.ad105.net/api/positions?deviceid=${deviceId}&from=${dateFrom}:00.000z&to=${dateTo}:00.000z`, requestOptions)\n                /* .then(response => response.json())\n                .catch(error => console.log('error', error)); */\n                const deviceData = await resultado.json();\n                const deviceData2 = await resultado2.json();\n\n                var full = [] //JSONS MEZClados\n                Object.keys(deviceData).forEach(k=>{full[k] = Object.assign(deviceData[k],deviceData2[k])});\n\n                console.log('full data')\n                console.log(full);\n                setDevice(full);\n            }\n    }\n    const Fecha = (fecha) => {\n        const fecha1 = new Date();\n        const date = new Date(fecha);\n        if (fecha1.getDate() === date.getDate()) {\n            return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n        }\n        return date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate();\n    }\n    const data = [{ id: 1, objetivo: 'Vehiculo 1', kilometraje: '6.22', velocidad: '76', estadia: '2' }]\n    const columns = [\n        {\n            name: '#',\n            selector: 'deviceId',\n            sortable: true,\n        },\n        {\n            name: 'Comportamiento de conducción',\n            selector: 'comportamiento',\n            sortable: true,\n        },\n        {\n            name: 'Recibir tiempo',\n            selector: 'tiempo',\n            sortable: true,\n        },\n        {\n            name: 'Tiempo del GPs',\n            sortable: true,\n            cell: row => <span>{Fecha(row.serverTime)}</span>\n        },\n        {\n            name: 'Velocidad (km/h)',\n            sortable: true,\n            cell: row => <span>{((row.speed)*1.852).toFixed(2)+' Km/h'}</span>\n        },\n        {\n            name: 'Coordinar',\n            selector: 'coordinar',\n            sortable: true,\n        },\n        {\n            name: 'Ubicación',\n            selector: 'ubicacion',\n            sortable: true,\n        },\n    ];\n    return (\n        <s.caja_dispositivo_panelGral style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Detalles de Comportamiento de Conducción.\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                 {/* CONTENIDO */}\n                 <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral>Dispositivo <s.selecttGral onChange={(e) => setDeviceId(e.target.value)}>\n                                <option value=\"\" selected> -- Dispositivo -- </option>\n                            {devAll.map((item) => (\n                                <option value={item.id}>{item.name}</option>\n                            ))}\n                        </s.selecttGral></s.LabelGral>\n                        <div>\n                            <div>\n                            <s.LabelGral>Hora <s.inputGral type=\"datetime-local\" onChange={(e) =>DateFromValue(e.target.value)}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"datetime-local\" onChange={(e) => DateToValue(e.target.value)}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.LabelGral>Comportamiento de conducción <s.selecttGral></s.selecttGral></s.LabelGral>\n                        <s.InfoBoton onClick={() => Datos()}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.row2>\n                        <s.DivSpan>\n                            <s.SpanFechas onClick={DateYesterday}>Ayer </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateWeek}>Esta Semana </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastWeek}>La Semana Pasada</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateMonth}>Este Mes</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastMonth}>Mes Pasado</s.SpanFechas>\n                        </s.DivSpan>\n                    </s.row2>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={device}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <s.ExcelButon>Exportar Excel</s.ExcelButon>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </s.caja_dispositivo_panelGral>\n    )\n}\n\nexport default DetallesComp\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/ACC/ReporteAcc.js",["795","796","797","798"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\nimport ReactExport from \"react-data-export\";\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst ReporteAcc = () => {\n    const [device, setDevice] = useState([]); //SE GUARDAN LOS DISPOSITIVOS\n    const [deviceId, setDeviceId] = useState(\"0\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [errorDevice, setErrorDevice] = useState(false);\n    const [reportData, setReportData] = useState([]); //SE GUARDAN LOS REPORTES\n    const [accEncendido, setAccEncendido] = useState(0);\n    const [accApagado, setAccApagado] = useState(0);\n    //INSTANCIAS PARA EL EXCEL\n    const ExcelFile = ReactExport.ExcelFile;\n    const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n    const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n    const [filename, setFilename] = useState(``);\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n\n    const DesdeForm = () =>{\n        //validar\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        if (dateFrom.trim() === '' || dateTo.trim() === '') {\n            alert(\"Se debe de indicar una Fecha de Inicio y de Final para generar el reporte\")\n            setError(true);\n            return;\n        }\n        if (dateFrom > dateTo) {\n            alert(\"La fecha de partida no puede ser mayor a la fecha de llegada\");\n            setError(true);\n            return;\n        }\n        setError(false);\n        setErrorDevice(false)\n        Devices();\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateYesterday = () => {\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        setErrorDevice(false)\n        let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date1Y = new Date(date)\n        let dateF1 = new Date(date1Y.getFullYear(), date1Y.getMonth(), date1Y.getDate())\n        dateF1 = dateF1.toISOString();\n\n        let date2 = new Date();\n        let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF2 = dateF2.toISOString()\n        \n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        console.log(dateF1, dateF2)\n        Devices();\n    }\n    const DateWeek = () => {\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        setErrorDevice(false)\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DateLastWeek = () => {\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        setErrorDevice(false)\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DevicesAll = async() =>{  //obtener dispositivos para el select\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            console.log(\"antes de consulta \"+ dateFrom)\n            console.log(\"antes de consulta \"+ dateTo)\n            //generar url\n            let urlDevice = `https://www.protrack.ad105.net/api/devices/${deviceId}`;\n            //console.log(urlDevice)\n            let url = \"https://www.protrack.ad105.net/api/reports/events?\";\n            let groupId;\n            for(let i = 0; i < devAll.length; i++){\n                groupId= devAll[i].groupId;\n            }\n            url = url+\"deviceId=\"+deviceId+\"&\";\n            url = url+\"groupId=\"+groupId+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo;\n            console.log(url)\n            const resultado = await fetch(`${urlDevice}`, requestOptions)\n            const deviceData = await resultado.json();\n            //console.log(deviceData);\n            const resultado2 = await fetch(`${url}`, requestOptions)\n            const deviceData2 = await resultado2.json();\n\n            //Sumar acc\n            let encendido = 0;\n            let apagado = 0;\n            var full = [];\n            for(let i = 0; i < deviceData2.length; i++){\n                if(deviceData2[i].type === 'deviceOnline'){\n                    encendido = encendido + 1;\n                }\n                else{\n                    apagado = apagado + 1;\n                }\n                full.push(\n                    {\n                        id: i,\n                        name: deviceData.name,\n                        time: deviceData2[i].serverTime,\n                        type: deviceData2[i].type\n                    }\n                );\n            }\n            setAccEncendido(encendido);\n            setAccApagado(apagado);\n\n            console.log(full)\n            \n\n            setReportData(full);\n            setFilename(`ReportedeACC ${dateFrom} - ${dateTo}`);\n    }\n    const TimeFormat = (duration) => {\n        let seconds = (duration / 1000).toFixed(1);\n        let minutes = (duration / (1000 * 60)).toFixed(1);\n        let hours = (duration / (1000 * 60 * 60)).toFixed(1);\n        let days = (duration / (1000 * 60 * 60 * 24)).toFixed(1);\n        if (seconds < 60) return seconds + \" Seg\";\n        else if (minutes < 60) return minutes + \" Min\";\n        else if (hours < 24) return hours + \" Hrs\";\n        else return days + \" Días\"\n    }\n    const Fecha = (fecha) => {\n        const fecha1 = new Date();\n        const date = new Date(fecha);\n        if (fecha1.getDate() === date.getDate()) {\n            return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n        }\n        return date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate()+' '+date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n    }\n    const columns = [\n        {\n            name: '#',\n            selector: 'id',\n            sortable: true,\n        },\n        {\n            name: 'Objetivo',\n            selector: 'name',\n            sortable: true,\n        },\n        {\n            name: 'Tiempo del GPS',\n            sortable: true,\n            cell: row => <span>{Fecha(row.time)}</span>\n        },\n        {\n            name: 'ACC',\n            sortable: true,\n            cell: row => <span>{row.type === 'deviceOnline' ? 'ACC Encendido' : 'ACC Apagado'}</span>\n        },\n    ];\n    const csvEmptyData = [\n        {\n          foo: \"\"\n        }\n      ];\n    //Estructura para guardar en el excel\n    const data = [\n        {\n            xSteps: 3,\n            columns: [\n                { title: \"REPORTE DE ACC\", width: {wpx: 300}, height: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:14}, border: {top: {style: \"none\", color: \"#fff\"}, bottom: {style: \"nono\", color: \"#fff\"}, left: {style: \"none\", color: \"#fff\"}, right: {style: \"none\", color: \"#fff\"}}}}\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"REPORTE DE ACC\", width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"DESDE \"+dateFrom+\" A \"+dateTo, width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            ySteps: -1,\n            columns: [\n                { title: \"#\", width: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Objetivo\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Tiempo GPS\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"ACC\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n            ],\n            data: reportData.map((dev, index) => {\n                return [\n                { value: dev.id, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.name, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: Fecha(dev.time), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.type === 'deviceOnline' ? 'ACC Encendido' : 'ACC Apagado', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                ];\n            }),\n        },\n    ];\n    //config pagination\n    const paginationComponentOptions = {\n        rowsPerPageText: 'Filas por página',\n        rangeSeparatorText: 'de',\n        selectAllRowsItem: true,\n        selectAllRowsItemText: 'Todos',\n    };\n    return (\n        <s.caja_dispositivo_panelGral style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Reporte de ACC (Encendido)\n                </s.barra_superior_tituloGral>\n\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral>Dispositivo <s.selecttGral onChange={(e) => setDeviceId(e.target.value)} className={errorDevice ? 'errorFormDate' :  ''}>\n                                <option value=\"\" selected> -- Dispositivo -- </option>\n                            {devAll.map((item) => (\n                                <option value={item.id}>{item.name}</option>\n                            ))}\n                        </s.selecttGral></s.LabelGral>\n                        <div>\n                            <div>\n                            <s.LabelGral>Hora <s.inputGral type=\"date\" onChange={(e) =>DateFromValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"date\" onChange={(e) => DateToValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.LabelGral><s.CheckBox type=\"radio\" name=\"acc\"/>ACC Encendido </s.LabelGral>\n                        <s.LabelGral><s.CheckBox type=\"radio\" name=\"acc\"/>ACC Apagado</s.LabelGral>\n                        <s.InfoBoton onClick={DesdeForm}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.row2>\n                        <s.DivSpan>\n                            <s.SpanFechas onClick={DateYesterday}>Ayer </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateWeek}>Esta Semana </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastWeek}>La Semana Pasada</s.SpanFechas>\n                        </s.DivSpan>\n                    </s.row2>\n                    <s.divCards>\n                        <s.divCard>\n                            <s.LabelCard>Total ACC Encendidos:</s.LabelCard>\n                            <s.LabelCard2>{accEncendido}</s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Total ACC Apagados:</s.LabelCard>\n                            <s.LabelCard2>{accApagado}</s.LabelCard2>\n                        </s.divCard>\n                    </s.divCards>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={reportData}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                            pagination\n                            paginationComponentOptions={paginationComponentOptions}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <ExcelFile element={<s.ExcelButon>Exportar Excel</s.ExcelButon>} filename={filename}>\n                            <ExcelSheet dataSet={data} name={filename}>\n                                <ExcelColumn label=\"INFORMACIÓN GENERAL DE MOVIMIENTO\"/>\n                            </ExcelSheet>\n                        </ExcelFile>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </s.caja_dispositivo_panelGral>\n    )\n}\n\nexport default ReporteAcc\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/InfoVehiculo/InfoCombustible.js",["799","800","801","802","803","804"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart, BiBorderTop} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\n\nimport ReactECharts from 'echarts-for-react';\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst InfoCombustible = () => {\n    const [device, setDevice] = useState([]);\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [deviceId, setDeviceId] = useState(\"\");\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const Datos = () => {\n        Devices()\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateYesterday = () => {\n        let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date2 = new Date(date);\n        date2 = date2.toISOString();\n        setDateFrom(date2);\n        setDateTo(date2);\n        console.log(date2)\n        Datos();\n    }\n    const DevicesAll = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        /* var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", ); */\n\n            /* var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            if (dateFrom === \"\" && dateTo === \"\" && deviceId === \"\") {\n                const resultado = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n                const resultado2 = await fetch(`https://www.protrack.ad105.net/api/positions`, requestOptions)\n                const deviceData = await resultado.json();\n                const deviceData2 = await resultado2.json();\n\n                var full = [] //JSONS MEZClados\n                Object.keys(deviceData).forEach(k=>{full[k] = Object.assign(deviceData[k],deviceData2[k])});\n\n                console.log('full data')\n                console.log(full);\n                setDevice(full);\n            }\n            else{\n                const resultado = await fetch(`https://www.protrack.ad105.net/api/devices/${deviceId}`, requestOptions)\n                const resultado2 = await fetch(`https://www.protrack.ad105.net/api/positions?deviceid=${deviceId}&from=${dateFrom}:00.000z&to=${dateTo}:00.000z`, requestOptions)\n                const deviceData = await resultado.json();\n                const deviceData2 = await resultado2.json();\n\n                var full = [] //JSONS MEZClados\n                Object.keys(deviceData).forEach(k=>{full[k] = Object.assign(deviceData[k],deviceData2[k])});\n\n                console.log('full data')\n                console.log(full);\n                setDevice(full);\n            } */\n    }\n    const Fecha = (fecha) => {\n        const date = new Date(fecha);\n        return date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate()+' '+date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n    }\n    const data = [{ id: '', objetivo: '', kilometraje: '', velocidad: '', estadia: '' }]\n    const columns = [\n        {\n            name: '#',\n            selector: 'deviceId',\n            sortable: true,\n        },\n        {\n            name: 'Fecha y Hora',\n            selector: 'time',\n            sortable: true,\n        },\n        {\n            name: 'Repostar/El consumo de combustible',\n            selector: 'consumo',\n            sortable: true,\n        },\n        {\n            name: 'Combustible (L)',\n            selector: 'combustible',\n            sortable: true,\n        },\n        {\n            name: 'Volumen inicial (L)',\n            selector: 'vinicial',\n            sortable: true,\n        },\n        {\n            name: 'Volumen final (L)',\n            selector: 'vfinal',\n            sortable: true,\n        },\n        {\n            name: 'Kilometraje (Km)',\n            selector: 'kilometraje',\n            sortable: true,\n        },\n        {\n            name: 'Odometro (Km)',\n            selector: 'odometro',\n            sortable: true,\n        },\n        {\n            name: 'Consumo medio de combustible(L/100KM)',\n            selector: 'consumomedio',\n            sortable: true,\n        },\n        {\n            name: 'Ubicación',\n            selector: 'ubicacion',\n            sortable: true,\n        },\n    ];\n    const options = {\n        grid: { top: 8, right: 8, bottom: 24, left: 36, containLabel: true },\n        xAxis: {\n            type: 'category',\n            data: ['', '', '', '', '', 'Odometro'],\n        },\n        yAxis: {\n            type: 'value',\n        },\n        series: [\n            {\n                data: ['Sin Datos'],\n                type: 'line',\n                smooth: true,\n                areaStyle: {normal: {}},\n            },\n        ],\n        tooltip: {\n            trigger: 'axis',\n        },\n    };\n    return (\n        <s.caja_dispositivo_panelGral style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Informe de combustible\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral>Dispositivo <s.selecttGral onChange={(e) => setDeviceId(e.target.value)}>\n                                <option value=\"\" selected> -- Dispositivo -- </option>\n                            {devAll.map((item) => (\n                                <option value={item.id}>{item.name}</option>\n                            ))}\n                        </s.selecttGral></s.LabelGral>\n                        <div>\n                            <div>\n                            <s.LabelGral>Hora <s.inputGral type=\"datetime-local\" onChange={(e) =>DateFromValue(e.target.value)}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"datetime-local\" onChange={(e) => DateToValue(e.target.value)}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.InfoBoton onClick={() => Datos()}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.row2>\n                        <s.DivSpan>\n                            <s.SpanFechas onClick={DateYesterday}>Ayer </s.SpanFechas>\n                        </s.DivSpan>\n                    </s.row2>\n                    {/* chart */}\n                    <s.divTable>\n                        <ReactECharts option={options} />\n                    </s.divTable>\n                    <s.divCardsOut>\n                        <s.LabelGral>Total Kilometraje:</s.LabelGral>\n                        <s.LabelGral>Total Consumido:</s.LabelGral>\n                        <s.LabelGral>Total Combustible suministrado:</s.LabelGral>\n                        <s.LabelGral>Tiempo de Ejecución:</s.LabelGral>\n                    </s.divCardsOut>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={data}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <s.ExcelButon>Exportar Excel</s.ExcelButon>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </s.caja_dispositivo_panelGral>\n    )\n}\n\nexport default InfoCombustible\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/InfoVehiculo/InfoPresNeu.js",["805","806","807","808","809","810","811"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\n\nimport ReactECharts from 'echarts-for-react';\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst InfoPresNeu = () => {\n    const [device, setDevice] = useState([]);\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [deviceId, setDeviceId] = useState(\"\");\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const Datos = () => {\n        Devices()\n    }\n    const DevicesAll = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        /* var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", ); */\n\n            /* var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            if (dateFrom === \"\" && dateTo === \"\" && deviceId === \"\") {\n                const resultado = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n                const resultado2 = await fetch(`https://www.protrack.ad105.net/api/positions`, requestOptions)\n                const deviceData = await resultado.json();\n                const deviceData2 = await resultado2.json();\n\n                var full = [] //JSONS MEZClados\n                Object.keys(deviceData).forEach(k=>{full[k] = Object.assign(deviceData[k],deviceData2[k])});\n\n                console.log('full data')\n                console.log(full);\n                setDevice(full);\n            }\n            else{\n                const resultado = await fetch(`https://www.protrack.ad105.net/api/devices/${deviceId}`, requestOptions)\n                const resultado2 = await fetch(`https://www.protrack.ad105.net/api/positions?deviceid=${deviceId}&from=${dateFrom}:00.000z&to=${dateTo}:00.000z`, requestOptions)\n                const deviceData = await resultado.json();\n                const deviceData2 = await resultado2.json();\n\n                var full = [] //JSONS MEZClados\n                Object.keys(deviceData).forEach(k=>{full[k] = Object.assign(deviceData[k],deviceData2[k])});\n\n                console.log('full data')\n                console.log(full);\n                setDevice(full);\n            } */\n    }\n    const Hora = (fecha) => {\n        const fecha1 = new Date();\n        const date = new Date(fecha);\n        if (fecha1.getDate() === date.getDate()) {\n            return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n        }\n        return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n    }\n    const data = [{ id: '', objetivo: '', kilometraje: '', velocidad: '', estadia: '' }]\n    const columns = [\n        {\n            name: '#',\n            selector: 'deviceId',\n            sortable: true,\n        },\n        {\n            name: 'Hora',\n            selector: 'time',\n            sortable: true,\n        },\n        {\n            name: 'Presión Ruedas',\n            selector: 'ruedaP',\n            sortable: true,\n            \n        },\n        {\n            name: 'Temperatura (ºC) Ruedas',\n            selector: 'ruedasT',\n            sortable: true,\n            \n        },\n        {\n            name: 'Estado Ruedas',\n            selector: 'ruedasE',\n            sortable: true,\n            \n        },\n    ];\n    const options = {\n        grid: { top: 8, right: 8, bottom: 24, left: 36, containLabel: true },\n        xAxis: {\n            type: 'category',\n            data: ['', '', '', '', '', '', 'Odometro'],\n        },\n        yAxis: {\n            type: 'value',\n        },\n        series: [\n            {\n                data: ['Sin Datos'],\n                type: 'line',\n                smooth: true,\n                areaStyle: {normal: {}},\n            },\n        ],\n        tooltip: {\n            trigger: 'axis',\n        },\n    };\n    return (\n        <s.caja_dispositivo_panelGral style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Informe de Presión de Neúmaticos\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral>Dispositivo <s.selecttGral onChange={(e) => setDeviceId(e.target.value)}>\n                                <option value=\"\" selected> -- Dispositivo -- </option>\n                            {devAll.map((item) => (\n                                <option value={item.id}>{item.name}</option>\n                            ))}\n                        </s.selecttGral></s.LabelGral>\n                        <div>\n                            <div>\n                            <s.LabelGral>Hora <s.inputGral type=\"datetime-local\" onChange={(e) => setDateFrom(e.target.value)}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"datetime-local\" onChange={(e) => setDateTo(e.target.value)}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.InfoBoton onClick={() => Datos()}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    {/* chart */}\n                    <s.divTable>\n                        <ReactECharts option={options} />\n                    </s.divTable>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={data}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <s.ExcelButon>Exportar Excel</s.ExcelButon>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </s.caja_dispositivo_panelGral>\n    )\n}\n\nexport default InfoPresNeu\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/InfoVehiculo/TemperatureReport.js",["812","813","814","815","816","817"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst TemperatureReport = () => {\n    const [device, setDevice] = useState([]);\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [deviceId, setDeviceId] = useState(\"\");\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const Datos = () => {\n        Devices()\n    }\n    const DevicesAll = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        /* var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", ); */\n\n            /* var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            if (dateFrom === \"\" && dateTo === \"\" && deviceId === \"\") {\n                const resultado = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n                const resultado2 = await fetch(`https://www.protrack.ad105.net/api/positions`, requestOptions)\n                const deviceData = await resultado.json();\n                const deviceData2 = await resultado2.json();\n\n                var full = [] //JSONS MEZClados\n                Object.keys(deviceData).forEach(k=>{full[k] = Object.assign(deviceData[k],deviceData2[k])});\n\n                console.log('full data')\n                console.log(full);\n                setDevice(full);\n            }\n            else{\n                const resultado = await fetch(`https://www.protrack.ad105.net/api/devices/${deviceId}`, requestOptions)\n                const resultado2 = await fetch(`https://www.protrack.ad105.net/api/positions?deviceid=${deviceId}&from=${dateFrom}:00.000z&to=${dateTo}:00.000z`, requestOptions)\n                const deviceData = await resultado.json();\n                const deviceData2 = await resultado2.json();\n\n                var full = [] //JSONS MEZClados\n                Object.keys(deviceData).forEach(k=>{full[k] = Object.assign(deviceData[k],deviceData2[k])});\n\n                console.log('full data')\n                console.log(full);\n                setDevice(full);\n            } */\n    }\n    const Hora = (fecha) => {\n        const fecha1 = new Date();\n        const date = new Date(fecha);\n        if (fecha1.getDate() === date.getDate()) {\n            return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n        }\n        return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n    }\n    const data = [{ id: '', objetivo: '', kilometraje: '', velocidad: '', estadia: '' }]\n    const columns = [\n        {\n            name: '#',\n            selector: 'deviceId',\n            sortable: true,\n        },\n        {\n            name: 'Hora',\n            sortable: true,\n            cell: row => <span>{Hora(row.serverTime)}</span>\n        },\n        {\n            name: 'Nombre',\n            selector: 'name',\n            sortable: true,\n        },\n        {\n            name: 'Temperatura 1 (ºC)',\n            selector: 'temp1',\n            sortable: true,\n        },\n        {\n            name: 'Temperatura 2 (ºC)',\n            selector: 'temp2',\n            sortable: true,\n        },\n        {\n            name: 'Temperatura 3 (ºC)',\n            selector: 'temp3',\n            sortable: true,\n        },\n        {\n            name: 'Temperatura 4 (ºC)',\n            selector: 'temp4',\n            sortable: true,\n        },\n        {\n            name: 'Dirección',\n            selector: 'direccion',\n            sortable: true,\n        },\n    ];\n    return (\n        <s.caja_dispositivo_panelGral style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Temperature Report\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral>Dispositivo <s.selecttGral onChange={(e) => setDeviceId(e.target.value)}>\n                                <option value=\"\" selected> -- Dispositivo -- </option>\n                            {devAll.map((item) => (\n                                <option value={item.id}>{item.name}</option>\n                            ))}\n                        </s.selecttGral></s.LabelGral>\n                        <div>\n                            <div>\n                            <s.LabelGral>Hora <s.inputGral type=\"datetime-local\" onChange={(e) => setDateFrom(e.target.value)}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"datetime-local\" onChange={(e) => setDateTo(e.target.value)}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.InfoBoton onClick={() => Datos()}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    {/* chart */}\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={data}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <s.ExcelButon>Exportar Excel</s.ExcelButon>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </s.caja_dispositivo_panelGral>\n    )\n}\n\nexport default TemperatureReport\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/ReportesViaje/ReportesViaje.js",["818","819","820","821","822","823"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\nimport ReactExport from \"react-data-export\";\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst ReportesViaje = () => {\n    const [device, setDevice] = useState([]); //SE GUARDAN LOS DISPOSITIVOS\n    const [deviceId, setDeviceId] = useState(\"0\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [errorDevice, setErrorDevice] = useState(false);\n    const [reportData, setReportData] = useState([]); //SE GUARDAN LOS REPORTES\n    const [ubicacion, setUbicacion] = useState([]);\n    //INSTANCIAS PARA EL EXCEL\n    const ExcelFile = ReactExport.ExcelFile;\n    const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n    const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n    const [filename, setFilename] = useState(\"\");\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const DesdeForm = () =>{\n        //validar\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        if (dateFrom.trim() === '' || dateTo.trim() === '') {\n            alert(\"Se debe de indicar una Fecha de Inicio y de Final para generar el reporte\")\n            setError(true);\n            return;\n        }\n        if (dateFrom > dateTo) {\n            alert(\"La fecha de partida no puede ser mayor a la fecha de llegada\");\n            setError(true);\n            return;\n        }\n        setError(false);\n        setErrorDevice(false)\n        Devices();\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToday = () => {\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        setErrorDevice(false)\n        let date = new Date();\n        let dateF1 = new Date(date.getFullYear(), date.getMonth(), date.getDate())\n        dateF1 = dateF1.toISOString()\n\n        let date2 = new Date();\n        let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF2 = dateF2.toISOString()\n        \n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        console.log(dateF1, dateF2)\n        Devices();\n    }\n    const DateYesterday = () => {\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        setErrorDevice(false)\n        let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date1Y = new Date(date)\n        let dateF1 = new Date(date1Y.getFullYear(), date1Y.getMonth(), date1Y.getDate())\n        dateF1 = dateF1.toISOString();\n\n        let date2 = new Date();\n        let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF2 = dateF2.toISOString()\n        \n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        console.log(dateF1, dateF2)\n        Devices();\n    }\n    const DevicesAll = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            console.log(\"antes de consulta \"+ dateFrom)\n            console.log(\"antes de consulta \"+ dateTo)\n            //generar url\n            let url = \"https://www.protrack.ad105.net/api/reports/trips?\";\n            let groupId;\n            for(let i = 0; i < devAll.length; i++){\n                groupId= devAll[i].groupId;\n            }\n            url = url+\"deviceId=\"+deviceId+\"&\";\n            url = url+\"groupId=\"+groupId+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo;\n            console.log(url)\n            const resultado2 = await fetch(`${url}`, requestOptions)\n            const deviceData2 = await resultado2.json();\n            \n\n            console.log(deviceData2)\n            \n            console.log(ubicacion)\n            setReportData(deviceData2);\n            setFilename(`InformedeViajeenExcesodeVelocidad ${dateFrom} - ${dateTo}`);\n    }\n    const TimeFormat = (duration) => {\n        let seconds = (duration / 1000).toFixed(1);\n        let minutes = (duration / (1000 * 60)).toFixed(1);\n        let hours = (duration / (1000 * 60 * 60)).toFixed(1);\n        let days = (duration / (1000 * 60 * 60 * 24)).toFixed(1);\n        if (seconds < 60) return seconds + \" Seg\";\n        else if (minutes < 60) return minutes + \" Min\";\n        else if (hours < 24) return hours + \" Hrs\";\n        else return days + \" Días\"\n    }\n    const Fecha = (fecha) => {\n        const fecha1 = new Date();\n        const date = new Date(fecha);\n        if (fecha1.getDate() === date.getDate()) {\n            return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n        }\n        return date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate()+' '+date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n    }\n    const columns = [\n        {\n            name: '#',\n            selector: 'deviceId',\n            sortable: true,\n        },\n        {\n            name: 'Estado de viaje',\n            sortable: true,\n            cell: row => <span>{row.averageSpeed > 0 ? 'Conducir' : 'Estacionamiento'}</span>\n        },\n        {\n            name: 'Fecha y Hora',\n            sortable: true,\n            cell: row => <span>{Fecha(row.startTime)}~ {Fecha(row.endTime)}</span>\n        },\n        {\n            name: 'Kilometraje (Km)',\n            sortable: true,\n            cell: row => <span>{((row.averageSpeed)*1.852).toFixed(2)+' Km'}</span>\n        },\n        {\n            name: 'Duración',\n            sortable: true,\n            cell: row => <span>{TimeFormat(row.duration)}</span>\n        },\n        {\n            name: 'Lugar de Inicio',\n            sortable: true,\n            cell: row => <s.GMapLink href={`http://map.google.com/maps?q=${row.startLat},${row.startLon}`} target=\"_blank\" rel=\"noreferrer\">\n                            <span>{row.startLat}</span>\n                            <span>{row.startLon}</span>\n                        </s.GMapLink>\n        },\n        {\n            name: 'fin Localización',\n            sortable: true,\n            cell: row => <s.GMapLink href={`http://map.google.com/maps?q=${row.endLat},${row.endLon}`} target=\"_blank\" rel=\"noreferrer\">\n                            <span>{row.endLat}</span>\n                            <span>{row.endLon}</span>\n                        </s.GMapLink>\n        },\n    ];\n    const csvEmptyData = [\n        {\n          foo: \"\"\n        }\n      ];\n    //Estructura para guardar en el excel\n    const data = [\n        {\n            xSteps: 3,\n            columns: [\n                { title: \"Reporte de Viaje\", width: {wpx: 300}, height: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:14}, border: {top: {style: \"none\", color: \"#fff\"}, bottom: {style: \"nono\", color: \"#fff\"}, left: {style: \"none\", color: \"#fff\"}, right: {style: \"none\", color: \"#fff\"}}}}\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"Reporte de Viaje\", width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"DESDE \"+dateFrom+\" A \"+dateTo, width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            ySteps: -1,\n            columns: [\n                { title: \"#\", width: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Tiempo de Inicio\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Tiempo Final\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Kilometraje(Km)\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Duración\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Lugar de Inicio\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Fin localización\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n            ],\n            data: reportData.map((dev, index) => {\n                return [\n                { value: dev.deviceId, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: Fecha(dev.startTime), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: Fecha(dev.endTime), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: ((dev.averageSpeed)*1.852).toFixed(2)+' Km/h', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: TimeFormat(dev.duration), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.startLat+' , '+dev.startLon, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.endLat+' , '+dev.endLon, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                ];\n            }),\n        },\n    ];\n    return (\n        <s.caja_dispositivo_panelGral style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Reporte de Viaje\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral>Dispositivo <s.selecttGral onChange={(e) => setDeviceId(e.target.value)} className={errorDevice ? 'errorFormDate' :  ''}>\n                                <option value=\"\" selected> -- Dispositivo -- </option>\n                            {devAll.map((item) => (\n                                <option value={item.id}>{item.name}</option>\n                            ))}\n                        </s.selecttGral></s.LabelGral>\n                        <div>\n                            <div>\n                            <s.LabelGral>Fecha <s.inputGral type=\"date\" onChange={(e) =>DateFromValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"date\" onChange={(e) => DateToValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.LabelCheck><s.CheckBox1 type=\"checkbox\" name=\"indice\"/>Mostrarel nombre de GEO Cerca </s.LabelCheck>\n                        <s.InfoBoton onClick={DesdeForm}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.row2>\n                        <s.DivSpan>\n                            <s.SpanFechas>Hoy </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateYesterday}>Ayer </s.SpanFechas>\n                        </s.DivSpan>\n                    </s.row2>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={reportData}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <ExcelFile element={<s.ExcelButon>Exportar Excel</s.ExcelButon>} filename={filename}>\n                            <ExcelSheet dataSet={data} name={filename} />\n                        </ExcelFile>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </s.caja_dispositivo_panelGral>\n    )\n}\n\nexport default ReportesViaje\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/OBD/InfoDTC.js",["824","825","826","827","828","829"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst InfoDTC = () => {\n    const [device, setDevice] = useState([]);\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [deviceId, setDeviceId] = useState(\"\");\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const Datos = () => {\n        Devices()\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateYesterday = () => {\n        let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date2 = new Date(date);\n        date2 = date2.toISOString();\n        setDateFrom(date2);\n        setDateTo(date2);\n        console.log(date2)\n        Datos();\n    }\n    const DateWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        date2 = date2.toISOString();\n\n        //Fecha actual\n        let dateToday = new Date();\n        dateToday = dateToday.toISOString();\n        //console.log(dateToday);\n        setDateFrom(date2);\n        setDateTo(dateToday);\n        Datos();\n    }\n    const DateLastWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        date2 = date2.toISOString();\n        //Fecha actual\n        let dateToday = new Date();\n        dateToday = dateToday.toISOString();\n        //console.log(dateToday);\n        setDateFrom(date2);\n        setDateTo(dateToday);\n        Datos();\n    }\n    const DateMonth = () => {\n        let date = new Date();\n        let primerDia = new Date(date.getFullYear(), date.getMonth(), 1);\n        let diaActual = date;\n        setDateFrom(primerDia.toISOString());\n        setDateTo(diaActual.toISOString());\n        Datos();\n    }\n    const DateLastMonth = () => {\n        let dte = new Date();\n        var primerDia = new Date(dte.getFullYear(), dte.getMonth() -1, 1);\n        var ultimoDia = new Date(dte.getFullYear(), dte.getMonth(), 0);\n        setDateFrom(primerDia.toISOString());\n        //Fecha actual\n        setDateTo(ultimoDia.toISOString());\n        Datos();\n    }\n    const DevicesAll = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        /* var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \");*/\n\n           /* var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            if (dateFrom === \"\" && dateTo === \"\" && deviceId === \"\") {\n                const resultado = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n                const resultado2 = await fetch(`https://www.protrack.ad105.net/api/positions`, requestOptions)\n\n                const deviceData = await resultado.json();\n                const deviceData2 = await resultado2.json();\n\n                var full = [] //JSONS MEZClados\n                Object.keys(deviceData).forEach(k=>{full[k] = Object.assign(deviceData[k],deviceData2[k])});\n\n                console.log('full data')\n                console.log(full);\n                setDevice(full);\n            }\n            else{\n                const resultado = await fetch(`https://www.protrack.ad105.net/api/devices/${deviceId}`, requestOptions)\n                const resultado2 = await fetch(`https://www.protrack.ad105.net/api/positions?deviceid=${deviceId}&from=${dateFrom}:00.000z&to=${dateTo}:00.000z`, requestOptions)\n                const deviceData = await resultado.json();\n                const deviceData2 = await resultado2.json();\n\n                var full = [] //JSONS MEZClados\n                Object.keys(deviceData).forEach(k=>{full[k] = Object.assign(deviceData[k],deviceData2[k])});\n\n                console.log('full data')\n                console.log(full);\n                setDevice(full);\n            } */\n    }\n    const Fecha = (fecha) => {\n        const fecha1 = new Date();\n        const date = new Date(fecha);\n        return date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate() + ' '+date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n    }\n    const data = [{ id: '', objetivo: '', kilometraje: '', velocidad: '', estadia: '' }]\n    const columns = [\n        {\n            name: '#',\n            selector: 'deviceId',\n            sortable: true,\n        },\n        {\n            name: 'Objetivo',\n            selector: 'name',\n            sortable: true,\n        },\n        {\n            name: 'Código',\n            selector: 'codigo',\n            sortable: true,\n        },\n        {\n            name: 'Estado',\n            selector: 'estado',\n            sortable: true,\n        },\n        {\n            name: 'Descripción',\n            selector: 'descripcion',\n            sortable: true,\n        },\n        {\n            name: 'Fecha y Hora',\n            selector: 'time',\n            sortable: true,\n        },\n        {\n            name: 'Ubicación',\n            selector: 'ubicacion',\n            sortable: true,\n        },\n    ];\n    return (\n        <s.caja_dispositivo_panelGral style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Informe DTC\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral>Dispositivo <s.selecttGral onChange={(e) => setDeviceId(e.target.value)}>\n                                <option value=\"\" selected> -- Dispositivo -- </option>\n                            {devAll.map((item) => (\n                                <option value={item.id}>{item.name}</option>\n                            ))}\n                        </s.selecttGral></s.LabelGral>\n                        <div>\n                            <div>\n                            <s.LabelGral>Hora <s.inputGral type=\"datetime-local\" onChange={(e) =>DateFromValue(e.target.value)}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"datetime-local\" onChange={(e) => DateToValue(e.target.value)}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.InfoBoton onClick={() => Datos()}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.row2>\n                        <s.DivSpan>\n                            <s.SpanFechas onClick={DateYesterday}>Ayer </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateWeek}>Esta Semana </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastWeek}>La Semana Pasada</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateMonth}>Este Mes</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastMonth}>Mes Pasado</s.SpanFechas>\n                        </s.DivSpan>\n                    </s.row2>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={data}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <s.ExcelButon>Exportar Excel</s.ExcelButon>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </s.caja_dispositivo_panelGral>\n    )\n}\n\nexport default InfoDTC\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/StatusAlarm/DetailsAlarma.js",["830","831","832","833","834","835"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\nimport ReactExport from \"react-data-export\";\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst DetailsAlarma = () => {\n    const [device, setDevice] = useState([]); //SE GUARDAN LOS DISPOSITIVOS\n    const [deviceId, setDeviceId] = useState(\"0\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [errorDevice, setErrorDevice] = useState(false);\n    const ubicacion = [];\n    const [reportData, setReportData] = useState([]); //SE GUARDAN LOS REPORTES\n    const [datosTotal, setDatosTotal] = useState([]);\n    //INSTANCIAS PARA EL EXCEL\n    const ExcelFile = ReactExport.ExcelFile;\n    const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n    const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n    const [filename, setFilename] = useState(\"\");\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const DesdeForm = () =>{\n        //validar\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        if (dateFrom.trim() === '' || dateTo.trim() === '') {\n            alert(\"Se debe de indicar una Fecha de Inicio y de Final para generar el reporte\")\n            setError(true);\n            return;\n        }\n        if (dateFrom > dateTo) {\n            alert(\"La fecha de partida no puede ser mayor a la fecha de llegada\");\n            setError(true);\n            return;\n        }\n        setError(false);\n        setErrorDevice(false)\n        Devices();\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateYesterday = () => {\n        let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date1Y = new Date(date)\n        let dateF1 = new Date(date1Y.getFullYear(), date1Y.getMonth(), date1Y.getDate())\n        dateF1 = dateF1.toISOString();\n\n        let date2 = new Date();\n        let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF2 = dateF2.toISOString()\n        \n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        console.log(dateF1, dateF2)\n        Devices();\n    }\n    const DateWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DateLastWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DateMonth = () => {\n        let date = new Date();\n        let primerDia = new Date(date.getFullYear(), date.getMonth(), 1);\n        let dateF1 = new Date(primerDia.getFullYear(), primerDia.getMonth(), primerDia.getDate())\n        let diaActual = date;\n        let dateF2 = new Date(diaActual.getFullYear(), diaActual.getMonth(), diaActual.getDate())\n        setDateFrom(dateF1.toISOString());\n        setDateTo(dateF2.toISOString());\n        Devices();\n    }\n    const DateLastMonth = () => { //bien\n        let dte = new Date();\n        var primerDia = new Date(dte.getFullYear(), dte.getMonth() -1, 1);\n        let dateF1 = new Date(primerDia.getFullYear(), primerDia.getMonth(), primerDia.getDate())\n        var ultimoDia = new Date(dte.getFullYear(), dte.getMonth(), 0);\n        let dateF2 = new Date(ultimoDia.getFullYear(), ultimoDia.getMonth(), ultimoDia.getDate())\n        setDateFrom(dateF1.toISOString());\n        //Fecha actual\n        setDateTo(dateF2.toISOString());\n        Devices();\n    }\n    const DevicesAll = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            console.log(\"antes de consulta \"+ dateFrom)\n            console.log(\"antes de consulta \"+ dateTo)\n            //generar url\n            let url = \"https://www.protrack.ad105.net/api/reports/events?\";\n            let groupId;\n            for(let i = 0; i < devAll.length; i++){\n                groupId= devAll[i].groupId;\n            }\n            url = url+\"deviceId=\"+deviceId+\"&\";\n            url = url+\"groupId=\"+groupId+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo;\n            console.log(url)\n            const resultado2 = await fetch(`${url}`, requestOptions)\n            const deviceData2 = await resultado2.json();\n            \n\n            console.log(deviceData2)\n            console.log(ubicacion);\n            setDatosTotal(deviceData2);\n            \n            /* console.log(ubicacion)\n            setReportData(deviceData2); */\n            setFilename(`DetallesDeAlarma ${dateFrom} - ${dateTo}`);\n    }\n    const Fecha = (fecha) => {\n        const fecha1 = new Date();\n        const date = new Date(fecha);\n        if (fecha1.getDate() === date.getDate()) {\n            return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n        }\n        return date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate()+' '+date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n    }\n    const typeAlarm = (type) => {\n        let alarma = '';\n        switch (type) {\n            case 'deviceMoving':\n                    alarma = 'Dispositivo en Movimiento';\n                break;\n            case 'jamming':\n                    alarma = 'Dispositivo con Interferencia';\n                break;\n            case 'deviceStopped':\n                    alarma = 'Dispositivo Detenido';\n                break;\n            case 'deviceOffline':\n                    alarma = 'Dispositivo Fuera de Línea';\n                break;\n            case 'deviceOnline':\n                    alarma = 'Dispositivo en línea';\n                break;\n            case 'geofenceExit':\n                    alarma = 'Dispositivo saliendo de GeoCerca';\n                break;\n            case 'geofenceEnter':\n                    alarma = 'Dispositivo entrando a GeoCerca';\n                break;\n            case 'powerCut':\n                    alarma = 'Bateria desconectada';\n                break;\n            case 'sos':\n                    alarma = 'Alarma SOS';\n                break;\n            case 'lowBattery':\n                    alarma = 'Bateria Baja';\n                break;\n            case 'door':\n                    alarma = 'Puerta';\n                break;\n            case 'fuelUp':\n                    alarma = 'Cargando combustible';\n                break;\n            case 'fuelDown':\n                    alarma = 'Vaciando combustible';\n                break;\n            case 'ignitionOff':\n                    alarma = 'Motor Apagado';\n                break;\n            case 'ignitionOn':\n                    alarma = 'Motor Encendido';\n                break;\n            case 'noGps':\n                    alarma = 'No se encuentra Gps';\n                break;\n            case 'overSpeed':\n                    alarma = 'Alarma Exceso de Velocidad';\n                break;\n            case 'oilLeak':\n                    alarma = 'Fuga de combustible';\n                break;\n            case 'deviceUnknown':\n                alarma = 'Dispositivo Desconocido';\n                break;\n            case 'alarm':\n                alarma = 'Alarma';\n\n                break;\n            default:\n                break;\n        }\n        return alarma;\n    }\n    const columns = [\n        {\n            name: '#',\n            selector: 'deviceId',\n            sortable: true,\n        },\n        {\n            name: 'Tipo de Alarma',\n            sortable: true,\n            cell: row => <span>{typeAlarm(row.type)}</span>\n        },\n        {\n            name: 'Hora de Alarma',\n            sortable: true,\n            cell: row => <span>{Fecha(row.serverTime)}</span>\n        },\n        {\n            name: 'Tipo GPS',\n            selector: 'model',\n            sortable: true,\n        },\n        {\n            name: 'Velocidad (Km/h)',\n            sortable: true,\n            cell: row => <span>{((row.speed)*1.852).toFixed(2)+' Km/h'}</span>\n        },\n        {\n            name: 'Ubicación',\n            selector: 'ubiacion',\n            sortable: true,\n        },\n        \n    ];\n    const csvEmptyData = [\n        {\n          foo: \"\"\n        }\n      ];\n    //Estructura para guardar en el excel\n    const data = [\n        {\n            xSteps: 3,\n            columns: [\n                { title: \"DETALLES DE ALARMA\", width: {wpx: 300}, height: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:14}, border: {top: {style: \"none\", color: \"#fff\"}, bottom: {style: \"nono\", color: \"#fff\"}, left: {style: \"none\", color: \"#fff\"}, right: {style: \"none\", color: \"#fff\"}}}}\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"DETALLES DE ALARMA\", width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"DESDE \"+dateFrom+\" A \"+dateTo, width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            ySteps: -1,\n            columns: [\n                { title: \"#\", width: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Tipo de Alarma\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Hora de Alarma\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Tipo Gps\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Velocidad (km/h)\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Ubicación\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n            ],\n            data: datosTotal.map((dev, index) => {\n                return [\n                { value: dev.deviceId, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: typeAlarm(dev.type), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: Fecha(dev.serverTime), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.model, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.deviceId, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.deviceId, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                ];\n            }),\n        },\n    ];\n    //config pagination\n    const paginationComponentOptions = {\n        rowsPerPageText: 'Filas por página',\n        rangeSeparatorText: 'de',\n        selectAllRowsItem: true,\n        selectAllRowsItemText: 'Todos',\n    };\n    return (\n        <s.caja_dispositivo_panelGral style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Detalle de Alarma\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral>Dispositivo <s.selecttGral onChange={(e) => setDeviceId(e.target.value)} className={errorDevice ? 'errorFormDate' :  ''}>\n                                <option value=\"\" selected> -- Dispositivo -- </option>\n                            {devAll.map((item) => (\n                                <option value={item.id}>{item.name}</option>\n                            ))}\n                        </s.selecttGral></s.LabelGral>\n                        <div>\n                            <div>\n                            <s.LabelGral>Hora <s.inputGral type=\"date\" onChange={(e) =>DateFromValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"date\" onChange={(e) => DateToValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.LabelGral>Tipo de Alarma: <s.selecttGral></s.selecttGral></s.LabelGral>\n                        <s.InfoBoton onClick={DesdeForm}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.row2>\n                        <s.DivSpan>\n                            <s.SpanFechas onClick={DateYesterday}>Ayer </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateWeek}>Esta Semana </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastWeek}>La Semana Pasada</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateMonth}>Este Mes</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastMonth}>Mes Pasado</s.SpanFechas>\n                        </s.DivSpan>\n                    </s.row2>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={datosTotal}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                            pagination\n                            paginationComponentOptions={paginationComponentOptions}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <ExcelFile element={<s.ExcelButon>Exportar Excel</s.ExcelButon>} filename={filename}>\n                            <ExcelSheet dataSet={data} name={filename} />\n                        </ExcelFile>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </s.caja_dispositivo_panelGral>\n    )\n}\n\nexport default DetailsAlarma\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/StatusAlarm/GralAlarma.js",["836","837","838","839","840","841","842","843","844"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\nimport ReactExport from \"react-data-export\";\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst GralAlarma = () => {\n    const [device, setDevice] = useState([]); //SE GUARDAN LOS DISPOSITIVOS\n    const [deviceId, setDeviceId] = useState(\"0\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [errorDevice, setErrorDevice] = useState(false);\n    const ubicacion = [];\n    const [reportData, setReportData] = useState([]); //SE GUARDAN LOS REPORTES\n    const [datosTotal, setDatosTotal] = useState([]);\n    //INSTANCIAS PARA EL EXCEL\n    const ExcelFile = ReactExport.ExcelFile;\n    const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n    const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n    const [filename, setFilename] = useState(\"\");\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const DesdeForm = () =>{\n        //validar\n        if (dateFrom.trim() === '' || dateTo.trim() === '') {\n            alert(\"Se debe de indicar una Fecha de Inicio y de Final para generar el reporte\")\n            setError(true);\n            return;\n        }\n        if (dateFrom > dateTo) {\n            alert(\"La fecha de partida no puede ser mayor a la fecha de llegada\");\n            setError(true);\n            return;\n        }\n        setError(false);\n        setErrorDevice(false)\n        Devices();\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateYesterday = () => {\n        let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date1Y = new Date(date)\n        let dateF1 = new Date(date1Y.getFullYear(), date1Y.getMonth(), date1Y.getDate())\n        dateF1 = dateF1.toISOString();\n\n        let date2 = new Date();\n        let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF2 = dateF2.toISOString()\n        \n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        console.log(dateF1, dateF2)\n        Devices();\n    }\n    const DateWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DateLastWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DateMonth = () => {\n        let date = new Date();\n        let primerDia = new Date(date.getFullYear(), date.getMonth(), 1);\n        let dateF1 = new Date(primerDia.getFullYear(), primerDia.getMonth(), primerDia.getDate())\n        let diaActual = date;\n        let dateF2 = new Date(diaActual.getFullYear(), diaActual.getMonth(), diaActual.getDate())\n        setDateFrom(dateF1.toISOString());\n        setDateTo(dateF2.toISOString());\n        Devices();\n    }\n    const DateLastMonth = () => { //bien\n        let dte = new Date();\n        var primerDia = new Date(dte.getFullYear(), dte.getMonth() -1, 1);\n        let dateF1 = new Date(primerDia.getFullYear(), primerDia.getMonth(), primerDia.getDate())\n        var ultimoDia = new Date(dte.getFullYear(), dte.getMonth(), 0);\n        let dateF2 = new Date(ultimoDia.getFullYear(), ultimoDia.getMonth(), ultimoDia.getDate())\n        setDateFrom(dateF1.toISOString());\n        //Fecha actual\n        setDateTo(dateF2.toISOString());\n        Devices();\n    }\n    const DevicesAll = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            console.log(\"antes de consulta \"+ dateFrom)\n            console.log(\"antes de consulta \"+ dateTo)\n            //generar url\n            let url = \"https://www.protrack.ad105.net/api/reports/events?\";\n            let groupId;\n            for(let i = 0; i < devAll.length; i++){\n                url = url+\"deviceId=\"+devAll[i].id+\"&\";\n                groupId= devAll[i].groupId;\n            }\n            url = url+\"groupId=\"+groupId+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo;\n            console.log(url)\n            const resultado2 = await fetch(`${url}`, requestOptions)\n            const deviceData2 = await resultado2.json();\n            \n\n            console.log(deviceData2)\n            \n            console.log(ubicacion);\n\n            for(let i = 0; i < devAll.length; i++){\n                let alarm = 0;\n                let powerCut = 0;\n                let lowBattery = 0;\n                let sos = 0;\n                let geoExit = 0;\n                let geoEnter = 0;\n                let overSpeed = 0;\n                let accOn = 0;\n                let accOff = 0;\n                for(let j = 0; j < deviceData2.length; j++){\n                //console.log(devAll[i].id)\n                    if (devAll[i].id === deviceData2[j].deviceId) {\n                        switch (deviceData2[j].type) {\n                            case 'alarm':\n                                    alarm = alarm + 1;\n                                break;\n                                case 'powerCut':\n                                    powerCut = powerCut + 1;\n                                break;\n                                case 'lowBattery':\n                                    lowBattery = lowBattery + 1;\n                                break;\n                                case 'sos':\n                                    sos = sos + 1;\n                                break;\n                                case 'geofenceExit':\n                                    geoExit = geoExit + 1;\n                                break;\n                                case 'geoFenceEnter':\n                                    geoEnter = geoEnter + 1;\n                                break;\n                                case 'overSpeed':\n                                    overSpeed = overSpeed + 1;\n                                break;\n                                case 'deviceOnline':\n                                    accOn = accOn + 1;\n                                break;\n                                case 'deviceOffline':\n                                    accOff = accOff + 1;\n                                break;\n                            default:\n                                break;\n                        }\n                            \n                    }\n                }\n                console.log(devAll[i].name+' '+accOn+' '+accOff);\n                ubicacion.push({id: i, name: devAll[i].name, alarm: alarm, powerCut: powerCut, lowBattery: lowBattery, sos: sos, geoExit: geoExit, geoEnter: geoEnter, overSpeed: overSpeed, accOn: accOn, accOff: accOff});\n                //setDatosTotal(...datosTotal, {id: devAll[i].id, name: devAll[i].name, encendido: on, apagado: off})\n                //console.log(devAll[i].name+' '+on+' '+off);\n            }\n            console.log(ubicacion)\n            setDatosTotal(ubicacion);\n            \n            /* console.log(ubicacion)\n            setReportData(deviceData2); */\n            setFilename(`DescripciónGeneralDeAlamara ${dateFrom} - ${dateTo}`);\n    }\n    const columns = [\n        {\n            name: '#',\n            selector: 'id',\n            sortable: true,\n            maxWidth: '60px',\n            minWidth: '60px',\n        },\n        {\n            name: 'Objetivo',\n            selector: 'name',\n            sortable: true,\n        },\n        {\n            name: 'Alarma de Vibración',\n            selector: 'alarm',\n            sortable: true,\n            maxWidth: '120px',\n            minWidth: '100px',\n        },\n        {\n            name: 'Alarma de desconexión de la alimentación',\n            selector: 'powerCut',\n            sortable: true,\n            maxWidth: '120px',\n            minWidth: '100px',\n        },\n        {\n            name: 'Alarma de Bateria Baja',\n            selector: 'lowBattery',\n            sortable: true,\n            maxWidth: '120px',\n            minWidth: '100px',\n        },\n        {\n            name: 'Alarma SOS',\n            selector: 'sos',\n            sortable: true,\n            maxWidth: '120px',\n            minWidth: '100px',\n        },\n        {\n            name: 'Alarma Salida de Geo-cerca',\n            selector: 'geoExit',\n            sortable: true,\n            maxWidth: '120px',\n            minWidth: '100px',\n        },\n        {\n            name: 'Alarma Entrada en Geo-cerca',\n            selector: 'geoEnter',\n            sortable: true,\n            maxWidth: '120px',\n            minWidth: '100px',\n        },\n        {\n            name: 'Exceso de velocidad',\n            selector: 'overSpeed',\n            sortable: true,\n            maxWidth: '120px',\n            minWidth: '100px',\n        },\n/*         {\n            name: 'Remolcando',\n            selector: 'remolcando',\n            sortable: true,\n        }, */\n        {\n            name: 'Acc Encendido',\n            selector: 'accOn',\n            sortable: true,\n            maxWidth: '100px',\n            minWidth: '100px',\n        },\n        {\n            name: 'Acc Apagado',\n            selector: 'accOff',\n            sortable: true,\n            maxWidth: '100px',\n            minWidth: '100px',\n        },\n\n    ];\n    const csvEmptyData = [\n        {\n          foo: \"\"\n        }\n      ];\n    //Estructura para guardar en el excel\n    const data = [\n        {\n            xSteps: 3,\n            columns: [\n                { title: \"DESCRIPCIÓN GENERAL DE ALARMA\", width: {wpx: 300}, height: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:14}, border: {top: {style: \"none\", color: \"#fff\"}, bottom: {style: \"nono\", color: \"#fff\"}, left: {style: \"none\", color: \"#fff\"}, right: {style: \"none\", color: \"#fff\"}}}}\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"DESCRIPCIÓN GENERAL DE ALARMA\", width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"DESDE \"+dateFrom+\" A \"+dateTo, width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            ySteps: -1,\n            columns: [\n                { title: \"#\", width: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Objetivo\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Alarma de Vibración\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Alarma de Desconexión de alimentación\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Alarma de Bateria baja\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Alarma SOS\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Alarma Salida de GeoCerca\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Alarma Entrada de GeoCerca\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Exceso de Velocidad\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"ACC Encendido\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"ACC Apagado\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n            ],\n            data: datosTotal.map((dev, index) => {\n                return [\n                { value: dev.id, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.name, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.alarm, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.powerCut, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.lowBattery, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.sos, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.geoExit, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.geoEnter, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.overSpeed, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.accOn, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.accOff, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                ];\n            }),\n        },\n    ];\n    //config pagination\n    const paginationComponentOptions = {\n        rowsPerPageText: 'Filas por página',\n        rangeSeparatorText: 'de',\n        selectAllRowsItem: true,\n        selectAllRowsItemText: 'Todos',\n    };\n    return (\n        <div className=\"menuContent\" style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Descripción General de Alarma\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <div>\n                            <div>\n                            <s.LabelGral>Fecha <s.inputGral type=\"date\" onChange={(e) =>DateFromValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"date\" onChange={(e) => DateToValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.InfoBoton onClick={DesdeForm}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.row2>\n                        <s.DivSpan>\n                            <s.SpanFechas onClick={DateYesterday}>Ayer </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateWeek}>Esta Semana </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastWeek}>La Semana Pasada</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateMonth}>Este Mes</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastMonth}>Mes Pasado</s.SpanFechas>\n                        </s.DivSpan>\n                    </s.row2>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={datosTotal}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                            pagination\n                            paginationComponentOptions={paginationComponentOptions}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <ExcelFile element={<s.ExcelButon>Exportar Excel</s.ExcelButon>} filename={filename}>\n                            <ExcelSheet dataSet={data} name={filename} />\n                        </ExcelFile>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </div>\n    )\n}\n\nexport default GralAlarma\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/StatusAlarm/StatusAlarma.js",["845","846","847","848","849","850"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\nimport ReactExport from \"react-data-export\";\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst StatusAlarma = () => {\n    const [device, setDevice] = useState([]); //SE GUARDAN LOS DISPOSITIVOS\n    const [deviceId, setDeviceId] = useState(\"0\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [errorDevice, setErrorDevice] = useState(false);\n    const ubicacion = [];\n    const [reportData, setReportData] = useState([]); //SE GUARDAN LOS REPORTES\n    const [datosTotal, setDatosTotal] = useState([]);\n    //INSTANCIAS PARA EL EXCEL\n    const ExcelFile = ReactExport.ExcelFile;\n    const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n    const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n    const [filename, setFilename] = useState(\"\");\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const DesdeForm = () =>{\n        //validar\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        if (dateFrom.trim() === '' || dateTo.trim() === '') {\n            alert(\"Se debe de indicar una Fecha de Inicio y de Final para generar el reporte\")\n            setError(true);\n            return;\n        }\n        if (dateFrom > dateTo) {\n            alert(\"La fecha de partida no puede ser mayor a la fecha de llegada\");\n            setError(true);\n            return;\n        }\n        setError(false);\n        setErrorDevice(false)\n        Devices();\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateYesterday = () => {\n        let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date1Y = new Date(date)\n        let dateF1 = new Date(date1Y.getFullYear(), date1Y.getMonth(), date1Y.getDate())\n        dateF1 = dateF1.toISOString();\n\n        let date2 = new Date();\n        let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF2 = dateF2.toISOString()\n        \n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        console.log(dateF1, dateF2)\n        Devices();\n    }\n    const DateWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DateLastWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DateMonth = () => {\n        let date = new Date();\n        let primerDia = new Date(date.getFullYear(), date.getMonth(), 1);\n        let dateF1 = new Date(primerDia.getFullYear(), primerDia.getMonth(), primerDia.getDate())\n        let diaActual = date;\n        let dateF2 = new Date(diaActual.getFullYear(), diaActual.getMonth(), diaActual.getDate())\n        setDateFrom(dateF1.toISOString());\n        setDateTo(dateF2.toISOString());\n        Devices();\n    }\n    const DateLastMonth = () => { //bien\n        let dte = new Date();\n        var primerDia = new Date(dte.getFullYear(), dte.getMonth() -1, 1);\n        let dateF1 = new Date(primerDia.getFullYear(), primerDia.getMonth(), primerDia.getDate())\n        var ultimoDia = new Date(dte.getFullYear(), dte.getMonth(), 0);\n        let dateF2 = new Date(ultimoDia.getFullYear(), ultimoDia.getMonth(), ultimoDia.getDate())\n        setDateFrom(dateF1.toISOString());\n        //Fecha actual\n        setDateTo(dateF2.toISOString());\n        Devices();\n    }\n    const DevicesAll = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            console.log(\"antes de consulta \"+ dateFrom)\n            console.log(\"antes de consulta \"+ dateTo)\n            //generar url\n            let url = \"https://www.protrack.ad105.net/api/reports/events?\";\n            let groupId;\n            for(let i = 0; i < devAll.length; i++){\n                groupId= devAll[i].groupId;\n            }\n            url = url+\"deviceId=\"+deviceId+\"&\";\n            url = url+\"groupId=\"+groupId+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo;\n            console.log(url)\n            const resultado2 = await fetch(`${url}`, requestOptions)\n            const deviceData2 = await resultado2.json();\n            \n\n            console.log(deviceData2)\n            console.log(ubicacion);\n            setDatosTotal(deviceData2);\n            \n            /* console.log(ubicacion)\n            setReportData(deviceData2); */\n            setFilename(`EstadísticasDeAlarma ${dateFrom} - ${dateTo}`);\n    }\n    const Fecha = (fecha) => {\n        const fecha1 = new Date();\n        const date = new Date(fecha);\n        if (fecha1.getDate() === date.getDate()) {\n            return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n        }\n        return date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate()+' '+date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n    }\n    const columns = [\n        {\n            name: '#',\n            selector: 'deviceId',\n            sortable: true,\n            maxWidth: '60px',\n            minWidth: '60px',\n        },\n        {\n            name: 'Fecha',\n            sortable: true,\n            cell: row => <span>{Fecha(row.serverTime)}</span>\n        },\n        {\n            name: 'Alarma de Vibración',\n            sortable: true,\n            maxWidth: '120px',\n            minWidth: '100px',\n            cell: row => <span>{row.type === 'alarm' ? '1' : '0'}</span>\n        },\n        {\n            name: 'Alarma de\\n desconexión de la alimentación',\n            sortable: true,\n            maxWidth: '120px',\n            minWidth: '100px',\n            cell: row => <span>{row.type === 'powerCut' ? '1' : '0'}</span>\n        },\n        {\n            name: 'Alarma de Bateria Baja',\n            sortable: true,\n            maxWidth: '120px',\n            minWidth: '100px',\n            cell: row => <span>{row.type === 'lowBattery' ? '1' : '0'}</span>\n        },\n        {\n            name: 'Alarma SOS',\n            sortable: true,\n            maxWidth: '120px',\n            minWidth: '100px',\n            cell: row => <span>{row.type === 'sos' ? '1' : '0'}</span>\n        },\n        {\n            name: 'Alarma Salida de Geo-cerca',\n            sortable: true,\n            maxWidth: '120px',\n            minWidth: '100px',\n            cell: row => <span>{row.type === 'geofenceExit' ? '1' : '0'}</span>\n        },\n        {\n            name: 'Alarma Entrada en Geo-cerca',\n            sortable: true,\n            maxWidth: '120px',\n            minWidth: '100px',\n            cell: row => <span>{row.type === 'geofenceEnter' ? '1' : '0'}</span>\n        },\n        {\n            name: 'Exceso de velocidad de alarma',\n            sortable: true,\n            maxWidth: '120px',\n            minWidth: '100px',\n            cell: row => <span>{row.type === 'deviceOverSpeed' ? '1' : '0'}</span>\n        },\n        {\n            name: 'Acc Encendido',\n            sortable: true,\n            maxWidth: '120px',\n            minWidth: '100px',\n            cell: row => <span>{row.type === 'deviceOnline' ? '1' : '0'}</span>\n        },\n        {\n            name: 'Acc Apagado',\n            sortable: true,\n            maxWidth: '120px',\n            minWidth: '100px',\n            cell: row => <span>{row.type === 'deviceOffline' ? '1' : '0'}</span>\n        },\n    ];\n    const csvEmptyData = [\n        {\n          foo: \"\"\n        }\n      ];\n    //Estructura para guardar en el excel\n    const data = [\n        {\n            xSteps: 3,\n            columns: [\n                { title: \"ESTADÍSTICAS DE ALARMA\", width: {wpx: 300}, height: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:14}, border: {top: {style: \"none\", color: \"#fff\"}, bottom: {style: \"nono\", color: \"#fff\"}, left: {style: \"none\", color: \"#fff\"}, right: {style: \"none\", color: \"#fff\"}}}}\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"ESTADÍSTICAS DE ALARMA\", width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"DESDE \"+dateFrom+\" A \"+dateTo, width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            ySteps: -1,\n            columns: [\n                { title: \"#\", width: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Fecha\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Alarma de Vibración\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Alarma de Desconexión de la alimentación\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Alarma de Bateria baja\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Alarma SOS\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Alarma de Salida de GEO-CERCA\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Alarma de Entrada de GEO-CERCA\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Exceso de Velocidad de Alarma\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"ACC Encendido\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"ACC Apagado\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n            ],\n            data: datosTotal.map((dev, index) => {\n                return [\n                { value: dev.deviceId, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: Fecha(dev.serverTime), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.type === 'alarm' ? '1' : '0', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.type === 'powerCut' ? '1' : '0', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.type === 'lowBattery' ? '1' : '0', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.type === 'sos' ? '1' : '0', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.type === 'geofenceExit' ? '1' : '0', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.type === 'geofenceEnter' ? '1' : '0', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.type === 'overSpeed' ? '1' : '0', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.type === 'deviceOnline' ? '1' : '0', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.type === 'deviceOffline' ? '1' : '0', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                ];\n            }),\n        },\n    ];\n    //config pagination\n    const paginationComponentOptions = {\n        rowsPerPageText: 'Filas por página',\n        rangeSeparatorText: 'de',\n        selectAllRowsItem: true,\n        selectAllRowsItemText: 'Todos',\n    };\n    return (\n        <s.caja_dispositivo_panelGral style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Estadística de Alarma\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral>Dispositivo <s.selecttGral onChange={(e) => setDeviceId(e.target.value)} className={errorDevice ? 'errorFormDate' :  ''}>\n                                <option value=\"\" selected> -- Dispositivo -- </option>\n                            {devAll.map((item) => (\n                                <option value={item.id}>{item.name}</option>\n                            ))}\n                        </s.selecttGral></s.LabelGral>\n                        <div>\n                            <div>\n                            <s.LabelGral>Hora <s.inputGral type=\"date\" onChange={(e) =>DateFromValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"date\" onChange={(e) => DateToValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.InfoBoton onClick={DesdeForm}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.row2>\n                        <s.DivSpan>\n                            <s.SpanFechas onClick={DateYesterday}>Ayer </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateWeek}>Esta Semana </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastWeek}>La Semana Pasada</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateMonth}>Este Mes</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastMonth}>Mes Pasado</s.SpanFechas>\n                        </s.DivSpan>\n                    </s.row2>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={datosTotal}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                            pagination\n                            paginationComponentOptions={paginationComponentOptions}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <ExcelFile element={<s.ExcelButon>Exportar Excel</s.ExcelButon>} filename={filename}>\n                            <ExcelSheet dataSet={data} name={filename} />\n                        </ExcelFile>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </s.caja_dispositivo_panelGral>\n    )\n}\n\nexport default StatusAlarma\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/GeneReportes/GeneReportes.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Dispositivo.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/OBD/ResCombViaje.js",["851","852","853","854","855","856","857","858","859"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\nimport ReactExport from \"react-data-export\";\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst ResCombViaje = () => {\n    const [device, setDevice] = useState([]); //SE GUARDAN LOS DISPOSITIVOS\n    const [deviceId, setDeviceId] = useState(\"0\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [errorDevice, setErrorDevice] = useState(false);\n    const ubicacion = [];\n    const [reportData, setReportData] = useState([]); //SE GUARDAN LOS REPORTES\n    const [datosTotal, setDatosTotal] = useState([]);\n    const [totalViaje, settotalViaje] = useState(0);\n    const [totalKilo, settotalKilo] = useState(0);\n    const [totalFuel, settotalFuel] = useState(0)\n    //INSTANCIAS PARA EL EXCEL\n    const ExcelFile = ReactExport.ExcelFile;\n    const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n    const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n    const [filename, setFilename] = useState(\"\");\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const DesdeForm = () =>{\n        //validar\n        if (dateFrom.trim() === '' || dateTo.trim() === '') {\n            alert(\"Se debe de indicar una Fecha de Inicio y de Final para generar el reporte\")\n            setError(true);\n            return;\n        }\n        if (dateFrom > dateTo) {\n            alert(\"La fecha de partida no puede ser mayor a la fecha de llegada\");\n            setError(true);\n            return;\n        }\n        setError(false);\n        setErrorDevice(false)\n        Devices();\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateYesterday = () => {\n        let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date1Y = new Date(date)\n        let dateF1 = new Date(date1Y.getFullYear(), date1Y.getMonth(), date1Y.getDate())\n        dateF1 = dateF1.toISOString();\n\n        let date2 = new Date();\n        let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF2 = dateF2.toISOString()\n        \n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        console.log(dateF1, dateF2)\n        Devices();\n    }\n    const DateWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DateLastWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DateMonth = () => {\n        let date = new Date();\n        let primerDia = new Date(date.getFullYear(), date.getMonth(), 1);\n        let dateF1 = new Date(primerDia.getFullYear(), primerDia.getMonth(), primerDia.getDate())\n        let diaActual = date;\n        let dateF2 = new Date(diaActual.getFullYear(), diaActual.getMonth(), diaActual.getDate())\n        setDateFrom(dateF1.toISOString());\n        setDateTo(dateF2.toISOString());\n        Devices();\n    }\n    const DateLastMonth = () => { //bien\n        let dte = new Date();\n        var primerDia = new Date(dte.getFullYear(), dte.getMonth() -1, 1);\n        let dateF1 = new Date(primerDia.getFullYear(), primerDia.getMonth(), primerDia.getDate())\n        var ultimoDia = new Date(dte.getFullYear(), dte.getMonth(), 0);\n        let dateF2 = new Date(ultimoDia.getFullYear(), ultimoDia.getMonth(), ultimoDia.getDate())\n        setDateFrom(dateF1.toISOString());\n        //Fecha actual\n        setDateTo(dateF2.toISOString());\n        Devices();\n    }\n    const DevicesAll = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            console.log(\"antes de consulta \"+ dateFrom)\n            console.log(\"antes de consulta \"+ dateTo)\n            //generar url\n            let url = \"https://www.protrack.ad105.net/api/reports/trips?\";\n            let groupId;\n            for(let i = 0; i < devAll.length; i++){\n                url = url+\"deviceId=\"+devAll[i].id+\"&\";\n                groupId= devAll[i].groupId;\n            }\n            url = url+\"groupId=\"+groupId+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo;\n            console.log(url)\n            const resultado2 = await fetch(`${url}`, requestOptions)\n            const deviceData2 = await resultado2.json();\n            \n\n            console.log(deviceData2)\n            \n            console.log(ubicacion);\n            let viaje = 0;\n            let kilo = 0;\n            let fuel = 0;\n            for (let i = 0; i < deviceData2.length; i++) {\n                viaje = 0;\n                fuel = fuel + deviceData2[i].spentFuel;\n                kilo = kilo + deviceData2[i].averageSpeed;\n            }\n            settotalViaje(viaje);\n            settotalFuel(fuel);\n            settotalKilo(kilo);\n            for(let i = 0; i < devAll.length; i++){\n                let velocidad = 0;\n                let combustible = 0;\n                for(let j = 0; j < deviceData2.length; j++){\n                //console.log(devAll[i].id)\n                    if (devAll[i].id === deviceData2[j].deviceId) {\n                            velocidad = velocidad + deviceData2[j].averageSpeed;\n                            combustible = combustible + deviceData2[j].spentFuel;\n                    }\n                }\n                console.log(devAll[i].name+' '+velocidad+' '+combustible);\n                ubicacion.push({id: i, name: devAll[i].name, speed: velocidad, fuel: combustible, time: 0, medio: 0, ejecucion: 0,});\n                //setDatosTotal(...datosTotal, {id: devAll[i].id, name: devAll[i].name, encendido: on, apagado: off})\n                //console.log(devAll[i].name+' '+on+' '+off);\n            }\n            console.log(ubicacion)\n            setDatosTotal(ubicacion);\n            \n            /* console.log(ubicacion)\n            setReportData(deviceData2); */\n            setFilename(`ResumenDeConsumoDeCombustibleDeViaje ${dateFrom} - ${dateTo}`);\n    }\n    const columns = [\n        {\n            name: '#',\n            selector: 'id',\n            sortable: true,\n        },\n        {\n            name: 'Objetivo',\n            selector: 'name',\n            sortable: true,\n        },\n        {\n            name: 'Tiempo de viaje',\n            selector: 'time',\n            sortable: true,\n        },\n        {\n            name: 'Kilometraje (Km)',\n            sortable: true,\n            cell: row => <span>{((row.speed)*1.852).toFixed(2)+' Km/h'}</span>\n        },\n        {\n            name: 'Tiempo de Ejeución',\n            selector: 'ejecucion',\n            sortable: true,\n        },\n        {\n            name: 'Consumo de combustible(L)',\n            selector: 'fuel',\n            sortable: true,\n        },\n        {\n            name: 'Consumo medio de combustible(L/100KM)',\n            selector: 'medio',\n            sortable: true,\n        },\n    ];\n    const csvEmptyData = [\n        {\n          foo: \"\"\n        }\n      ];\n    //Estructura para guardar en el excel\n    const data = [\n        {\n            xSteps: 3,\n            columns: [\n                { title: \"RESUMEN DE CONSUMO DE COMBUSTIBLE DE VIAJE\", width: {wpx: 300}, height: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:14}, border: {top: {style: \"none\", color: \"#fff\"}, bottom: {style: \"nono\", color: \"#fff\"}, left: {style: \"none\", color: \"#fff\"}, right: {style: \"none\", color: \"#fff\"}}}}\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"RESUMEN DE CONSUMO DE COMBUSTIBLE DE VIAJE\", width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"DESDE \"+dateFrom+\" A \"+dateTo, width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            ySteps: -1,\n            columns: [\n                { title: \"#\", width: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Objetivo\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Tiempo de Viaje\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Kilometraje\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Tiempo de Ejecución\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Consumo de Combustible\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Consumo medio de combustible\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                ],\n            data: datosTotal.map((dev, index) => {\n                return [\n                { value: dev.id, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.name, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.time, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: ((dev.speed)*1.852).toFixed(2)+' Km/h', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.ejecucion, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.fuel, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.medio, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                ];\n            }),\n        },\n    ];\n    //config pagination\n    const paginationComponentOptions = {\n        rowsPerPageText: 'Filas por página',\n        rangeSeparatorText: 'de',\n        selectAllRowsItem: true,\n        selectAllRowsItemText: 'Todos',\n    };\n    return (\n        <s.caja_dispositivo_panelGral style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Resumen de consumo de combustible de viaje\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <div>\n                            <div>\n                            <s.LabelGral>Fecha <s.inputGral type=\"date\" onChange={(e) =>DateFromValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"date\" onChange={(e) => DateToValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.InfoBoton onClick={DesdeForm}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.row2>\n                        <s.DivSpan>\n                            <s.SpanFechas onClick={DateYesterday}>Ayer </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateWeek}>Esta Semana </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastWeek}>La Semana Pasada</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateMonth}>Este Mes</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastMonth}>Mes Pasado</s.SpanFechas>\n                        </s.DivSpan>\n                    </s.row2>\n                    <s.divCards>\n                        <s.divCard>\n                            <s.LabelCard>Totla Tiempos de Viaje:</s.LabelCard>\n                            <s.LabelCard2>{totalViaje}</s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Total Kilometraje:</s.LabelCard>\n                            <s.LabelCard2>{((totalKilo)*1.852).toFixed(2)+' Km/h'}</s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Total Tiempo de Ejecución:</s.LabelCard>\n                            <s.LabelCard2>{totalViaje}</s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Total Consumo de Combustible:</s.LabelCard>\n                            <s.LabelCard2>{totalFuel}</s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Total Consumo Medio de Combustible:</s.LabelCard>\n                            <s.LabelCard2>{totalFuel}</s.LabelCard2>\n                        </s.divCard>\n                    </s.divCards>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={datosTotal}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                            pagination\n                            paginationComponentOptions={paginationComponentOptions}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <ExcelFile element={<s.ExcelButon>Exportar Excel</s.ExcelButon>} filename={filename}>\n                            <ExcelSheet dataSet={data} name={filename} />\n                        </ExcelFile>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </s.caja_dispositivo_panelGral>\n    )\n}\n\nexport default ResCombViaje\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoAdmin/ContenidoAdmin.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/OBD/DetailsCombViaje.js",["860","861","862","863","864","865","866"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\nimport ReactExport from \"react-data-export\";\nimport ReactECharts from 'echarts-for-react';\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst DetailsCombViaje = () => {\n    const [device, setDevice] = useState([]); //SE GUARDAN LOS DISPOSITIVOS\n    const [deviceId, setDeviceId] = useState(\"0\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [errorDevice, setErrorDevice] = useState(false);\n    const ubicacion = [];\n    const [reportData, setReportData] = useState([]); //SE GUARDAN LOS REPORTES\n    const [datosTotal, setDatosTotal] = useState([]);\n    const [totalKilo, setTotalKilo] = useState(0);\n    const [totalFuel, setTotalFuel] = useState(0);\n    //INSTANCIAS PARA EL EXCEL\n    const ExcelFile = ReactExport.ExcelFile;\n    const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n    const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n    const [filename, setFilename] = useState(\"\");\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const DesdeForm = () =>{\n        //validar\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        if (dateFrom.trim() === '' || dateTo.trim() === '') {\n            alert(\"Se debe de indicar una Fecha de Inicio y de Final para generar el reporte\")\n            setError(true);\n            return;\n        }\n        if (dateFrom > dateTo) {\n            alert(\"La fecha de partida no puede ser mayor a la fecha de llegada\");\n            setError(true);\n            return;\n        }\n        setError(false);\n        setErrorDevice(false)\n        Devices();\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateYesterday = () => {\n        let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date1Y = new Date(date)\n        let dateF1 = new Date(date1Y.getFullYear(), date1Y.getMonth(), date1Y.getDate())\n        dateF1 = dateF1.toISOString();\n\n        let date2 = new Date();\n        let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF2 = dateF2.toISOString()\n        \n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        console.log(dateF1, dateF2)\n        Devices();\n    }\n    const DateWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DateLastWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DateMonth = () => {\n        let date = new Date();\n        let primerDia = new Date(date.getFullYear(), date.getMonth(), 1);\n        let dateF1 = new Date(primerDia.getFullYear(), primerDia.getMonth(), primerDia.getDate())\n        let diaActual = date;\n        let dateF2 = new Date(diaActual.getFullYear(), diaActual.getMonth(), diaActual.getDate())\n        setDateFrom(dateF1.toISOString());\n        setDateTo(dateF2.toISOString());\n        Devices();\n    }\n    const DateLastMonth = () => { //bien\n        let dte = new Date();\n        var primerDia = new Date(dte.getFullYear(), dte.getMonth() -1, 1);\n        let dateF1 = new Date(primerDia.getFullYear(), primerDia.getMonth(), primerDia.getDate())\n        var ultimoDia = new Date(dte.getFullYear(), dte.getMonth(), 0);\n        let dateF2 = new Date(ultimoDia.getFullYear(), ultimoDia.getMonth(), ultimoDia.getDate())\n        setDateFrom(dateF1.toISOString());\n        //Fecha actual\n        setDateTo(dateF2.toISOString());\n        Devices();\n    }\n    const DevicesAll = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            console.log(\"antes de consulta \"+ dateFrom)\n            console.log(\"antes de consulta \"+ dateTo)\n            //generar url\n            let url = \"https://www.protrack.ad105.net/api/reports/trips?\";\n            let groupId;\n            for(let i = 0; i < devAll.length; i++){\n                groupId= devAll[i].groupId;\n            }\n            url = url+\"deviceId=\"+deviceId+\"&\";\n            url = url+\"groupId=\"+groupId+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo;\n            console.log(url)\n            const resultado2 = await fetch(`${url}`, requestOptions)\n            const deviceData2 = await resultado2.json();\n            \n            let kilo = 0;\n            let fuel = 0;\n            for (let i = 0; i < deviceData2.length; i++) {\n                kilo = kilo + deviceData2[i].averageSpeed;\n                fuel = fuel + deviceData2[i].spentFuel;\n            }\n\n            setTotalFuel(fuel);\n            setTotalKilo(kilo);\n            console.log(deviceData2)\n            console.log(ubicacion);\n            setDatosTotal(deviceData2);\n            \n            /* console.log(ubicacion)\n            setReportData(deviceData2); */\n            setFilename(`DetallesDeConsumoDeCombustibleDeViaje ${dateFrom} - ${dateTo}`);\n    }\n    const TimeFormat = (duration) => {\n        let seconds = (duration / 1000).toFixed(1);\n        let minutes = (duration / (1000 * 60)).toFixed(1);\n        let hours = (duration / (1000 * 60 * 60)).toFixed(1);\n        let days = (duration / (1000 * 60 * 60 * 24)).toFixed(1);\n        if (seconds < 60) return seconds + \" Seg\";\n        else if (minutes < 60) return minutes + \" Min\";\n        else if (hours < 24) return hours + \" Hrs\";\n        else return days + \" Días\"\n    }\n    const Fecha = (fecha) => {\n        const fecha1 = new Date();\n        const date = new Date(fecha);\n        if (fecha1.getDate() === date.getDate()) {\n            return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n        }\n        return date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate()+' '+date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n    }\n    const columns = [\n        {\n            name: '#',\n            selector: 'deviceId',\n            sortable: true,\n        },\n        {\n            name: 'Kilometraje (Km)',\n            sortable: true,\n            cell: row => <span>{((row.averageSpeed)*1.852).toFixed(2)+' Km/h'}</span>\n        },\n        {\n            name: 'Consumo de combustible(L)',\n            selector: 'spentFuel',\n            sortable: true,\n        },\n        {\n            name: 'Tiempo inicio',\n            sortable: true,\n            cell: row => <span>{Fecha(row.startTime)}</span>\n        },\n        {\n            name: 'Tiempo Final',\n            sortable: true,\n            cell: row => <span>{Fecha(row.endTime)}</span>\n        },\n/*         {\n            name: 'Tiempo de Ejeución',\n            selector: 'ejecucion',\n            sortable: true,\n        },\n        {\n            name: 'Operación',\n            selector: 'operacion',\n            sortable: true,\n        }, */\n    ];\n    const csvEmptyData = [\n        {\n          foo: \"\"\n        }\n      ];\n    //Estructura para guardar en el excel\n    const data = [\n        {\n            xSteps: 3,\n            columns: [\n                { title: \"DETALLES DE CONSUMO DE COMBUSTIBLE DE VIAJE\", width: {wpx: 300}, height: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:14}, border: {top: {style: \"none\", color: \"#fff\"}, bottom: {style: \"nono\", color: \"#fff\"}, left: {style: \"none\", color: \"#fff\"}, right: {style: \"none\", color: \"#fff\"}}}}\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"DETALLES DE CONSUMO DE COMBUSTIBLE DE VIAJE\", width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"DESDE \"+dateFrom+\" A \"+dateTo, width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            ySteps: -1,\n            columns: [\n                { title: \"#\", width: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Kilometraje\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Consumo de Combustible\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Tiempo de Inicio\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Tiempo Final\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n            ],\n            data: datosTotal.map((dev, index) => {\n                return [\n                { value: dev.deviceId, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: ((dev.averageSpeed)*1.852).toFixed(2)+' Km/h', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.spentFuel, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: Fecha(dev.startTime), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: Fecha(dev.endTime), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                ];\n            }),\n        },\n    ];\n    //config pagination\n    const paginationComponentOptions = {\n        rowsPerPageText: 'Filas por página',\n        rangeSeparatorText: 'de',\n        selectAllRowsItem: true,\n        selectAllRowsItemText: 'Todos',\n    };\n    const options = {\n        grid: { top: 8, right: 8, bottom: 24, left: 36, containLabel: true },\n        xAxis: {\n            type: 'category',\n            data: ['', '', '', '', '', 'Odometro'],\n        },\n        yAxis: {\n            type: 'value',\n        },\n        series: [\n            {\n                data: ['Sin Datos'],\n                type: 'line',\n                smooth: true,\n                areaStyle: {normal: {}},\n            },\n        ],\n        tooltip: {\n            trigger: 'axis',\n        },\n    };\n    return (\n        <s.caja_dispositivo_panelGral style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Detalles de consumo de combustible de viaje\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral>Dispositivo <s.selecttGral onChange={(e) => setDeviceId(e.target.value)} className={errorDevice ? 'errorFormDate' :  ''}>\n                                <option value=\"\" selected> -- Dispositivo -- </option>\n                            {devAll.map((item) => (\n                                <option value={item.id}>{item.name}</option>\n                            ))}\n                        </s.selecttGral></s.LabelGral>\n                        <div>\n                            <div>\n                            <s.LabelGral>Hora <s.inputGral type=\"date\" onChange={(e) =>DateFromValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"date\" onChange={(e) => DateToValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.InfoBoton onClick={DesdeForm}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.row2>\n                        <s.DivSpan>\n                            <s.SpanFechas onClick={DateYesterday}>Ayer </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateWeek}>Esta Semana </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastWeek}>La Semana Pasada</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateMonth}>Este Mes</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastMonth}>Mes Pasado</s.SpanFechas>\n                        </s.DivSpan>\n                    </s.row2>\n                    <s.divCards>\n                        {/* <s.divCard>\n                            <s.LabelCard>Total Tiempos de viaje:</s.LabelCard>\n                            <s.LabelCard2></s.LabelCard2>\n                        </s.divCard> */}\n                        <s.divCard>\n                            <s.LabelCard>Total Kilometraje:</s.LabelCard>\n                            <s.LabelCard2>{((totalKilo)*1.852).toFixed(2)+' '}Km</s.LabelCard2>\n                        </s.divCard>\n                        {/* <s.divCard>\n                            <s.LabelCard>Total Tiempo de ejecución:</s.LabelCard>\n                            <s.LabelCard2></s.LabelCard2>\n                        </s.divCard> */}\n                        <s.divCard>\n                            <s.LabelCard>Total Consumo de combustible:</s.LabelCard>\n                            <s.LabelCard2>{totalFuel+' '}L</s.LabelCard2>\n                        </s.divCard>\n                        {/*  <s.divCard>\n                            <s.LabelCard>Total Consumo medio de combustible:</s.LabelCard>\n                            <s.LabelCard2></s.LabelCard2>\n                        </s.divCard> */}\n                    </s.divCards>\n                    {/* chart */}\n                    <s.divTable>\n                        <ReactECharts option={options} />\n                    </s.divTable>\n                    <s.divTableComb>\n                        <DataTable\n                            columns={columns}\n                            data={datosTotal}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                            pagination\n                            paginationComponentOptions={paginationComponentOptions}\n                        />\n                    </s.divTableComb>\n                    <s.divButonsGral>\n                        <ExcelFile element={<s.ExcelButon>Exportar Excel</s.ExcelButon>} filename={filename}>\n                            <ExcelSheet dataSet={data} name={filename} />\n                        </ExcelFile>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </s.caja_dispositivo_panelGral>\n    )\n}\n\nexport default DetailsCombViaje\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraSuperiorAdmin/BarraSuperior.styles.js",["867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882"],"import styled from '@emotion/styled/macro';\n\nimport iconos from '../../assets/images/base.a0aebc1.png'\n\nimport es from '../../assets/images/es-es.svg';\nimport en from '../../assets/images/en-us.svg';\nimport pt from '../../assets/images/pt-pt.svg';\nimport br from '../../assets/images/pt-br.svg';\nimport fr from '../../assets/images/fr-fr.svg';\nimport de from '../../assets/images/de-de.svg';\nimport it from '../../assets/images/it-it.svg';\nimport nl from '../../assets/images/nl-nl.svg';\nimport no from '../../assets/images/no-no.svg';\nimport ar from '../../assets/images/ar-sa.svg';\nimport fa from '../../assets/images/fa-fa.svg';\nimport vi from '../../assets/images/vi-vn.svg';\nimport bn from '../../assets/images/bn-bd.svg';\nimport id from '../../assets/images/in-id.svg';\nimport th from '../../assets/images/th-th.svg';\nimport km from '../../assets/images/km-kh.svg';\nimport cn from '../../assets/images/zh-cn.svg';\n\nexport const header_top = styled.div`\n    font: 400 14px Arial;\n    font-family: Avenir,Helvetica,Arial,sans-serif;\n    -webkit-font-smoothing: antialiased;\n    color: #2c3e50;\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    top: 0;\n    left: 225px;\n    right: 0;\n`\n\nexport const header_box = styled.header`\n    font: 400 14px Arial;\n    font-family: Avenir,Helvetica,Arial,sans-serif;\n    -webkit-font-smoothing: antialiased;\n    color: #2c3e50;\n    position: relative;\n    height: 78px;\n`\n\nexport const header_content = styled.div`\n    font: 400 14px Arial;\n    font-family: Avenir,Helvetica,Arial,sans-serif;\n    -webkit-font-smoothing: antialiased;\n    color: #2c3e50;\n    margin: 0;\n    padding: 0;\n`\n\nexport const btn_monitor = styled.a`\n    font: 400 14px Arial;\n    font-family: Avenir,Helvetica,Arial,sans-serif;\n    -webkit-font-smoothing: antialiased;\n    text-decoration: none;\n    cursor: pointer;\n    outline: none;\n    display: inline-block;\n    height: 78px;\n    line-height: 78px;\n    font-size: 16px;\n    color: #ff9934;\n    margin-left: 50px;\n`\n\nexport const base_icon = styled.i`\n    font: 400 14px Arial;\n    font-family: Avenir,Helvetica,Arial,sans-serif;\n    -webkit-font-smoothing: antialiased;\n    cursor: pointer;\n    line-height: 78px;\n    font-size: 16px;\n    color: #ff9934;\n    background-image: url(${iconos});\n    background-repeat: no-repeat;\n    height: 14px;\n    width: 16px;\n    display: inline-block;\n    background-position: -41px -1px;\n    margin-right: 10px;\n    position: relative;\n    top: 2px;\n`\n\nexport const search_box = styled.div`\n    font: 400 14px Arial;\n    font-family: Avenir,Helvetica,Arial,sans-serif;\n    -webkit-font-smoothing: antialiased;\n    color: #2c3e50;\n    margin: 0;\n    padding: 0;\n    width: 560px;\n    position: absolute;\n    height: 36px;\n    left: 50%;\n    top: 50%;\n    margin-left: -330px;\n    margin-top: -18px;\n`\n\nexport const header_search_box = styled.div`\n    font: 400 14px Arial;\n    font-family: Avenir,Helvetica,Arial,sans-serif;\n    -webkit-font-smoothing: antialiased;\n    color: #2c3e50;\n    margin: 0;\n    padding: 0;\n    position: relative;\n    float: left;\n    display: inline;\n    width: 310px;\n    height: 36px;\n`\n\nexport const prefix_header_search_box = styled.div`\n    font: 400 14px Arial;\n    font-family: Avenir,Helvetica,Arial,sans-serif;\n    -webkit-font-smoothing: antialiased;\n    color: #2c3e50;\n    margin: 0;\n    padding: 0;\n    position: relative;\n    font-size: 14px;\n    display: inline-block;\n    width: 100%;\n`\n\nexport const base_icon_device = styled.i`\n    -webkit-font-smoothing: antialiased;\n    white-space: nowrap;\n    cursor: pointer;\n    text-align: center;\n    font-weight: 400;\n    font-family: Avenir,Helvetica,Arial,sans-serif;\n    line-height: 1;\n    color: #656565;\n    font-size: 14px;\n    background-image: url(${iconos});\n    background-repeat: no-repeat;\n    display: inline-block;\n    width: 13px;\n    height: 14px;\n    margin-right: 10px;\n    background-position: -42px -41px;\n    position: relative;\n    top: 2px;\n    left: 4px;\n`\n\nexport const btn_search_device = styled.button`\n    -webkit-font-smoothing: antialiased;\n    white-space: nowrap;\n    cursor: pointer;\n    background: #fff;\n    -webkit-appearance: none;\n    text-align: center;\n    box-sizing: border-box;\n    outline: none;\n    margin: 0;\n    transition: .1s;\n    font-weight: 400;\n    float: left;\n    display: inline;\n    font-family: Avenir,Helvetica,Arial,sans-serif;\n    border: 1px solid #dbe1e5;\n    height: 36px;\n    line-height: 1;\n    padding: 0 10px;\n    border-radius: 0;\n    color: #656565;\n    font-size: 14px;\n    margin-left: -1px;\n    &:hover{\n        border-color: #ff9934;\n        background-color: #fff5eb; \n        ${base_icon_device}{\n            background-image: url(${iconos});\n            background-repeat: no-repeat;\n            display: inline-block;\n            width: 13px;\n            height: 14px;\n            margin-right: 10px;\n            background-position: -81px -41px;\n            position: relative;\n            top: 2px;\n            left: 4px;\n        }\n    }\n`\n\n\n\nexport const input_inner = styled.input`\n    -webkit-font-smoothing: antialiased;\n    margin: 0;\n    -webkit-appearance: none;\n    background-color: #fff;\n    background-image: none;\n    box-sizing: border-box;\n    color: #606266;\n    display: inline-block;\n    font-size: inherit;\n    outline: none;\n    padding: 0 15px;\n    transition: border-color .2s cubic-bezier(.645,.045,.355,1);\n    width: 100%;\n    height: 36px;\n    line-height: 36px;\n    font-family: Avenir,Helvetica,Arial,sans-serif;\n    padding-right: 30px;\n    border: 1px solid #dbe1e5;\n    border-radius: 0;\n    border-top-left-radius: 2px;\n    border-bottom-left-radius: 2px;\n    padding-left: 36px;\n    &:hover{\n        border-color: #ff9934;\n    }\n`\n\nexport const input_prefix = styled.span`\n    font: 400 14px Arial;\n    font-family: Avenir,Helvetica,Arial,sans-serif;\n    -webkit-font-smoothing: antialiased;\n    font-size: 14px;\n    position: absolute;\n    left: 5px;\n    top: 0;\n    color: #c0c4cc;\n    height: 100%;\n    text-align: center;\n    transition: all .3s;\n`\nexport const icon_search_box = styled.i`\n    font: 400 14px Arial;\n    font-family: Avenir,Helvetica,Arial,sans-serif;\n    -webkit-font-smoothing: antialiased;\n    font-size: 14px;\n    color: #c0c4cc;\n    text-align: center;\n    transition: all .3s;\n    width: 25px;\n    background-image: url(${iconos});\n    background-repeat: no-repeat;\n    display: inline-block;\n    background-position: -36px -120px;\n    height: 36px;\n    line-height: 36px;\n`\n\nexport const base_icon_user = styled.i`\n-webkit-font-smoothing: antialiased;\nwhite-space: nowrap;\ncursor: pointer;\ntext-align: center;\nfont-weight: 400;\nfont-family: Avenir,Helvetica,Arial,sans-serif;\nline-height: 1;\ncolor: #656565;\nfont-size: 14px;\nbackground-image: url(${iconos});\nbackground-repeat: no-repeat;\ndisplay: inline-block;\nheight: 14px;\nmargin-right: 10px;\nbackground-position: -39px -78px;\nposition: relative;\ntop: 1px;\nleft: 4px;\nwidth: 16px;\n`\n\n\nexport const btn_search_user = styled.button`\n-webkit-font-smoothing: antialiased;\nwhite-space: nowrap;\ncursor: pointer;\nbackground: #fff;\n-webkit-appearance: none;\ntext-align: center;\nbox-sizing: border-box;\noutline: none;\nmargin: 0;\ntransition: .1s;\nfont-weight: 400;\nfloat: left;\ndisplay: inline;\nfont-family: Avenir,Helvetica,Arial,sans-serif;\nborder: 1px solid #dbe1e5;\nheight: 36px;\nline-height: 1;\npadding: 0 10px;\nborder-radius: 0;\ncolor: #656565;\nfont-size: 14px;\nmargin-left: -1px;\n&:hover{\n        border-color: #ff9934;\n        background-color: #fff5eb; \n        ${base_icon_user}{\n            background-image: url(${iconos});\n            background-repeat: no-repeat;\n            display: inline-block;\n            width: 13px;\n            height: 14px;\n            margin-right: 10px;\n            background-position: -78px -78px;\n            position: relative;\n            top: 2px;\n            left: 4px;\n        }\n    }\n`\n\n\nexport const header_option = styled.div`\n    font: 400 14px Arial;\n    font-family: Avenir,Helvetica,Arial,sans-serif;\n    -webkit-font-smoothing: antialiased;\n    color: #2c3e50;\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    right: 28px;\n    top: 19px;\n    width: 250px;\n    display: flex;\n    -webkit-box-pack: end;\n    justify-content: flex-end;\n    -webkit-box-align: end;\n    align-items: flex-end;\n`\n\nexport const go_back_icon = styled.i`\n    font: 400 14px Arial;\n    font-family: Avenir,Helvetica,Arial,sans-serif;\n    -webkit-font-smoothing: antialiased;\n    color: #20a8d8;\n    background-image: url(${iconos});\n    background-repeat: no-repeat;\n    height: 20px;\n    width: 20px;\n    display: inline-block;\n    cursor: pointer;\n    margin-left: 20px;\n    background-position: 0 -250px;\n    position: relative;\n    top: 0;\n    &:hover{\n        background-position: -38px -250px;\n    }\n`\n\nexport const badge_item = styled.div`\n    font: 400 14px Arial;\n    font-family: Avenir,Helvetica,Arial,sans-serif;\n    -webkit-font-smoothing: antialiased;\n    color: #2c3e50;\n    margin: 0;\n    padding: 0;\n    position: relative;\n    vertical-align: middle;\n    display: inline-block;\n`\n\nexport const message_icon = styled.i`\nfont: 400 14px Arial;\nfont-family: Avenir,Helvetica,Arial,sans-serif;\n-webkit-font-smoothing: antialiased;\ncolor: #2c3e50;\nbackground-image: url(${iconos});\nbackground-repeat: no-repeat;\nheight: 20px;\nwidth: 20px;\ndisplay: inline-block;\ncursor: pointer;\nmargin-left: 20px;\nbackground-position: 0 -220px;\nposition: relative;\ntop: 5px;\n&:hover{\n        background-position: -38px -220px;\n    }\n`\n\nexport const set_icon = styled.i`\n    font: 400 14px Arial;\n    font-family: Avenir,Helvetica,Arial,sans-serif;\n    -webkit-font-smoothing: antialiased;\n    color: #2c3e50;\n    background-image: url(${iconos});\n    background-repeat: no-repeat;\n    height: 20px;\n    width: 20px;\n    display: inline-block;\n    cursor: pointer;\n    margin-left: 20px;\n    background-position: 0 -291px;\n    position: relative;\n    top: -1px;\n    &:hover{\n        background-position: -38px -291px;\n    }\n`\nexport const user_lang = styled.div`\n    font: 400 14px Arial;\n    font-family: Avenir,Helvetica,Arial,sans-serif;\n    -webkit-font-smoothing: antialiased;\n    color: #2c3e50;\n    margin: 0;\n    padding: 0;\n    background-repeat: no-repeat;\n    background-position: 50%;\n    display: inline-block;\n    width: 24px;\n    height: 18px;\n    position: relative;\n    top: 1px;\n    margin-left: 10px;\n    background-size: cover;\n    cursor: pointer;\n    background-image: url(${es});\n`","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraLateralAdmin/BarraLateralAdmin.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/EstadisticasOp/InfoKilo.js",["883","884","885"],"import React, {useEffect, useState} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\nimport ReactExport from \"react-data-export\";\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css'\n\nconst InfoKilo = () => {\n    const [device, setDevice] = useState([]); //SE GUARDAN LOS DISPOSITIVOS\n    const [deviceId, setDeviceId] = useState(\"0\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [errorDevice, setErrorDevice] = useState(false);\n    const [reportData, setReportData] = useState([]); //SE GUARDAN LOS REPORTES\n    //INSTANCIAS PARA EL EXCEL\n    const ExcelFile = ReactExport.ExcelFile;\n    const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n    const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n    const [filename, setFilename] = useState(``);\n    \n    useEffect(() => {\n        DevicesAll()\n    }, [])\n\n    const DesdeForm = () =>{\n        //validar\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        if (dateFrom.trim() === '' || dateTo.trim() === '') {\n            alert(\"Se debe de indicar una Fecha de Inicio y de Final para generar el reporte\")\n            setError(true);\n            return;\n        }\n        if (dateFrom > dateTo) {\n            alert(\"La fecha de partida no puede ser mayor a la fecha de llegada\");\n            setError(true);\n            return;\n        }\n        setError(false);\n        setErrorDevice(false)\n        Devices();\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateYesterday = () => {\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        setErrorDevice(false)\n        let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date1Y = new Date(date)\n        let dateF1 = new Date(date1Y.getFullYear(), date1Y.getMonth(), date1Y.getDate())\n        dateF1 = dateF1.toISOString();\n\n        let date2 = new Date();\n        let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF2 = dateF2.toISOString()\n        \n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        console.log(dateF1, dateF2)\n        Devices();\n    }\n    const DateWeek = () => {\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        setErrorDevice(false)\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DateLastWeek = () => {\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        setErrorDevice(false)\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DateMonth = () => {\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        setErrorDevice(false)\n        let date = new Date();\n        let primerDia = new Date(date.getFullYear(), date.getMonth(), 1);\n        let dateF1 = new Date(primerDia.getFullYear(), primerDia.getMonth(), primerDia.getDate())\n        let diaActual = date;\n        let dateF2 = new Date(diaActual.getFullYear(), diaActual.getMonth(), diaActual.getDate())\n        setDateFrom(dateF1.toISOString());\n        setDateTo(dateF2.toISOString());\n        Devices();\n    }\n    const DateLastMonth = () => { //bien\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        setErrorDevice(false)\n        let dte = new Date();\n        var primerDia = new Date(dte.getFullYear(), dte.getMonth() -1, 1);\n        let dateF1 = new Date(primerDia.getFullYear(), primerDia.getMonth(), primerDia.getDate())\n        var ultimoDia = new Date(dte.getFullYear(), dte.getMonth(), 0);\n        let dateF2 = new Date(ultimoDia.getFullYear(), ultimoDia.getMonth(), ultimoDia.getDate())\n        setDateFrom(dateF1.toISOString());\n        //Fecha actual\n        setDateTo(dateF2.toISOString());\n        Devices();\n    }\n    const DevicesAll = async() =>{  //obtener dispositivos para el select\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            if (deviceId === \"all\") {\n                console.log(\"antes de consulta \"+ dateFrom)\n                console.log(\"antes de consulta \"+ dateTo)\n                //generar url\n                let url = \"https://www.protrack.ad105.net/api/reports/trips?\";\n                let groupId;\n                for(let i = 0; i < devAll.length; i++){\n                    url = url+\"deviceId=\"+devAll[i].id+\"&\";\n                    groupId= devAll[i].groupId;\n                }\n                url = url+\"groupId=\"+groupId+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo;\n                console.log(url)\n                const resultado2 = await fetch(`${url}`, requestOptions)\n                const deviceData2 = await resultado2.json();\n\n                console.log(deviceData2)\n\n                setReportData(deviceData2);\n                setFilename(`InformesobreKilometraje ${dateFrom} - ${dateTo}`);\n            }\n            else{\n                console.log(\"antes de consulta \"+ dateFrom)\n                console.log(\"antes de consulta \"+ dateTo)\n                //generar url\n                let url = \"https://www.protrack.ad105.net/api/reports/trips?\";\n                let groupId;\n                for(let i = 0; i < devAll.length; i++){\n                    groupId= devAll[i].groupId;\n                }\n                url = url+\"deviceId=\"+deviceId+\"&\";\n                url = url+\"groupId=\"+groupId+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo;\n                console.log(url)\n                const resultado2 = await fetch(`${url}`, requestOptions)\n                const deviceData2 = await resultado2.json();\n\n                console.log(deviceData2)\n               \n\n                setReportData(deviceData2);\n                setFilename(`InformesobreKilometraje ${dateFrom} - ${dateTo}`);\n            }\n    }\n    const TimeFormat = (duration) => {\n        let seconds = (duration / 1000).toFixed(1);\n        let minutes = (duration / (1000 * 60)).toFixed(1);\n        let hours = (duration / (1000 * 60 * 60)).toFixed(1);\n        let days = (duration / (1000 * 60 * 60 * 24)).toFixed(1);\n        if (seconds < 60) return seconds + \" Seg\";\n        else if (minutes < 60) return minutes + \" Min\";\n        else if (hours < 24) return hours + \" Hrs\";\n        else return days + \" Días\"\n    }\n    const Fecha = (fecha) => {\n        const fecha1 = new Date();\n        const date = new Date(fecha);\n        if (fecha1.getDate() === date.getDate()) {\n            return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n        }\n        return date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate();\n    }\n    //TODO: https://www.protrack.ad105.net/api/positions?deviceId=1&from=2021-08-06T21:48:56.000z&to=2021-08-06T21:48:56.000z\n    /* const data = [{ id: 1, objetivo: 'Vehiculo 1', kilometraje: '6.22', velocidad: '76', estadia: '2' }] */\n    const columns = [\n        {\n            name: '#',\n            selector: 'deviceId',\n            sortable: true,\n        },\n        {\n            name: 'Objetivo',\n            selector: 'deviceName',\n            sortable: true,\n        },\n        {\n            name: 'Fecha',\n            sortable: true,\n            cell: row => <span>{Fecha(row.endTime)}</span>\n        },\n        {\n            name: 'Kilometraje (Km)',\n            sortable: true,\n            cell: row => <span>{((row.averageSpeed)*1.852).toFixed(2)+' Km/h'}</span>\n        },\n        {\n            name: 'Exceso de Velocidad(Tiempos)',\n            sortable: true,\n            cell: row => <span>{((row.maxSpeed)*1.852).toFixed(2)+' Km/h'}</span>\n        },\n        {\n            name: 'Estadia(Tiempos)',\n            sortable: true,\n            cell: row => <span>{TimeFormat(row.duration)}</span>\n        },\n        {\n            name: 'Combustible (L)',\n            selector: 'spentFuel',\n            sortable: true,\n        },\n    ];\n    const csvEmptyData = [\n        {\n          foo: \"\"\n        }\n      ];\n    //Estructura para guardar en el excel\n    const data = [\n        {\n            xSteps: 3,\n            columns: [\n                { title: \"INFORMACIÓN SOBRE KILOMETRAJE\", width: {wpx: 300}, height: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:14}, border: {top: {style: \"none\", color: \"#fff\"}, bottom: {style: \"nono\", color: \"#fff\"}, left: {style: \"none\", color: \"#fff\"}, right: {style: \"none\", color: \"#fff\"}}}}\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"KILOMETRAJE\", width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"DESDE \"+dateFrom+\" A \"+dateTo, width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            ySteps: -1,\n            columns: [\n                { title: \"#\", width: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Objetivo\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Fecha\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Kilometraje (km)\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Exceso de Velocidad (Tiempos)\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Estadia (Tiempos)\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Combustible (L)\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n            ],\n            data: reportData.map((dev, index) => {\n                return [\n                { value: dev.deviceId, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.deviceName, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: Fecha(dev.endTime), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: ((dev.averageSpeed)*1.852).toFixed(2)+' Km/h', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: ((dev.maxSpeed)*1.852).toFixed(2)+' Km/h', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: TimeFormat(dev.duration), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.spentFuel, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                ];\n            }),\n        },\n    ];\n    //config pagination\n    const paginationComponentOptions = {\n        rowsPerPageText: 'Filas por página',\n        rangeSeparatorText: 'de',\n        selectAllRowsItem: true,\n        selectAllRowsItemText: 'Todos',\n    };\n    return (\n        <s.caja_dispositivo_panelGral style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Informe sobre Kilometraje\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral>Dispositivo <s.selecttGral onChange={(e) => setDeviceId(e.target.value)} className={errorDevice ? 'errorFormDate' :  ''}>\n                                <option value=\"0\" selected> -- Dispositivo -- </option>\n                                <option value=\"all\"> -- Todos -- </option>\n                            {devAll.map((item) => (\n                                <option value={item.id}>{item.name}</option>\n                            ))}\n                        </s.selecttGral></s.LabelGral>\n                        <s.LabelGral><s.CheckBox type=\"radio\" name=\"infoGral\"/>Detalles Diarios </s.LabelGral>\n                        <s.LabelGral><s.CheckBox type=\"radio\" name=\"infoGral\"/>Detalles del Periodo</s.LabelGral>\n                        <div>\n                            <div>\n                            <s.LabelGral>Fecha <s.inputGral type=\"date\" onChange={(e) =>DateFromValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"date\" onChange={(e) => DateToValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.InfoBoton onClick={DesdeForm}>Comprobar</s.InfoBoton>\n                        <s.ExportBoton>Exportar por Lotes</s.ExportBoton>\n                    </s.row1>\n                    <s.row2>\n                        <s.DivSpan>\n                            <s.SpanFechas onClick={DateYesterday}>Ayer </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateWeek}>Esta Semana </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastWeek}>La Semana Pasada</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateMonth}>Este Mes</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastMonth}>Mes Pasado</s.SpanFechas>\n                        </s.DivSpan>\n                    </s.row2>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={reportData}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                            pagination\n                            paginationComponentOptions={paginationComponentOptions}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <ExcelFile element={<s.ExcelButon>Exportar Excel</s.ExcelButon>} filename={filename}>\n                            <ExcelSheet dataSet={data} name={filename}>\n                                <ExcelColumn label=\"INFORMACIÓN GENERAL DE MOVIMIENTO\"/>\n                            </ExcelSheet>\n                        </ExcelFile>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </s.caja_dispositivo_panelGral>\n    )\n}\n\nexport default InfoKilo\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/EstadisticasOp/InfoGral.js",["886","887","888","889","890"],"import React, {useEffect, useState, useMemo} from 'react'\nimport * as s from '../../Reportes.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\nimport ReactExport from \"react-data-export\";\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst InfoGral = () => {\n    const [device, setDevice] = useState([]); //SE GUARDAN LOS DISPOSITIVOS\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [reportData, setReportData] = useState([]); //SE GUARDAN LOS REPORTES\n    //INSTANCIAS PARA EL EXCEL\n    const ExcelFile = ReactExport.ExcelFile;\n    const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n    const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n    const [filename, setFilename] = useState(``);\n    const [totalKm, setTotalKm] = useState(0);\n    const [maxKm, setMaxKm] = useState(0);\n    const [totalEstadia, setTotalEstadia] = useState(0);\n\n    useEffect(() => {\n        /* let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date1Y = new Date(date)\n        let dateF1 = new Date(date1Y.getFullYear(), date1Y.getMonth(), date1Y.getDate())\n        dateF1 = dateF1.toISOString();\n\n        let date2 = new Date();\n        let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF2 = dateF2.toISOString()\n        \n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        console.log(dateF1, dateF2) */\n    }, [])\n\n    const DesdeForm = () =>{\n        //validar\n        if (dateFrom.trim() === '' || dateTo.trim() === '') {\n            alert(\"Se debe de indicar una Fecha de Inicio y de Final para generar el reporte\")\n            setError(true);\n            return;\n        }\n        if (dateFrom > dateTo) {\n            alert(\"La fecha de partida no puede ser mayor a la fecha de llegada\");\n            setError(true);\n            return;\n        }\n        setError(false);\n        Devices();\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        //console.log(date.toISOString());\n    }\n    const DateYesterday = () => {\n        let date = new Date();\n        date = date.setDate(date.getDate() -1);\n        let date1Y = new Date(date)\n        let dateF1 = new Date(date1Y.getFullYear(), date1Y.getMonth(), date1Y.getDate())\n        dateF1 = dateF1.toISOString();\n\n        let date2 = new Date();\n        let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF2 = dateF2.toISOString()\n        \n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        console.log(dateF1, dateF2)\n        Devices();\n    }\n    const DateWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DateLastWeek = () => {\n        var today = new Date();\n        var day = today.getDay() || 7; // Get current day number, converting Sun. to 7\n        if( day !== 1 )  today.setHours(-24 * (day - 1));   // Set the hours to day number minus 1//   multiplied by negative 24\n        let date2 = new Date(today);\n        let dateF1 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n        dateF1 = dateF1.toISOString();\n        //Fecha actual\n        let dateToday = new Date();\n        let dateF2 = new Date(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate());\n        dateF2 = dateF2.toISOString();\n        //console.log(dateToday);\n        setDateFrom(dateF1);\n        setDateTo(dateF2);\n        Devices();\n    }\n    const DateMonth = () => {\n        let date = new Date();\n        let primerDia = new Date(date.getFullYear(), date.getMonth(), 1);\n        let dateF1 = new Date(primerDia.getFullYear(), primerDia.getMonth(), primerDia.getDate())\n        let diaActual = date;\n        let dateF2 = new Date(diaActual.getFullYear(), diaActual.getMonth(), diaActual.getDate())\n        setDateFrom(dateF1.toISOString());\n        setDateTo(dateF2.toISOString());\n        Devices();\n    }\n    const DateLastMonth = () => { //bien\n        let dte = new Date();\n        var primerDia = new Date(dte.getFullYear(), dte.getMonth() -1, 1);\n        let dateF1 = new Date(primerDia.getFullYear(), primerDia.getMonth(), primerDia.getDate())\n        var ultimoDia = new Date(dte.getFullYear(), dte.getMonth(), 0);\n        let dateF2 = new Date(ultimoDia.getFullYear(), ultimoDia.getMonth(), ultimoDia.getDate())\n        setDateFrom(dateF1.toISOString());\n        //Fecha actual\n        setDateTo(dateF2.toISOString());\n        Devices();\n    }\n    \n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            console.log(\"antes de consulta \"+ dateFrom)\n            console.log(\"antes de consulta \"+ dateTo)\n            const resultado = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const deviceData = await resultado.json();\n            //generar url\n            let url = \"https://www.protrack.ad105.net/api/reports/trips?\";\n            let groupId;\n            for(let i = 0; i < deviceData.length; i++){\n                url = url+\"deviceId=\"+deviceData[i].id+\"&\";\n                groupId= deviceData[i].groupId;\n            }\n            url = url+\"groupId=\"+groupId+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo;\n            console.log(url)\n            \n            const resultado2 = await fetch(`${url}`, requestOptions)\n            /* .then(response => response.json())\n            .catch(error => console.log('error', error)); */\n            const deviceData2 = await resultado2.json();\n\n            //var full = [] //JSONS MEZClados\n            //Object.keys(deviceData).forEach(k=>{full[k] = Object.assign(deviceData[k],deviceData2[k])});\n            console.log(deviceData2)\n            //leer kilometraje, exceso de velocidad y estadia\n            let kilometraje = 0;\n            let maxKm = 0;\n            let estadia = 0;\n\n            for(let i = 0; i < deviceData2.length; i++){\n                kilometraje = kilometraje + deviceData2[i].averageSpeed;\n                estadia = estadia + deviceData2[i].duration;\n                if (parseFloat((deviceData2[i].maxSpeed*1.852).toFixed(2)) > 80 ) {\n                    maxKm = maxKm+1;\n                }\n            }\n            kilometraje = (kilometraje*1.852).toFixed(2)+' Km/h';\n            console.log(kilometraje)\n            setTotalKm(kilometraje);\n            setTotalEstadia(estadia);\n            setMaxKm(maxKm);\n\n            setDevice(deviceData);\n            setReportData(deviceData2);\n            setFilename(`Informacióngeneraldemovimiento ${dateFrom} - ${dateTo}`);\n    }\n    const FechaActual = () =>{\n        const fecha = new Date(\"DD-MM-YYYTHH:mm\");\n        const fch = fecha.getDate();\n        return fch;\n    }\n    const TimeFormat = (duration) => {\n        let seconds = (duration / 1000).toFixed(1);\n        let minutes = (duration / (1000 * 60)).toFixed(1);\n        let hours = (duration / (1000 * 60 * 60)).toFixed(1);\n        let days = (duration / (1000 * 60 * 60 * 24)).toFixed(1);\n        if (seconds < 60) return seconds + \" Seg\";\n        else if (minutes < 60) return minutes + \" Min\";\n        else if (hours < 24) return hours + \" Hrs\";\n        else return days + \" Días\"\n    }\n    //TODO: https://www.protrack.ad105.net/api/positions?from=2021-08-06T21:48:56.000z&to=2021-08-06T21:48:56.000z\n    const Fecha = (fecha) => {\n        const fecha1 = new Date();\n        const date = new Date(fecha);\n        if (fecha1.getDate() === date.getDate()) {\n            return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n        }\n        return date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate();\n    }\n    //const devi = [{ deviceId: 1, name: 'Vehiculo 1', speed: '6.22', estadia: '76'}]\n    const columns = [\n        {\n            name: '#',\n            selector: 'deviceId',\n            sortable: true,\n        },\n        {\n            name: 'Objetivo',\n            selector: 'deviceName',\n            sortable: true,\n        },\n        {\n            name: 'Kilometraje (Km)',\n            sortable: true,\n            cell: row => <span>{((row.averageSpeed)*1.852).toFixed(2)+' Km/h'}</span>\n        },\n        {\n            name: 'Exceso de Velocidad(Tiempos)',\n            sortable: true,\n            cell: row => <span>{((row.maxSpeed)*1.852).toFixed(2)+' Km/h'}</span>\n        },\n        {\n            name: 'Estadia(Tiempos)',\n            sortable: true,\n            cell: row => <span>{TimeFormat(row.duration)}</span>\n        },\n    ];\n    /* const actionsMemo = useMemo(() => <Export onExport={() => downloadCSV(device)} />, []); */\n    const csvEmptyData = [\n        {\n          foo: \"\"\n        }\n      ];\n    //Estructura para guardar en el excel\n    const data = [\n        {\n            xSteps: 2,\n            columns: [\n                { title: \"INFORMACIÓN DE RECORRIDO\", width: {wpx: 300}, height: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:14}, border: {top: {style: \"none\", color: \"#fff\"}, bottom: {style: \"nono\", color: \"#fff\"}, left: {style: \"none\", color: \"#fff\"}, right: {style: \"none\", color: \"#fff\"}}}}\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 2,\n            ySteps: -1,\n            columns: [\n                { title: \"RECORRIDO\", width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 2,\n            ySteps: -1,\n            columns: [\n                { title: \"DESDE \"+dateFrom+\" A \"+dateTo, width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            ySteps: -1,\n            columns: [\n                { title: \"#\", width: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Objetivo\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Kilometraje (km)\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Exceso de Velocidad (Km/h)\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Estadia\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n            ],\n            data: reportData.map((dev, index) => {\n                return [\n                { value: dev.deviceId, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.deviceName, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: ((dev.averageSpeed)*1.852).toFixed(2)+' Km/h', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: ((dev.maxSpeed)*1.852).toFixed(2)+' Km/h', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: TimeFormat(dev.duration), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                ];\n            }),\n        },\n    ];\n    //config pagination\n    const paginationComponentOptions = {\n        rowsPerPageText: 'Filas por página',\n        rangeSeparatorText: 'de',\n        selectAllRowsItem: true,\n        selectAllRowsItemText: 'Todos',\n    };\n    return (\n        <div className=\"menuContent\" style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Información General de Movimiento\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral><s.CheckBox type=\"radio\" name=\"infoGral\"/>Detalles Diarios </s.LabelGral>\n                        <s.LabelGral><s.CheckBox type=\"radio\" name=\"infoGral\"/>Detalles del Periodo</s.LabelGral>\n                        <div>\n                            <div>\n                            <s.LabelGral>Fecha <s.inputGral type=\"date\" onChange={(e) =>DateFromValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            <s.LabelGral>A <s.inputGral type=\"date\" onChange={(e) => DateToValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/></s.LabelGral>\n                            </div>\n                            <s.SmallGral>El rango de tiempo máximo es de 30 días. Por favor, para más informes.<s.AGral> Programar Ahora</s.AGral></s.SmallGral>\n                        </div>\n                        <s.InfoBoton onClick={DesdeForm}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.row2>\n                        <s.DivSpan>\n                            <s.SpanFechas onClick={DateYesterday}>Ayer </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateWeek}>Esta Semana </s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastWeek}>La Semana Pasada</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateMonth}>Este Mes</s.SpanFechas>|\n                            <s.SpanFechas onClick={DateLastMonth}>Mes Pasado</s.SpanFechas>\n                        </s.DivSpan>\n                    </s.row2>\n                    <s.divCards>\n                        <s.divCard>\n                            <s.LabelCard>Cantidad de Dispositivos:</s.LabelCard>\n                            <s.LabelCard2>{reportData.length}</s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Total Kilometraje:</s.LabelCard>\n                            <s.LabelCard2>{totalKm}</s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Total Exceso de Velocidad:</s.LabelCard>\n                            <s.LabelCard2>{maxKm}</s.LabelCard2>\n                        </s.divCard>\n                        <s.divCard>\n                            <s.LabelCard>Total Estadia:</s.LabelCard>\n                            <s.LabelCard2>{TimeFormat(totalEstadia)}</s.LabelCard2>\n                        </s.divCard>\n                    </s.divCards>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={reportData}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                            pagination\n                            paginationComponentOptions={paginationComponentOptions}\n                        />\n                    </s.divTable>\n                    <s.divButonsGral>\n                        <ExcelFile element={<s.ExcelButon>Exportar Excel</s.ExcelButon>} filename={filename}>\n                            <ExcelSheet dataSet={data} name={filename}>\n                                <ExcelColumn label=\"INFORMACIÓN GENERAL DE MOVIMIENTO\"/>\n                            </ExcelSheet>\n                        </ExcelFile>\n                        <s.PrintButon>Imprimir</s.PrintButon>\n                    </s.divButonsGral>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </div>\n    )\n}\n\nexport default InfoGral;","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/GeoCercasModal.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/GeneReportes/Tarea.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Reportes/Components/GeneReportes/Buscar.js",["891","892","893","894"],"import React, { useEffect, useState } from 'react'\nimport * as s from '../../Reportes.styles';\n\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { BsPencil, BsTrash } from \"react-icons/bs\";\nimport { FiFileText } from \"react-icons/fi\";\n\n\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css';\n\nconst Buscar = () => {\n    const [device, setDevice] = useState([]); //SE GUARDAN LOS JSON MEZCALDOS\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const Datos = () => {\n        Devices()\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            if (dateFrom === \"\" && dateTo === \"\") {\n                const resultado = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n                const resultado2 = await fetch(`https://www.protrack.ad105.net/api/positions`, requestOptions)\n                /* .then(response => response.json())\n                .catch(error => console.log('error', error)); */\n                const deviceData = await resultado.json();\n                const deviceData2 = await resultado2.json();\n\n                var full = [] //JSONS MEZClados\n                Object.keys(deviceData).forEach(k=>{full[k] = Object.assign(deviceData[k],deviceData2[k])});\n\n                console.log('full data')\n                console.log(full);\n                setDevice(full);\n            }\n            else{\n                const resultado = await fetch(`https://www.protrack.ad105.net/api/devices/`, requestOptions)\n                const resultado2 = await fetch(`https://www.protrack.ad105.net/api/positions?from=${dateFrom}:00.000z&to=${dateTo}:00.000z`, requestOptions)\n                /* .then(response => response.json())\n                .catch(error => console.log('error', error)); */\n                const deviceData = await resultado.json();\n                const deviceData2 = await resultado2.json();\n\n                var full = [] //JSONS MEZClados\n                Object.keys(deviceData).forEach(k=>{full[k] = Object.assign(deviceData[k],deviceData2[k])});\n\n                console.log('full data')\n                console.log(full);\n                setDevice(full);\n            }\n    }\n    const data = [{ id: 1, objetivo: 'Vehiculo 1', kilometraje: '6.22', velocidad: '76', estadia: '2' }]\n    const columns = [\n        {\n            name: '#',\n            selector: 'deviceId',\n            sortable: true,\n        },\n        {\n            name: 'Periodo',\n            selector: 'periodo',\n            sortable: true,\n        },\n        {\n            name: 'Nombre',\n            selector: 'name',\n            sortable: true,\n        },\n        {\n            name: 'Tipo de Reporte',\n            selector: 'tipoReporte',\n            sortable: true,\n        },\n        {\n            name: 'Generar Tiempo',\n            selector: 'gentiempo',\n            sortable: true,\n        },\n        {\n            name: 'Cantidad de Dispositivos',\n            selector: 'dispositivos',\n            sortable: true,\n        },\n        {\n            name: 'Correo Electrónico',\n            selector: 'email',\n            sortable: true,\n        },\n        {\n            name: 'Operación',\n            cell:(row) =>\n                        <s.tableButtons>\n                            <s.tabButton id={row.ID}><FiFileText /></s.tabButton>\n                            <s.tabButton id={row.ID}><BsPencil /></s.tabButton>\n                            <s.tabButton id={row.ID}><BsTrash /></s.tabButton>\n                        </s.tableButtons> ,\n            ignoreRowClick: true,\n            allowOverflow: true,\n            button: true,\n        },\n    ];\n    return (\n        <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral>Tipo de Reporte <s.selecttGral></s.selecttGral></s.LabelGral>\n                        <s.LabelGral>Periodo <s.inputGral type=\"datetime-local\" onChange={(e) => setDateFrom(e.target.value)}/></s.LabelGral>\n                        <s.LabelGral>A <s.inputGral type=\"datetime-local\" onChange={(e) => setDateTo(e.target.value)}/></s.LabelGral>\n                        <s.InfoBoton onClick={() => Datos()}>Comprobar</s.InfoBoton>\n                    </s.row1>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={device}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                        />\n                    </s.divTable>\n        </s.contentReportesDiv>\n    )\n}\n\nexport default Buscar\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/cards/cards.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Mensajes/Mensajes.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/GeoCercas.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ProveedorServicios/ProveedorServicios.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ManualUsuario/ManualUsuario.styles.js",["895"],"import styled from '@emotion/styled/macro';\nimport header from '../../assets/images/dialog-header.cc6302f.png';\n\nexport const BodyContent = styled.div`\n    margin-top: 20px;\n    padding: 10px 20px;\n    height: 150px;\n\n`;\nexport const Label = styled.label`\n    font-size: 16px;\n    margin: 10px 0px 0px;\n    margin-top: 20px;\n    color: #2cabe3;\n    &:hover{\n        color: #e98d08;\n    }\n`;\nexport const A = styled.a`\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 14px;\n    color: #2cabe3;\n    padding: 3px;\n    text-decoration: none;\n    &:hover{\n        color: #e98d08;\n    }\n`;\nexport const Hr = styled.hr`\n    border-top: none;\n    border-bottom: 1px solid #e8e8e8;\n`;\n\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/MainView/MainView.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ContenidoCuenta/ContenidoCuenta.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ModificarPassword/ModificarPassword.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/RegistroSesion/RegistroSesion.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Preferencias/Preferencias.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ApiGoogle/ApiGoogle.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Notificaciones/Notificaciones.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/cards/cardsDash.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/Mapa.js",["896","897","898","899","900","901","902","903","904","905","906"],"import React, { useEffect, useState, useRef, useContext, useMemo, useCallback } from 'react'\r\nimport {MapContainer, Marker, Popup, TileLayer, ZoomControl, LayersControl, useMap, useMapEvents, Circle, FeatureGroup, Tooltip} from 'react-leaflet';\r\nimport { EditControl } from 'react-leaflet-draw';\r\nimport  L from 'leaflet';\r\nimport \"leaflet-rotatedmarker\";\r\nimport Modal from 'react-modal';\r\nimport EsriLeafletGeoSearch from 'react-esri-leaflet/plugins/EsriLeafletGeoSearch';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-draw/dist/leaflet.draw.css';\r\n/* import './leaflet.css'; */\r\n/* import './leaflet.draw.css'; */\r\nimport '../../styles/mapa.css';\r\n\r\nimport * as s from './Mapa.styles';\r\nimport { MdReplay } from \"react-icons/md\";\r\nimport { TiLocationArrowOutline } from \"react-icons/ti\";\r\nimport { BsTerminal, BsGearFill } from \"react-icons/bs\";\r\nimport { GiWoodenFence } from \"react-icons/gi\";\r\nimport { FaShareAlt } from \"react-icons/fa\";\r\nimport { BiMapPin } from \"react-icons/bi\";\r\nimport { ImFileText2 } from \"react-icons/im\";\r\nimport * as ic from 'react-icons/all';\r\n\r\nimport icon from 'leaflet/dist/images/marker-icon.png';\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\r\n\r\nimport './PopUp.css';\r\nimport '../../styles/modals.css';\r\n\r\n/* MODALS */\r\nimport Comando from '../Comando/Comando';\r\nimport Compartir from '../Compartir/Compartir';\r\nimport ConfigDevice from '../ConfigDevice/ConfigDevice';\r\nimport ConfigInOut from '../ConfigInOut/ConfigInOut';\r\n\r\nimport * as icmap from './Marcadores/MapIcon';\r\n\r\n/* CONTEXT */\r\nimport {MenContext} from '../../Context/MenuContext';\r\n\r\nconst Link = require(\"react-router-dom\").Link;\r\n\r\nlet DefaultIcon = L.icon({\r\n    iconUrl: icon,\r\n    shadowUrl: iconShadow\r\n});\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\nModal.setAppElement('#root');\r\n\r\n\r\nconst Mapa = (props) => {\r\n    const { drawClick, setDrawClick, colorValue, setLatFenceCircle, setLngFenceCirlce, setBounds, setRadiusFence, distanceLine, areaLine } = useContext(MenContext);\r\n    const center = {\r\n        lat: 19.432680,\r\n        lng: -99.134209,\r\n    };\r\n    const [mapPos, setMapPos] = useState();\r\n    const [deviceInfo, setDeviceInfo] = useState([])\r\n    const [marker, setMarker] = useState([])\r\n    const [typeFence, setTypeFence] = useState(\"\");\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            Marcador()\r\n        }, 10000);\r\n        return () => clearInterval(interval);\r\n    }, [])\r\n    useEffect(() => {\r\n\r\n        //PINTAR GEOCERCA\r\n        console.log(drawClick);\r\n\r\n    }, [drawClick])\r\n\r\n    function SetZoom(){\r\n        const mapInstance = useMap()\r\n        React.useEffect(() => {\r\n            const zoom = window.zoom;\r\n            mapInstance.setZoom(zoom)\r\n        }, [])\r\n        return null\r\n    }\r\n\r\n    const Marcador = async() =>{\r\n        var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            myHeaders.append(\"Accept\", \"*/*\");\r\n\r\n            var requestOptions = {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n                headers: myHeaders,\r\n                redirect: 'follow'\r\n            };\r\n            const responseDevice = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\r\n            const resultado = await fetch(\"https://www.protrack.ad105.net/api/positions\", requestOptions)\r\n            /* .then(response => response.json())\r\n            .catch(error => console.log('error', error)); */\r\n            const deviceData = await responseDevice.json();\r\n            const markerData = await resultado.json();\r\n            /* console.log(markerData)\r\n            console.log(deviceData); */\r\n            setDeviceInfo(deviceData)\r\n            setMarker(markerData);\r\n            /* console.log(marker) */\r\n            /* console.log(deviceInfo) */\r\n        \r\n    }\r\n    const Fecha = (fecha) => {\r\n        const fecha1 = new Date();\r\n        const date = new Date(fecha);\r\n        if (fecha1.getDate() === date.getDate()) {\r\n            return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\r\n        }\r\n        return date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate();\r\n    }\r\n\r\n  /* State Modal */\r\n    const [modalComando, setModalComando] = useState(false);\r\n    const [modalShare, setModalShare] = useState(false);\r\n    const [modalDetalle, setModalDetalle] = useState(false);\r\n    const [modalConfiguraciones, setModalConfiguraciones] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [data2, setData2] = useState({});\r\n    /* Funcion modals */\r\n    const ActiveModal = (modAct, objeto, objeto2) => {\r\n        console.log(modAct);\r\n        if (modAct === 1) {setModalComando(true)}\r\n        if (modAct === 2) {setModalShare(true)}\r\n        if (modAct === 3) {setModalDetalle(true)}\r\n        if (modAct === 4) {setModalConfiguraciones(true)}\r\n        setData(objeto);\r\n        setData2(objeto2);\r\n    }\r\n    /* GeoFence States */\r\n    const [fenceLat, setFenceLat] = useState(0);\r\n    const [fenceLon, setFenceLon] = useState(0);\r\n    const [fenceSize, setFenceSize] = useState(0);\r\n    const fillBlueOptions = { fillColor: 'blue' }\r\n    \r\n/*     const fechaiso = (date) => {\r\n        var fecha = new Date(date);\r\n        return fecha.toISOString();\r\n    } */\r\n\r\n    const GeoCerca = async(id, item, lat, lon, size) =>{\r\n        /* console.log(id, lat, lon, size) */\r\n        setFenceLat(lat);\r\n        setFenceLon(lon);\r\n        setFenceSize(size);\r\n        /* State de la Geocerca */\r\n        var geofenceID = 0;\r\n        /* Crear Geocerca */\r\n\r\n        const dataGeofence = {\r\n            \"id\": 0,\r\n            \"name\": `${item.name}`,\r\n            \"description\": `Geocerca - ${item.name}`,\r\n            \"area\": `CIRCLE(${lat} ${lon}, ${size})`,\r\n            \"calendarId\": 0,\r\n            \"attributes\": {\r\n                \"shape\": \"circle\",\r\n                \"color\": \"#3699cf\",\r\n            }\r\n        }\r\n        \r\n        const response = await fetch(\"https://www.protrack.ad105.net/api/geofences/\", \r\n                                    {\r\n                                        credentials: 'include',\r\n                                        method: 'POST',\r\n                                        headers:{\r\n                                        'Content-Type': 'application/json',\r\n                                    },\r\n                                    body: JSON.stringify(dataGeofence)\r\n                                    });\r\n        if(response.ok) {\r\n            const geofence = await response.json();\r\n            console.log(geofence.id);\r\n            geofenceID = geofence.id;\r\n        }else{\r\n            alert('No OK');\r\n        }\r\n        /* Conslutar geofence */\r\n        /* Actualizar Device */\r\n        console.log(`GEOFENCE ID ${geofenceID}`)\r\n        const dataDevice = {\r\n            \"deviceId\": item.id,\r\n            \"geofenceId\": geofenceID,\r\n        }\r\n        /* console.log(dataDevice) */\r\n        const responseDevice = await fetch(`https://www.protrack.ad105.net/api/permissions`,\r\n                                    {\r\n                                        credentials: 'include',\r\n                                        method: 'POST',\r\n                                        headers:{\r\n                                        'Content-Type': 'application/json',\r\n                                        },\r\n                                    body: JSON.stringify(dataDevice)\r\n                                    });\r\n        if(responseDevice.ok) {\r\n            console.log('hecho');\r\n        }else{\r\n            alert('NO OK')\r\n        }\r\n    }\r\n    const _created = (e) => {\r\n        if (drawClick.shape === 'circle') {\r\n            console.log(e.layer)\r\n            setLatFenceCircle(e.layer._latlng.lat)\r\n            setLngFenceCirlce(e.layer._latlng.lng)\r\n            setRadiusFence(parseInt(e.layer._mRadius))\r\n        }\r\n        if (drawClick.shape === 'polygon') {\r\n            console.log(e.layer._latlngs)\r\n            setBounds(e.layer._latlngs);\r\n        }\r\n    }\r\n    return (\r\n\r\n    <MapContainer center={[19.432680, -99.134209]} zoom={5} zoomControl={false} minZoom={0} maxZoom={21} scrollWheelZoom={true} onChange={(e) => setMapPos(e.target)}>\r\n        {drawClick.shape === 'circle' ?\r\n            <FeatureGroup>\r\n                <EditControl \r\n                    position=\"topright\" \r\n                    onCreated={drawClick.shape === 'circle' ? _created : null}\r\n                    draw={{ \r\n                        circle: {\r\n                            shapeOptions: {\r\n                                color: colorValue,\r\n                            }\r\n                        },\r\n                        polygon: false,\r\n                        rectangle: false,\r\n                        circlemarker: false,\r\n                        marker: false,\r\n                        polyline: false,\r\n                     }}\r\n                     edit={{ edit: false}}\r\n                />\r\n            </FeatureGroup>\r\n         : <></>}\r\n         { drawClick.shape === 'polygon' ?\r\n            <FeatureGroup>\r\n            <EditControl \r\n                    position=\"topright\" \r\n                    onCreated={drawClick.shape === 'polygon' ? _created : null}\r\n                    draw={{ \r\n                        polygon: {\r\n                            shapeOptions: {\r\n                                color: colorValue,\r\n                            }\r\n                        },\r\n                        rectangle: false,\r\n                        circlemarker: false,\r\n                        circle: false,\r\n                        marker: false,\r\n                        polyline: false,\r\n                     }}\r\n                     edit={{ edit: false}}\r\n                />\r\n            </FeatureGroup>\r\n        : <></>}\r\n        {distanceLine ?\r\n            <FeatureGroup>\r\n                <EditControl \r\n                    position=\"topright\" \r\n                    onCreated={drawClick.shape === 'circle' ? _created : null}\r\n                    draw={{ \r\n                        circle: {\r\n                            shapeOptions: {\r\n                                color: colorValue,\r\n                            }\r\n                        },\r\n                        polygon: false,\r\n                        rectangle: false,\r\n                        circlemarker: false,\r\n                        marker: false,\r\n                        polyline: false,\r\n                     }}\r\n                     edit={{ edit: false}}\r\n                />\r\n            </FeatureGroup>\r\n         : <></>}\r\n         {areaLine ?\r\n            <FeatureGroup>\r\n                <EditControl \r\n                    position=\"topright\" \r\n                    onCreated={drawClick.shape === 'circle' ? _created : null}\r\n                    draw={{ \r\n                        circle: {\r\n                            shapeOptions: {\r\n                                color: colorValue,\r\n                            }\r\n                        },\r\n                        polygon: false,\r\n                        rectangle: false,\r\n                        circlemarker: false,\r\n                        marker: false,\r\n                        polyline: false,\r\n                     }}\r\n                     edit={{ edit: false}}\r\n                />\r\n            </FeatureGroup>\r\n         : <></>}\r\n        <Circle center={[fenceLat, fenceLon]} pathOptions={fillBlueOptions} radius={fenceSize} />\r\n        <LayersControl position=\"bottomright\">\r\n        <SetZoom />\r\n            <LayersControl.BaseLayer checked name=\"Google\">\r\n            <TileLayer\r\n            url=\"http://www.google.cn/maps/vt?lyrs=m@189,traffic&gl=cn&x={x}&y={y}&z={z}\"\r\n            attribution=\"Datos del mapa &copy; 2020 INEGI México\"/>\r\n            </LayersControl.BaseLayer>\r\n\r\n            <LayersControl.BaseLayer checked={window.valorCapaGh} name=\"Híbrido\">\r\n            <TileLayer\r\n            url=\"http://www.google.com/maps/vt?lyrs=s@189,traffic&gl=cn&x={x}&y={y}&z={z}\"\r\n            attribution=\"Datos del mapa &copy; 2020 INEGI México\"/>\r\n            </LayersControl.BaseLayer>\r\n\r\n            <LayersControl.BaseLayer checked={window.valorCapaGt} name=\"Terreno\">\r\n            <TileLayer\r\n            url=\"http://www.google.cn/maps/vt?lyrs=p@189,traffic&gl=cn&x={x}&y={y}&z={z}\"\r\n            attribution=\"Datos del mapa &copy; 2020 INEGI México\"/>\r\n            </LayersControl.BaseLayer>\r\n\r\n            <LayersControl.BaseLayer checked={window.valorCapaOsm} name=\"Open Street Maps\">\r\n            <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contribuidores'/>\r\n            </LayersControl.BaseLayer>\r\n\r\n            <LayersControl.BaseLayer checked={window.valorCapaOsmBn} name=\"Open Street Maps Blanco y Negro\">\r\n            <TileLayer\r\n            url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contribuidores'/>\r\n            </LayersControl.BaseLayer>\r\n\r\n            <LayersControl.BaseLayer checked={window.valorCapaBing}  name=\"Bing\">\r\n            <TileLayer\r\n            url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contribuidores'/>\r\n            </LayersControl.BaseLayer>\r\n        </LayersControl>\r\n        {\r\n            deviceInfo.map(item => (\r\n                marker.map(item2 =>(\r\n                    item.id === item2.deviceId ?\r\n                        <Marker key={item2.id} position={[item2.latitude, item2.longitude]} icon={ item.status === 'online' ? icmap.gray_24 : icmap.white_21 } rotationAngle={item2.course}>\r\n                            <Popup style={{ color: \"#e4e4e4\" }}>\r\n                                <s.PopUpContainer>\r\n                                <s.PopUpCon1>\r\n                                    <s.PopoUpDeviceName>{item.name}{item.model !== \"\" ? '(' + item.model + \")\" : null }</s.PopoUpDeviceName>\r\n                                    <s.PopUpDeviceData>Estado: {item.status === \"online\" ? 'Estatico ' : 'Fuera de Linea '}({Fecha(item.lastUpdate)})</s.PopUpDeviceData>\r\n                                    {\r\n                                        item2.deviceTime ?\r\n                                            <s.PopUpDeviceData>Tiempo de Posición: {Fecha(item2.deviceTime)}</s.PopUpDeviceData>\r\n                                        : null\r\n                                    }\r\n                                    {\r\n                                        item2.serverTime ? \r\n                                            <s.PopUpDeviceData>Tiempo de Servidor: {Fecha(item2.serverTime)}</s.PopUpDeviceData>\r\n                                        : null\r\n                                    }\r\n                                    {\r\n                                        item2.attributes.ignition ? \r\n                                            <s.PopUpDeviceData>Motor: {item2.attributes.ignition === true ? 'Encendido ' : 'Apagado '}({item2.fixTime})</s.PopUpDeviceData>\r\n                                        : null\r\n                                    }\r\n                                    <s.PopUpDeviceData>Velocidad: {((item2.speed)*1.852).toFixed(2)+' Km/h'}</s.PopUpDeviceData>\r\n                                    <s.PopUpDeviceData>IMEI: {(item.uniqueId).replace((item.uniqueId).substr(2,11), '***********')}</s.PopUpDeviceData>\r\n                                    <s.PopUpDeviceData>Coordinar: <s.PopUpDeviceLink href={`http://map.google.com/maps?q=${item2.latitude},${item2.longitude}`} target=\"_blank\">{item2.latitude},{item2.longitude}</s.PopUpDeviceLink></s.PopUpDeviceData>\r\n                                </s.PopUpCon1>\r\n                                <s.PopUpCon2>\r\n                                    <s.PopUpDevicesOptionLink><Link to={{pathname: '/recorrido', state: item2, target:'_blank', rel:'noopener noreferrer'}}><MdReplay/></Link></s.PopUpDevicesOptionLink>\r\n                                    <s.PopUpDevicesOptionLink className=\"arrow-popup\"><TiLocationArrowOutline/></s.PopUpDevicesOptionLink>\r\n                                    <s.PopUpDevicesOption onClick={() => ActiveModal(1, item, item2)}><BsTerminal className=\"iconoPopUp\"/></s.PopUpDevicesOption>\r\n                                    <s.PopUpDevicesOption className=\"fenceContent\">\r\n                                        <GiWoodenFence className=\"iconoPopUp\"/>\r\n                                        <s.DivDropDown className=\"dropdownContent\">\r\n                                            <s.FenceList>\r\n                                                <s.FenceObj onClick={() => GeoCerca(item2.deviceId, item, item2.latitude, item2.longitude, 300)}>300m</s.FenceObj>\r\n                                                <s.FenceObj onClick={() => GeoCerca(item2.deviceId, item, item2.latitude, item2.longitude, 500)}>500m</s.FenceObj>\r\n                                                <s.FenceObj onClick={() => GeoCerca(item2.deviceId, item, item2.latitude, item2.longitude, 1000)}>1000m</s.FenceObj>\r\n                                            </s.FenceList>\r\n                                        </s.DivDropDown>\r\n                                    </s.PopUpDevicesOption>\r\n                                    <s.PopUpDevicesOption onClick={() => ActiveModal(2, item, item2)}><FaShareAlt className=\"iconoPopUp\"/></s.PopUpDevicesOption>\r\n                                    <s.PopUpDevicesOptionLink className=\"arrow-popup\" href={`https://www.google.com/maps?q&layer=c&cbll=${item2.latitude},${item2.longitude}`} target=\"_blank\"><BiMapPin/></s.PopUpDevicesOptionLink>\r\n                                    <s.PopUpDevicesOption onClick={() => ActiveModal(3, item, item2)}><ImFileText2 className=\"iconoPopUp\"/></s.PopUpDevicesOption>\r\n                                    <s.PopUpDevicesOption className=\"inout-popup iconoPopUp\" onClick={() => ActiveModal(4, item, item2)} >I/O</s.PopUpDevicesOption>\r\n                                </s.PopUpCon2>\r\n                                </s.PopUpContainer>\r\n                            </Popup>\r\n                            <Tooltip permanent direction=\"right\">{item.name}</Tooltip>\r\n                        </Marker>\r\n                    :\r\n                    null\r\n                ))\r\n            ))\r\n        }\r\n        <EsriLeafletGeoSearch useMapBound={false} position=\"bottomright\" placeholder=\"Ingresa tu búsqueda\"/>\r\n        {/* MODALS */}\r\n        {/* MODAL COMANDO */}\r\n        <Modal \r\n                isOpen={modalComando}\r\n                onRequestClose={() => setModalComando(false)}\r\n                style={{\r\n                    overlay: {\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        backgroundColor: 'rgba(15, 15, 15, 0.507)'\r\n                    },\r\n                    content: {\r\n                        width: 716,\r\n                        height: 436\r\n                    }\r\n                }}\r\n            >\r\n                <s.HeaderModal>\r\n                    <s.TituloModal><BsTerminal/> Comando</s.TituloModal>\r\n                    <s.CerrarModal onClick={() => setModalComando(false)}>+</s.CerrarModal>\r\n                </s.HeaderModal>\r\n                <Comando \r\n                    datos={data}\r\n                />\r\n            </Modal>\r\n            {/* MODAL SHARE */}\r\n            <Modal \r\n                isOpen={modalShare}\r\n                onRequestClose={() => setModalShare(false)}\r\n                style={{\r\n                    overlay: {\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        backgroundColor: 'rgba(15, 15, 15, 0.507)'\r\n                    },\r\n                    content: {\r\n                        width: 350,\r\n                        height: 466\r\n                    }\r\n                }}\r\n            >\r\n                <s.HeaderModal>\r\n                    <s.TituloModal><FaShareAlt/> Compartir Link</s.TituloModal>\r\n                    <s.CerrarModal onClick={() => setModalShare(false)}>+</s.CerrarModal>\r\n                </s.HeaderModal>\r\n                <Compartir/>\r\n                <s.DivBotones>\r\n                    <s.BotonCancelar onClick={() => setModalShare(false)}>Cancelar</s.BotonCancelar>\r\n                    <s.BotonGuardar>Confirmar</s.BotonGuardar>\r\n                </s.DivBotones>\r\n            </Modal>\r\n            {/* MODAL DETALLES */}\r\n            <Modal \r\n                isOpen={modalDetalle}\r\n                onRequestClose={() => setModalDetalle(false)}\r\n                style={{\r\n                    overlay: {\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        backgroundColor: 'rgba(15, 15, 15, 0.507)'\r\n                    },\r\n                    content: {\r\n                        width: 700,\r\n                        height: 630\r\n                    }\r\n                }}\r\n            >\r\n                <s.HeaderModal>\r\n                    <s.TituloModal><ic.FaCar /> Configuración del dispositivo</s.TituloModal>\r\n                    <s.CerrarModal onClick={() => setModalDetalle(false)}>+</s.CerrarModal>\r\n                </s.HeaderModal>\r\n                <ConfigDevice \r\n                    datos={data}\r\n                    datos2={data2}\r\n                />\r\n                <s.DivBotones>\r\n                    <s.BotonCancelar onClick={() => setModalDetalle(false)}>Cancelar</s.BotonCancelar>\r\n                    <s.BotonGuardar>Guardar</s.BotonGuardar>\r\n                </s.DivBotones>\r\n            </Modal>\r\n            {/* MODAL I/O */}\r\n            <Modal \r\n                isOpen={modalConfiguraciones}\r\n                onRequestClose={() => setModalConfiguraciones(false)}\r\n                style={{\r\n                    overlay: {\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        backgroundColor: 'rgba(15, 15, 15, 0.507)'\r\n                    },\r\n                    content: {\r\n                        width: 550,\r\n                        height: 385\r\n                    }\r\n                }}\r\n            >\r\n                <s.HeaderModal>\r\n                    <s.TituloModal><BsGearFill /> Configuración de E/S</s.TituloModal>\r\n                    <s.CerrarModal onClick={() => setModalConfiguraciones(false)}>+</s.CerrarModal>\r\n                </s.HeaderModal>\r\n                <ConfigInOut/>\r\n                <s.DivBotones>\r\n                    <s.BotonCancelar onClick={() => setModalConfiguraciones(false)}>Cancelar</s.BotonCancelar>\r\n                    <s.BotonGuardar>Guardar</s.BotonGuardar>\r\n                </s.DivBotones>\r\n            </Modal>\r\n    </MapContainer>\r\n  );\r\n}\r\n\r\nexport default Mapa;\r\n\r\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/BarraInferior/GeoCercas.js",["907","908","909","910"],"import React, { useEffect, useState } from 'react'\nimport * as s from './GeoCercas.styles'\nimport { BsBellFill, BsPlus, BsGearFill, BsPencil, BsTrash } from \"react-icons/bs\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { SiCircle } from \"react-icons/si\";\nimport { FiTarget } from \"react-icons/fi\";\n\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemHeading,\n    AccordionItemButton,\n    AccordionItemPanel,\n} from 'react-accessible-accordion';\nimport Modal from 'react-modal';\nimport '../../../styles/modals.css';\nimport { AiFillCaretDown } from 'react-icons/ai';\nimport './PopUp.css';\nimport GeoCercasModal from './GeoCercasModal';\n\nimport './PopUp.css';\n\nconst GeoCercas = () => {\n\n    /* State */\n    const [geoFences, setGeoFences] = useState([]);\n    const [modalState, setModalState] = useState(false); // State MODAL\n    const [geoItem, setGeoItem] = useState([])\n\n    const GeoCercas = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resultado = await fetch(\"https://www.protrack.ad105.net/api/geofences\", requestOptions)\n                /* .then(response => response.json())\n                .catch(error => console.log('error', error)); */\n                const geofenceData = await resultado.json();\n                /* console.log(deviceData) */\n                setGeoFences(geofenceData);\n                /* console.log(device) */\n    }\n    const deleteGeo = async(id) =>{\n        \n        var confirmar = window.confirm(\"¿Borrar GeoCerca?\");\n        if (confirmar) {\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'DELETE',\n                credentials: 'include',\n                headers: myHeaders,\n            };\n            \n            const resultado = await fetch(`https://www.protrack.ad105.net/api/geofences/${id}`, requestOptions)\n\n                window.location.reload();\n        }\n        else{\n            console.log(\"No se Elimino Geocerca\")\n        }\n    }\n    const saveItem = (modal, item) => {\n        setModalState(modal);\n        setGeoItem(item);\n    }\n\n    return (\n        <s.Container>\n            <s.busqueda_dispositivo>\n                <s.CheckBoxSearch type=\"checkbox\"/>\n                <s.busqueda_en_linea aria-haspopup=\"listbox\" role=\"combobox\" aria-owns=\"el-complete-8812\">\n                    <s.sufijo_entrada>\n                        <s.entrada_interna type='text' autoComplete='off' valuekey='value' placeholder='Nombre' />\n\n                    </s.sufijo_entrada>\n                </s.busqueda_en_linea>\n                <s.GeoAlarm>\n                    <BsBellFill/>\n                </s.GeoAlarm>\n                <s.GeoAlarm>\n                    <BsPlus/>\n                </s.GeoAlarm>\n                <s.GeoAlarm>\n                    <IoIosArrowDown/>\n                </s.GeoAlarm>\n            </s.busqueda_dispositivo>\n            <Accordion allowZeroExpanded>\n                <AccordionItem>\n                    <AccordionItemHeading>\n                        <AccordionItemButton className=\"accordion__button2\">\n                            <AiFillCaretDown/>\n                            <s.CheckBox1 type=\"checkbox\"/>\n                            Grupo Predeterminado ({geoFences.length})\n                        </AccordionItemButton>\n                    </AccordionItemHeading>\n                    <AccordionItemPanel className=\"itemPanelGeo\">\n                        {\n                            geoFences.map(item => (\n                                <s.divGeofenceItem>\n                                    <s.GeoItemDiv>\n                                        <s.CheckBox1 type=\"checkbox\"/>\n                                        <s.SpanGeoItemIcon><FiTarget/></s.SpanGeoItemIcon>\n                                        <s.SpanGeoItem id={item.id}>{item.name}</s.SpanGeoItem>\n                                    </s.GeoItemDiv>\n                                    <s.BuutonDivGeo>\n                                        <s.ButtonGeoItem onClick={() => saveItem(true, item)}><BsGearFill/></s.ButtonGeoItem>\n                                        <s.ButtonGeoItem><BsPencil/></s.ButtonGeoItem>\n                                        <s.ButtonGeoItem onClick={() => deleteGeo(item.id)}><BsTrash/></s.ButtonGeoItem>\n                                    </s.BuutonDivGeo>\n                                </s.divGeofenceItem>\n                            ))\n                        }\n                    </AccordionItemPanel>\n                </AccordionItem>\n            </Accordion>\n            <Modal \n                isOpen={modalState}\n                onRequestClose={() => setModalState(false)}\n                style={{\n                    overlay: {\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        right: 0,\n                        bottom: 0,\n                        backgroundColor: 'rgba(15, 15, 15, 0.507)'\n                    },\n                    content: {\n                        width: 650,\n                        height: 478\n                    }\n                }}\n            >\n                <s.HeaderModal>\n                    <s.TituloModal><BsGearFill/> Configuración de GeoCercas</s.TituloModal>\n                    <s.CerrarModal onClick={() => setModalState(false)}>+</s.CerrarModal>\n                </s.HeaderModal>\n                {/* CONTENIDO */}\n                <GeoCercasModal data={geoItem}/>\n            </Modal>\n        </s.Container>\n    )\n}\n\nexport default GeoCercas\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/BarraInferior.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/DispositivosModalGeo.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/GeoCercasModal.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/HorarioComand.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/AdminNotify.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/GestionLinks.js",["911","912"],"import React, { useEffect, useState } from 'react'\nimport * as s from '../Dispositivo.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport {  BsPencil   } from \"react-icons/bs\";\nimport {  FiArrowDownCircle   } from \"react-icons/fi\";\n\nimport DataTable from 'react-data-table-component';\n\nimport '../styles.css';\n\nconst GestionLinks = () => {\n    const [device, setDevice] = useState([]); //SE GUARDAN LOS JSON MEZCALDOS\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [deviceId, setDeviceId] = useState(\"\");\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const Datos = () => {\n        Devices()\n    }\n    const DevicesAll = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            if (dateFrom === \"\" && dateTo === \"\" && deviceId === \"\") {\n                const resultado = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n                const resultado2 = await fetch(`https://www.protrack.ad105.net/api/positions`, requestOptions)\n                /* .then(response => response.json())\n                .catch(error => console.log('error', error)); */\n                const deviceData = await resultado.json();\n                const deviceData2 = await resultado2.json();\n\n                var full = [] //JSONS MEZClados\n                Object.keys(deviceData).forEach(k=>{full[k] = Object.assign(deviceData[k],deviceData2[k])});\n\n                console.log('full data')\n                console.log(full);\n                setDevice(full);\n            }\n            else{\n                const resultado = await fetch(`https://www.protrack.ad105.net/api/devices/${deviceId}`, requestOptions)\n                const resultado2 = await fetch(`https://www.protrack.ad105.net/api/positions?deviceid=${deviceId}&from=${dateFrom}:00.000z&to=${dateTo}:00.000z`, requestOptions)\n                /* .then(response => response.json())\n                .catch(error => console.log('error', error)); */\n                const deviceData = await resultado.json();\n                const deviceData2 = await resultado2.json();\n\n                var full = [] //JSONS MEZClados\n                Object.keys(deviceData).forEach(k=>{full[k] = Object.assign(deviceData[k],deviceData2[k])});\n\n                console.log('full data')\n                console.log(full);\n                setDevice(full);\n            }\n    }\n    const data = [{ id: 1, objetivo: 'Vehiculo 1', kilometraje: '6.22', velocidad: '76', estadia: '2' }]\n    const columns = [\n        {\n            name: '#',\n            selector: 'deviceId',\n            sortable: true,\n        },\n        {\n            name: 'Nombre de link a compartir',\n            selector: 'link',\n            sortable: true,\n        },\n        {\n            name: 'Dispositivo',\n            selector: 'name',\n            sortable: true,\n        },\n        {\n            name: 'IMEI',\n            selector: 'uniqueId',\n            sortable: true,\n        },\n        {\n            name: 'Periodo',\n            selector: 'periodo',\n            sortable: true,\n        },\n        {\n            name: 'Estado',\n            selector: 'status',\n            sortable: true,\n        },\n        {\n            name: 'Ubicación',\n            selector: 'ubiacion',\n            sortable: true,\n        },\n        {\n            name: 'Crear Tiempo',\n            selector: 'tiempo',\n            sortable: true,\n        },\n        {\n            name: 'Operación',\n            cell:(row) =>\n                        <s.tableButtons>\n                            <s.tabButton id={row.ID}><BsPencil /></s.tabButton>\n                            <s.tabButton id={row.ID}><FiArrowDownCircle /></s.tabButton>\n                        </s.tableButtons> ,\n            ignoreRowClick: true,\n            allowOverflow: true,\n            button: true,\n        },\n    ];\n    return (\n        <div className=\"menuContent\" style={{left:'0px', top:'0px', marginTop:'10px', marginLeft:'10px'}}>\n                \n            <s.caja_dispositivo_titulo >\n            \n                <s.barra_arrastable />\n                <s.barra_superior_tituloGral>\n                &nbsp;\n                    &nbsp;<BiBarChart />&nbsp;&nbsp;Gestionar link`s compartidos\n                </s.barra_superior_tituloGral>\n            </s.caja_dispositivo_titulo>\n\n            <s.contenido_panel_dispositivo>\n                {/* CONTENIDO */}\n                <s.contentReportesDiv>\n                    <s.row1>\n                        <s.LabelGral>Dispositivo <s.selecttGral onChange={(e) => setDeviceId(e.target.value)}>\n                                <option value=\"\" selected> -- Dispositivo -- </option>\n                            {devAll.map((item) => (\n                                <option value={item.id}>{item.name}</option>\n                            ))}\n                        </s.selecttGral></s.LabelGral>\n                        <s.LabelGral>Crear Tiempo <s.inputGral type=\"datetime-local\" onChange={(e) => setDateFrom(e.target.value)}/></s.LabelGral>\n                        <s.LabelGral>A <s.inputGral type=\"datetime-local\" onChange={(e) => setDateTo(e.target.value)}/></s.LabelGral>\n                        <s.LabelGral>Tipo de Alarma <s.selecttGral></s.selecttGral> </s.LabelGral>\n                        <s.InfoBoton onClick={() => Datos()}>Comprobar</s.InfoBoton>\n                        <s.GenBoton><AiOutlinePlus /> Nuevo</s.GenBoton>\n                    </s.row1>\n                    <s.divTable>\n                        <DataTable\n                            columns={columns}\n                            data={device}\n                            striped={true}\n                            highlightOnHover={true}\n                            pointerOnHover={true}\n                        />\n                    </s.divTable>\n                </s.contentReportesDiv>\n            </s.contenido_panel_dispositivo>  \n        </div>\n    )\n}\n\nexport default GestionLinks\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/GestionMan.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraLateral/BarraLateral.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/BarraInferior/BarraInferior.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/Mapa.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/ConfigDevice.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Compartir/Compartir.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/Marcadores/MapIcon.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/BarraInferior/GeoCercasModal.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigInOut/ConfigInOut.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comando.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/BarraInferior/GeoCercas.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/mantenimiento/HorasMotor.js",["913"],"import React from 'react'\nimport * as s from '../../Dispositivo.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { BsPencil, BsTrash } from \"react-icons/bs\";\nimport { MdUpdate } from \"react-icons/md\";\n\n\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css'\n\nconst HorasMotor = () => {\n    const data = [{ id: 1, objetivo: 'Vehiculo 1', kilometraje: '6.22', velocidad: '76', estadia: '2' }]\n    const columns = [\n        {\n            name: '#',\n            selector: 'id',\n            sortable: true,\n        },\n        {\n            name: 'Nombre del Proyecto',\n            selector: 'nombre',\n            sortable: true,\n        },\n        {\n            name: 'Dispositivo',\n            selector: 'dispositivo',\n            sortable: true,\n        },\n        {\n            name: 'Horas totales',\n            selector: 'htotales',\n            sortable: true,\n        },\n        {\n            name: 'Próximas horas de mantenimiento(h)',\n            selector: 'prMantenimiento',\n            sortable: true,\n        },\n        {\n            name: 'Últimas horas de mantenimiento(h)',\n            selector: 'ulMantenimiento',\n            sortable: true,\n        },\n        {\n            name: 'Última cita',\n            selector: 'ulCita',\n            sortable: true,\n        },\n        {\n            name: 'Últimas actualizaciones',\n            selector: 'ulUpdates',\n            sortable: true,\n        },\n        {\n            name: 'Estado',\n            selector: 'estado',\n            sortable: true,\n        },\n        {\n            name: 'Operación',\n            cell:(row) =>\n                        <s.tableButtons>\n                            <s.tabButton id={row.ID}><BsPencil /></s.tabButton>\n                            <s.tabButton id={row.ID}><MdUpdate /></s.tabButton>\n                            <s.tabButton id={row.ID}><BsTrash /></s.tabButton>\n                        </s.tableButtons> ,\n            ignoreRowClick: true,\n            allowOverflow: true,\n            button: true,\n        },\n    ];\n    return (\n        <s.contentReportesDiv>\n            <s.row1>\n                <s.InfoBoton><AiOutlinePlus /> Nuevo</s.InfoBoton>\n            </s.row1>\n            <s.divTable>\n                <DataTable\n                    columns={columns}\n                    data={data}\n                    striped={true}\n                    highlightOnHover={true}\n                    pointerOnHover={true}\n                />\n            </s.divTable>\n        </s.contentReportesDiv>\n    )\n}\n\nexport default HorasMotor\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/comandos/HorarioComando.js",["914"],"import React from 'react'\nimport * as s from '../../Dispositivo.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { BsPencil, BsTrash } from \"react-icons/bs\";\nimport { MdUpdate } from \"react-icons/md\";\n\n\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css'\n\nconst HorarioComando = () => {\n    const data = [{ id: 1, objetivo: 'Vehiculo 1', kilometraje: '6.22', velocidad: '76', estadia: '2' }]\n    const columns = [\n        {\n            name: '#',\n            selector: 'id',\n            sortable: true,\n        },\n        {\n            name: 'Nombre',\n            selector: 'nombre',\n            sortable: true,\n        },\n        {\n            name: 'Comando',\n            selector: 'comando',\n            sortable: true,\n        },\n        {\n            name: 'Ultimas Actualizaciones',\n            selector: 'updates',\n            sortable: true,\n        },\n        {\n            name: 'Tipo de Tarea',\n            selector: 'tipoTarea',\n            sortable: true,\n        },\n        {\n            name: 'Enviar Tiempo',\n            selector: 'tiempo',\n            sortable: true,\n        },\n        {\n            name: 'Cantidad de Dispositivos',\n            selector: 'dispositivos',\n            sortable: true,\n        },\n        {\n            name: 'Estado',\n            selector: 'estado',\n            sortable: true,\n        },\n        {\n            name: 'Operación',\n            cell:(row) =>\n                        <s.tableButtons>\n                            <s.tabButton id={row.ID}><BsPencil /></s.tabButton>\n                            <s.tabButton id={row.ID}><MdUpdate /></s.tabButton>\n                            <s.tabButton id={row.ID}><BsTrash /></s.tabButton>\n                        </s.tableButtons> ,\n            ignoreRowClick: true,\n            allowOverflow: true,\n            button: true,\n        },\n    ];\n    return (\n        <s.contentReportesDiv>\n            <s.row1>\n                <s.GenBoton><AiOutlinePlus /> Nuevo</s.GenBoton>\n            </s.row1>\n            <s.divTable>\n                <DataTable\n                    columns={columns}\n                    data={data}\n                    striped={true}\n                    highlightOnHover={true}\n                    pointerOnHover={true}\n                />\n            </s.divTable>\n        </s.contentReportesDiv>\n    )\n}\n\nexport default HorarioComando\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/comandos/Historial.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Dispositivo/Components/mantenimiento/MantenKm.js",["915"],"import React from 'react'\nimport * as s from '../../Dispositivo.styles';\nimport {BiBarChart} from \"react-icons/bi\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { BsPencil, BsTrash } from \"react-icons/bs\";\nimport { MdUpdate } from \"react-icons/md\";\n\n\n\nimport DataTable from 'react-data-table-component';\n\nimport '../../styles.css'\n\nconst MantenKm = () => {\n    const data = [{ id: 1, objetivo: 'Vehiculo 1', kilometraje: '6.22', velocidad: '76', estadia: '2' }]\n    const columns = [\n        {\n            name: '#',\n            selector: 'id',\n            sortable: true,\n        },\n        {\n            name: 'Nombre del Proyecto',\n            selector: 'nombre',\n            sortable: true,\n        },\n        {\n            name: 'Dispositivo',\n            selector: 'dispositivo',\n            sortable: true,\n        },\n        {\n            name: 'Odometro',\n            selector: 'odometro',\n            sortable: true,\n        },\n        {\n            name: 'Último mantenimiento \\n Ultima cita',\n            selector: 'mantenimiento',\n            sortable: true,\n        },\n        {\n            name: 'Siguiente mantenimiento \\n Próxima hora de mantenimiento',\n            selector: 'sigMantenimiento',\n            sortable: true,\n        },\n        {\n            name: 'Últimas actualizaciones',\n            selector: 'updates',\n            sortable: true,\n        },\n        {\n            name: 'Estado',\n            selector: 'estado',\n            sortable: true,\n        },\n        {\n            name: 'Operación',\n            cell:(row) =>\n                        <s.tableButtons>\n                            <s.tabButton id={row.ID}><BsPencil /></s.tabButton>\n                            <s.tabButton id={row.ID}><MdUpdate /></s.tabButton>\n                            <s.tabButton id={row.ID}><BsTrash /></s.tabButton>\n                        </s.tableButtons> ,\n            ignoreRowClick: true,\n            allowOverflow: true,\n            button: true,\n        },\n    ];\n    return (\n        <s.contentReportesDiv>\n            <s.row1>\n                <s.InfoBoton><AiOutlinePlus /> Nuevo</s.InfoBoton>\n            </s.row1>\n            <s.divTable>\n                <DataTable\n                    columns={columns}\n                    data={data}\n                    striped={true}\n                    highlightOnHover={true}\n                    pointerOnHover={true}\n                />\n            </s.divTable>\n        </s.contentReportesDiv>\n    )\n}\n\nexport default MantenKm\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/BarraInferior/DispositivosModalGeo.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/Combustible.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/InfoDispositivo.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/InfoInstalacion.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/OtraInformacion.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/ConfigDevice.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Compartir/Compartir.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Recorrido/BarraInferior/GeoCercasModal.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Historial.js",["916","917","918","919","920"],"import React from 'react'\nimport * as s from './Comando.styles';\n\n\nimport { usePromiseTracker } from 'react-promise-tracker';\nimport { trackPromise } from 'react-promise-tracker';\n\nimport { FaCheck } from 'react-icons/fa';\n\n\nconst Historial = ({ objetivo }) => {\n\n    const fecha = new Date();\n    const [historial, setHistorial] = React.useState([]);\n    const [bandera, setBandera] = React.useState(false);\n\n    const mostrarReportes = () => {\n        return(\n            <s.command_history_item>\n                <s.cmd_history_num>\n                    <s.span_NO></s.span_NO>\n                </s.cmd_history_num>\n\n                <s.cmd_status>\n                <FaCheck />\n                </s.cmd_status>\n\n                <s.cmd_history_key>\n                tipo [ <s.el_button> <span>Repetir</span> </s.el_button> ]\n                </s.cmd_history_key>\n\n                <s.cmd_history_desc>\n                Descripción\n                </s.cmd_history_desc>\n\n            </s.command_history_item>\n        )\n    }\n\n    const mostrarHis = historial.map((number) =>\n    <p>{number}</p> \n    );\n\n    const comandoHistorial = (e) => {\n        e.preventDefault();\n        const reporte = historial;\n        var requestOptions = {\n            method: 'GET',\n            credentials: 'include'\n        };\n        trackPromise(\n            fetch(\"https://www.protrack.ad105.net/api/commands\", requestOptions)\n                .then(response => response.json())\n                .then((responseData) => {\n                    for (var i = 0; i < responseData.length; i++) {\n                        console.log(responseData[i].deviceId);\n                        if (responseData[i].deviceId === objetivo.id) {\n                        \n                           reporte.push(responseData[i]);\n                           setHistorial([...reporte]);\n                        }\n                    }\n                }).catch(error => console.warn(error))\n        );\n        console.log(historial);\n        setBandera(true);\n    }\n\n    const mostrar = () => {\n        mostrarReportes();\n    }\n\n    return (\n        <s.HistorialBody>\n            <s.HistorialNav>\n                <s.divNav1>\n                    <s.HistorialSelect disabled={bandera} >\n                        <option value=\"\" selected>TODOS</option>\n                        <option value=\"\">Ubicación</option>\n                        <option value=\"\">Apagar Motor</option>\n                        <option value=\"\">Restaurar Motor</option>\n                        <option value=\"\">Número de SOS</option>\n                        <option value=\"\">Check Status</option>\n                        <option value=\"\">Parámetros</option>\n                        <option value=\"\">GPRS Settings</option>\n                        <option value=\"\">Versión</option>\n                        <option value=\"\">Reset</option>\n                        <option value=\"\">Comandos</option>\n                    </s.HistorialSelect>\n                    <s.HistorialButton disabled={bandera} onClick={comandoHistorial}>Búsqueda</s.HistorialButton>\n                </s.divNav1>\n                <s.duvNav2></s.duvNav2>\n\n\n\n            </s.HistorialNav>\n\n            <s.command_history_content>\n                {historial.map(val => <s.command_history_item><s.cmd_history_num><s.span_NO>{val.id}</s.span_NO></s.cmd_history_num><s.cmd_status><FaCheck /></s.cmd_status><s.cmd_history_key>{val.description} [ <s.el_button> <span>Repetir</span> </s.el_button> ]</s.cmd_history_key><s.cmd_history_desc>Consulta realizada el día: | tipo de comando: {val.type}</s.cmd_history_desc></s.command_history_item>)}\n            </s.command_history_content>\n        </s.HistorialBody>\n    )\n}\n\n        {/*return(\n            <s.command_history_item>\n            <s.cmd_history_num>\n                <s.span_NO>1</s.span_NO>\n            </s.cmd_history_num>\n\n            <s.cmd_status>\n                <FaCheck />\n            </s.cmd_status>\n\n            <s.cmd_history_key>\n                {historial.type} [ <s.el_button> <span>Repetir</span> </s.el_button> ]\n            </s.cmd_history_key>\n\n            <s.cmd_history_desc>\n                {historial.description}\n            </s.cmd_history_desc>\n        </s.command_history_item>\n        )*/}\n\nexport default Historial","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/EnviarComando.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigInOut/ConfigInOut.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comando.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/ConfigAlarma.js",["921","922"],"import React, {useState} from 'react'\nimport * as s from './Opciones.styles';\n\nconst ConfigAlarma = () => {\n\n   const [alarma, setAlarma] = useState(false)\n\n    return (\n        <s.Contenedor>\n            <s.Container>\n                <s.InputGroup>\n                    <s.LabelCheckbox><s.CheckBox1 type=\"checkbox\"/> Acc Apagado:</s.LabelCheckbox>\n                </s.InputGroup>\n                <s.InputGroup>\n                    <s.LabelCheckbox><s.CheckBox1 type=\"checkbox\"/> Acc Encendido:</s.LabelCheckbox>\n                </s.InputGroup>\n            </s.Container>\n            <s.Container>\n                <s.InputGroup>\n                    <s.LabelCheckbox><s.CheckBox1 type=\"checkbox\"/> Puerta Abierta:</s.LabelCheckbox>\n                </s.InputGroup>\n                <s.InputGroup>\n                    <s.LabelCheckbox><s.CheckBox1 type=\"checkbox\"/> Puerta Cerrada:</s.LabelCheckbox>\n                </s.InputGroup>\n            </s.Container>\n            <s.Container>\n                <s.InputGroup>\n                    <s.LabelCheckbox><s.CheckBox1 type=\"checkbox\"/> Alerta de Fuga de Aceite:</s.LabelCheckbox>\n                </s.InputGroup>\n                <s.InputGroup>\n                    <s.LabelCheckbox><s.CheckBox1 type=\"checkbox\"/> Alerta de Repostaje:</s.LabelCheckbox>\n                </s.InputGroup>\n            </s.Container>\n            <s.Container>\n                <s.InputGroup>\n                    <s.LabelCheckbox><s.CheckBox1 type=\"checkbox\"/> Exceso de velocidad de alarma:</s.LabelCheckbox>\n                </s.InputGroup>\n                <s.InputGroup>\n                    <s.LabelCheckbox><s.CheckBox1 type=\"checkbox\"/> Ralentí Mínimo:</s.LabelCheckbox>\n                </s.InputGroup>\n            </s.Container>\n            <s.Container>\n                <s.InputGroup>\n                    <s.LabelCheckbox><s.CheckBox1 type=\"checkbox\"/> Alerta Fuera de Línea:</s.LabelCheckbox>\n                </s.InputGroup>\n                <s.InputGroup>\n                    <s.LabelCheckbox><s.CheckBox1 type=\"checkbox\"/> Alerta de Estacionamiento:</s.LabelCheckbox>\n                </s.InputGroup>\n            </s.Container>\n            <s.Container>\n                <s.InputGroup>\n                    <s.LabelCheckbox><s.CheckBox1 type=\"checkbox\"/> Alerta de Conducción restringida:</s.LabelCheckbox>\n                </s.InputGroup>\n            </s.Container>\n        </s.Contenedor>\n    )\n}\n\nexport default ConfigAlarma\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/Combustible/Deposito.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/Combustible/Consumo.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/Combustible/Sensor.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/Opciones.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Parametros.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Status.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Comandos.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Version.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Numero.js",["923","924","925","926","927","928","929"],"import React from 'react'\nimport * as s from './Comandos.styles';\nimport * as r from './Response.styles';\nimport { BsChevronDoubleRight } from \"react-icons/bs\";\n\nimport { FcInfo } from \"react-icons/fc\";\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nimport { usePromiseTracker } from 'react-promise-tracker';\nimport { trackPromise } from 'react-promise-tracker';\n\nimport Loader from 'react-loader-spinner';\n\nconst Numero = ({objetivo}) => {\n\n    const LoadingIndicator = () => {\n        const {promiseInProgress} = usePromiseTracker();\n        return(\n            promiseInProgress &&\n            <s.animacionCargar>\n                <Loader type=\"Oval\" color=\"#ffab05\" height=\"50\" width=\"50\" />\n            </s.animacionCargar>\n        );\n    }\n\n    const [reporte, setReporte] = React.useState();\n    const [toggle, setToggle] = React.useState(true);\n    const [phone, setPhone] = React.useState('');\n\n    const handleCambio = (e) => {\n        setPhone(e.target.value);\n    }\n\n    const handleToggle = (e) => {\n        e.preventDefault();\n        setToggle(!toggle)\n    }\n\n    const probar = (e) => {\n        console.log(objetivo);\n    }\n\n    const posicion = (e) => {\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        var data = JSON.stringify({\n            \"phone\": phone,\n        })\n\n        var requestOptions = {\n            method: 'PUT',\n            credentials: 'include',\n            body: data,\n            headers: myHeaders\n        };\n        trackPromise(\n        fetch(\"https://www.protrack.ad105.net/api/devices/\"+objetivo.id, requestOptions)\n            .then(response => response.json())\n            .then((responseData) => {\n                console.log(responseData);\n            }).catch(error => console.warn(error))\n            );\n            setToggle(!toggle);\n    }\n\n    const comando = e => {\n        e.preventDefault();\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        var data = JSON.stringify({\n            \"id\": -1,\n            \"deviceId\": objetivo.id,\n            \"textChannel\": false,\n            \"type\": \"setPhonebook\",\n            \"description\": \"Agregar telefono\"\n\n        })\n\n        var requestOptions = {\n            method: 'POST',\n            credentials: 'include',\n            body: data,\n            headers: myHeaders\n        };\n          \n          fetch(\"https://www.protrack.ad105.net/api/commands\", requestOptions)\n          .then((response) => {\n              if (response.status === 200) {\n                  posicion();\n              } else {\n                setReporte('Comando no enviado');\n                setToggle(!toggle);\n              }\n          })\n    }\n\n    return (\n        <s.Content>\n            <s.HeadComands><BsChevronDoubleRight/> Números de SOS</s.HeadComands>\n            <s.ComandContent>\n                <s.InputGroup>\n                    <s.DivLabel><s.Label>Objetivo </s.Label></s.DivLabel>\n                    <s.DivCont><s.InputDis type=\"text\" value={objetivo.name} disabled/></s.DivCont>\n                </s.InputGroup>\n                <s.InputGroup>\n                    <s.DivLabel><s.Label>SOS1 </s.Label></s.DivLabel>\n                    <s.DivCont><s.Input type=\"text\"  onChange={handleCambio}/></s.DivCont>\n                </s.InputGroup>\n                <s.InputGroup>\n                    <s.DivLabel></s.DivLabel>\n                    <s.DivCont><s.Button onClick={comando}>Enviar</s.Button></s.DivCont>\n                </s.InputGroup>\n            </s.ComandContent>\n        </s.Content>\n    )\n}\n\nexport default Numero\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Gprs.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Reset.js",["930"],"import React from 'react'\nimport * as s from './Comandos.styles';\nimport { BsChevronDoubleRight } from \"react-icons/bs\";\n\nconst Reset = ({objetivo}) => {\n    const comando = e => {\n        e.preventDefault()\n\n        var data = JSON.stringify({\n            \"deviceId\": objetivo.id,\n            \"Type\": \"custom\",\n            \"id\": 9,\n        })\n\n        var requestOptions = {\n            method: 'POST',\n            redirect: 'manual',\n            credentials: 'include',\n            body: data\n          };\n          \n          fetch(\"https://www.protrack.ad105.net/api/commands/\", requestOptions)\n            .then(response => response.text())\n            .then(result => console.log(result))\n            .catch(error => console.log('error', error));\n    }\n\n    return (\n        <s.Content>\n            <s.HeadComands><BsChevronDoubleRight/> Reset</s.HeadComands>\n            <s.ComandContent>\n                <s.InputGroup>\n                    <s.DivLabel><s.Label>Objetivo </s.Label></s.DivLabel>\n                    <s.DivCont><s.InputDis type=\"text\" value={objetivo.name} disabled/></s.DivCont>\n                </s.InputGroup>\n                <s.InputGroup>\n                    <s.DivLabel><s.Label>Contraseña </s.Label></s.DivLabel>\n                    <s.DivCont><s.Input type=\"password\"/></s.DivCont>\n                </s.InputGroup>\n                <s.InputGroup>\n                    <s.DivLabel></s.DivLabel>\n                    <s.DivCont><s.Span>Por favor ingrese su contraseña.</s.Span></s.DivCont>\n                </s.InputGroup>\n                <s.InputGroup>\n                    <s.DivLabel></s.DivLabel>\n                    <s.DivCont><s.Button>Enviar</s.Button></s.DivCont>\n                </s.InputGroup>\n            </s.ComandContent>\n        </s.Content>\n    )\n}\n\nexport default Reset\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Ubicacion.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Restaurar.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Apagar.js",["931"],"import React from 'react'\nimport * as s from './Comandos.styles';\nimport * as r from './Response.styles';\nimport { BsChevronDoubleRight } from \"react-icons/bs\";\n\nimport { FcInfo } from \"react-icons/fc\";\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nimport { usePromiseTracker } from 'react-promise-tracker';\nimport { trackPromise } from 'react-promise-tracker';\n\nimport Loader from 'react-loader-spinner';\n\nconst Apagar = ({objetivo}) => {\n\n    const LoadingIndicator = () => {\n        const { promiseInProgress } = usePromiseTracker();\n        return (\n            promiseInProgress &&\n            <s.animacionCargar>\n                <Loader type=\"Oval\" color=\"#ffab05\" height=\"50\" width=\"50\" />\n            </s.animacionCargar>\n        );\n    }\n\n    const [reporte, setReporte] = React.useState();\n    const [pass, setPass] = React.useState();\n    const [passs, setPasss] = React.useState('');\n    const [toggle, setToggle] = React.useState(true);\n\n    const handleToggle = (e) => {\n        e.preventDefault();\n        setToggle(!toggle)\n    }\n\n    function getCookie(name) {\n        const value = `; ${document.cookie}`;\n        const parts = value.split(`; ${name}=`);\n        if (parts.length === 2) return parts.pop().split(';').shift();\n    }\n\n    const handleCambio = (e) => {\n        setPasss(e.target.value);\n    }\n\n    const validarPass = e => {\n        setPass(getCookie(\"passCk\"));\n        if (pass === passs) {\n            comando();\n        } else {\n            setReporte(\"Verificar credenciales\");\n            setToggle(!toggle);\n        }\n    }\n\n    const posicion = (e) => {\n        var requestOptions = {\n            method: 'GET',\n            credentials: 'include'\n        };\n        trackPromise(\n            fetch(\"https://www.protrack.ad105.net/api/positions\", requestOptions)\n                .then(response => response.json())\n                .then((responseData) => {\n                        setReporte(\"Motor apagado OK\");\n                }).catch(error => console.warn(error))\n        );\n        setToggle(!toggle);\n    }\n\n    const comando = e => {\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        var data = JSON.stringify({\n            \"id\": -1,\n            \"deviceId\": objetivo.id,\n            \"textChannel\": false,\n            \"type\": \"engineStop\",\n            \"description\": \"aPAGAR motor\"\n\n        })\n\n        var requestOptions = {\n            method: 'POST',\n            credentials: 'include',\n            body: data,\n            headers: myHeaders\n        };\n\n        fetch(\"https://www.protrack.ad105.net/api/commands\", requestOptions)\n            .then((response) => {\n                if (response.status === 200) {\n                    posicion();\n                } else {\n                    setReporte('Comando no enviado');\n                    setToggle(!toggle);\n                }\n            })\n\n    }\n    return (\n        <s.Content>\n            <s.HeadComands><BsChevronDoubleRight/> Apagar</s.HeadComands>\n            <s.ComandContent>\n                <s.InputGroup>\n                    <s.DivLabel><s.Label>Objetivo </s.Label></s.DivLabel>\n                    <s.DivCont><s.InputDis type=\"text\" value={objetivo.name} disabled/></s.DivCont>\n                </s.InputGroup>\n                <s.InputGroup>\n                    <s.DivLabel><s.Label>Contraseña </s.Label></s.DivLabel>\n                    <s.DivCont><s.Input type=\"password\" onChange={handleCambio}/></s.DivCont>\n                </s.InputGroup>\n                <s.InputGroup>\n                    <s.DivLabel></s.DivLabel>\n                    <s.DivCont><s.Span>Por favor ingrese su contraseña.</s.Span></s.DivCont>\n                </s.InputGroup>\n                <s.InputGroup>\n                    <s.DivLabel></s.DivLabel>\n                    <s.DivCont><s.Button onClick={validarPass}>Enviar</s.Button></s.DivCont>\n                </s.InputGroup>\n\n                <r.response_wrapper visibility={toggle}>\n                <r.el_message_box>\n                    <r.el_message_box_header>\n                        <r.el_message_box_title>\n                            <r.Span>Response</r.Span>\n                            <r.el_message_box_headerBtn>\n                                <r.el_message_box_close onClick={handleToggle}>\n                                    <AiOutlineClose />\n                                </r.el_message_box_close>\n                            </r.el_message_box_headerBtn>\n                        </r.el_message_box_title>\n                    </r.el_message_box_header>\n\n\n                    <r.el_message_box_content>\n                        <r.el_message_box_container>\n\n                            <r.el_message_box_status>\n                                <FcInfo />\n                            </r.el_message_box_status>\n\n                            <r.el_message_box_message>\n                                <r.P>\n                                    <r.f13>\n                                        {reporte}\n                                    </r.f13>\n                                </r.P>\n                            </r.el_message_box_message>\n\n                        </r.el_message_box_container>\n                    </r.el_message_box_content>\n                </r.el_message_box>\n            </r.response_wrapper>\n            </s.ComandContent>\n        </s.Content>\n    )\n}\n\nexport default Apagar\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/ConfigDevice/Opciones/Combustible/Combustible.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Response.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/Comando/Comandos/Comandos.styles.js",[],"/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/Alarms.js",["932","933","934","935","936","937","938","939","940","941","942","943","944","945"],"import React, { useEffect, useState, useContext } from 'react'\nimport * as s from './GeoCercas.styles'\nimport { BsBellFill, BsPlus, BsGearFill, BsPencil, BsTrash } from \"react-icons/bs\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { IoVolumeMuteOutline, IoStatsChartSharp } from \"react-icons/io5\";\nimport { SiCircle } from \"react-icons/si\";\nimport { FiTarget } from \"react-icons/fi\";\nimport { FaDrawPolygon } from \"react-icons/fa\";\nimport { BsCircle } from \"react-icons/bs\";\nimport { HiOutlineViewGridAdd, HiOutlineDotsVertical } from \"react-icons/hi\";\nimport { AiOutlineClockCircle } from \"react-icons/ai\";\n\nimport {MenContext} from '../../Context/MenuContext';\n\nconst Alarms = ({ver, ocultar}) => {\n\n    /* useContext */\n    const { setMenuOp, setSubmenuOp } = useContext(MenContext);\n\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [reportData, setReportData] = useState([]); //SE GUARDAN LOS REPORTES\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [datosTotal, setdatosTotal] = useState([])\n    const ubicacion = [];\n    let index = 0;\n\n    useEffect(() => {\n        if(ver){\n            let date = new Date();\n            date = date.setDate(date.getDate() -1);\n            let date1Y = new Date(date)\n            let dateF1 = new Date(date1Y.getFullYear(), date1Y.getMonth(), date1Y.getDate())\n            dateF1 = dateF1.toISOString();\n\n            let date2 = new Date();\n            let dateF2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n            dateF2 = dateF2.toISOString()\n\n            setDateFrom(dateF1);\n            setDateTo(dateF2);\n            console.log(dateF1, dateF2)\n\n            DevicesAll();\n            Devices();\n        }\n    }, [ver])\n\n    const DevicesAll = async() =>{  //obtener dispositivos para el select\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n                console.log(\"antes de consulta \"+ dateFrom)\n                console.log(\"antes de consulta \"+ dateTo)\n                //generar url\n                let url = \"https://www.protrack.ad105.net/api/reports/events?\";\n                let groupId;\n                for(let i = 0; i < devAll.length; i++){\n                    url = url+\"deviceId=\"+devAll[i].id+\"&\";\n                    groupId= devAll[i].groupId;\n                }\n                url = url+\"groupId=\"+groupId+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo+'&daily=false&page=1&start=0&limit=25';\n                console.log(url)\n                const resultado2 = await fetch(`${url}`, requestOptions)\n                const deviceData2 = await resultado2.json();\n\n                console.log(deviceData2)\n                for(let i = 0; i< deviceData2.length; i++){\n                    for (let j = 0; j < devAll.length; j++) {\n                        if(deviceData2[i].deviceId === devAll[j].id){\n                            ubicacion.push({id: devAll[j].id, name: devAll[j].name, type: deviceData2[i].type})\n                        }\n                    }\n                }\n                console.log(ubicacion);\n                setReportData(ubicacion);\n    }\n    const typeAlarm = (type) => {\n        let alarma = '';\n        switch (type) {\n            case 'deviceMoving':\n                    alarma = 'Dispositivo en Movimiento';\n                break;\n            case 'jamming':\n                    alarma = 'Dispositivo con Interferencia';\n                break;\n            case 'deviceStopped':\n                    alarma = 'Dispositivo Detenido';\n                break;\n            case 'deviceOffline':\n                    alarma = 'Dispositivo Fuera de Línea';\n                break;\n            case 'deviceOnline':\n                    alarma = 'Dispositivo en línea';\n                break;\n            case 'geofenceExit':\n                    alarma = 'Dispositivo saliendo de GeoCerca';\n                break;\n            case 'geofenceEnter':\n                    alarma = 'Dispositivo entrando a GeoCerca';\n                break;\n            case 'powerCut':\n                    alarma = 'Bateria desconectada';\n                break;\n            case 'sos':\n                    alarma = 'Alarma SOS';\n                break;\n            case 'lowBattery':\n                    alarma = 'Bateria Baja';\n                break;\n            case 'door':\n                    alarma = 'Puerta';\n                break;\n            case 'fuelUp':\n                    alarma = 'Cargando combustible';\n                break;\n            case 'fuelDown':\n                    alarma = 'Vaciando combustible';\n                break;\n            case 'ignitionOff':\n                    alarma = 'Motor Apagado';\n                break;\n            case 'ignitionOn':\n                    alarma = 'Motor Encendido';\n                break;\n            case 'noGps':\n                    alarma = 'No se encuentra Gps';\n                break;\n            case 'overSpeed':\n                    alarma = 'Alarma Exceso de Velocidad';\n                break;\n            case 'oilLeak':\n                    alarma = 'Fuga de combustible';\n                break;\n            case 'deviceUnknown':\n                alarma = 'Dispositivo Desconocido';\n                break;\n            case 'alarm':\n                alarma = 'Alarma';\n\n                break;\n            default:\n                break;\n        }\n        return alarma;\n    }\n    return (\n        <s.Container>\n            <s.busqueda_dispositivo>\n                <s.busqueda_en_linea aria-haspopup=\"listbox\" role=\"combobox\" aria-owns=\"el-complete-8812\">\n                    <s.sufijo_entrada>\n                        <s.entrada_interna type='text' autoComplete='off' valuekey='value' placeholder='Nombre' />\n\n                    </s.sufijo_entrada>\n                </s.busqueda_en_linea>\n                <s.AlarmIcons>\n                    <IoVolumeMuteOutline/>\n                </s.AlarmIcons>\n                <s.AlarmIcons>\n                    <BsTrash/>\n                </s.AlarmIcons>\n                <s.AlarmIcons>\n                    <HiOutlineDotsVertical/>\n                </s.AlarmIcons>\n            </s.busqueda_dispositivo>\n            <s.verAlertasDiv>\n                <s.VerAlertas onClick={() => {setMenuOp(3); setSubmenuOp(25)}}><IoStatsChartSharp />{' '}Ver Alertas</s.VerAlertas>\n            </s.verAlertasDiv>\n            <s.ListAlerts>\n                {reportData.map(item => (\n                    <s.ListAlertElem  key={item.id}>\n                        <span>{index = index +1}</span>\n                        <s.SpanAlarmData>\n                            <span>Dispositivo:<strong>{' '+item.name}</strong></span>\n                            <span>{typeAlarm(item.type)}</span>\n                        </s.SpanAlarmData>\n                    </s.ListAlertElem>\n                ))}\n            </s.ListAlerts>\n        </s.Container>\n    )\n}\n\nexport default Alarms\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/DescargarRecorrido.js",["946","947","948"],"import React, {useState, Fragment, useEffect} from 'react'\nimport * as s from './GeoCercas.styles'\nimport * as ic from 'react-icons/all';\nimport {RiRouteLine, RiFileExcel2Line} from 'react-icons/ri';\nimport {SiGoogleearth} from 'react-icons/si';\nimport {AiOutlineFile} from 'react-icons/ai';\n\nimport ReactExport from \"react-data-export\";\nimport { saveAs } from \"file-saver\";\n\nimport Spinner from './Spinner';\n\nconst DescargarRecorrido = () => {\n\n    const [device, setDevice] = useState([]);\n    const [deviceId, setDeviceId] = useState(\"0\");\n    const [devAll, setDevAll] = useState([]); //Id's de todos los dispositivos\n    const [dateFrom, setDateFrom] = useState(\"\");\n    const [dateTo, setDateTo] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [errorDevice, setErrorDevice] = useState(false);\n    const ubicacion = [];\n    const [datosTotal, setDatosTotal] = useState([]);\n    const [devName, setDevName] = useState(\"\");\n    let plainText = \"\";\n    //INSTANCIAS PARA EL EXCEL\n    const ExcelFile = ReactExport.ExcelFile;\n    const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n    const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n    const [filename, setFilename] = useState(\"\");\n\n    const [habilitado, setHabilitado] = useState(0);\n\n    useEffect(() => {\n        DevicesAll()\n    }, [])\n    const DesdeForm = () =>{\n        //validar\n        if(deviceId === \"0\"){\n            alert(\"Seleccione objetivo\")\n            setErrorDevice(true)\n            return;\n        }\n        if (dateFrom.trim() === '' || dateTo.trim() === '') {\n            alert(\"Se debe de indicar una Fecha de Inicio y de Final para generar el reporte\")\n            setError(true);\n            return;\n        }\n        if (dateFrom > dateTo) {\n            alert(\"La fecha de partida no puede ser mayor a la fecha de llegada\");\n            setError(true);\n            return;\n        }\n        setError(false);\n        setErrorDevice(false)\n        setHabilitado(1);\n        Devices();\n    }\n    console.log(dateFrom)\n    console.log(dateTo);\n    const DateFromValue = e => {\n        let date = new Date(e);\n        setDateFrom(date.toISOString());\n        setHabilitado(0);\n        //console.log(date.toISOString());\n    }\n    const DateToValue = e => {\n        let date = new Date(e);\n        setDateTo(date.toISOString());\n        setHabilitado(0);\n        //console.log(date.toISOString());\n    }\n    const DeviceIdValue = e => {\n        setDeviceId(e)\n        setHabilitado(0);\n    }\n    const DateFormat = (date) => {\n        let fecha = new Date(date);\n        return fecha.getTime();\n    }\n    const DevicesAll = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            \n            const resulDev = await fetch(\"https://www.protrack.ad105.net/api/devices\", requestOptions)\n            const resDev = await resulDev.json()\n\n            setDevAll(resDev);\n    }\n    const Devices = async() =>{\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Accept\", \"*/*\");\n\n            var requestOptions = {\n                method: 'GET',\n                credentials: 'include',\n                headers: myHeaders,\n                redirect: 'follow'\n            };\n            console.log(\"antes de consulta \"+ dateFrom)\n            console.log(\"antes de consulta \"+ dateTo)\n            //generar url de ruta\n            let url = \"https://www.protrack.ad105.net/api/reports/route?\";\n            let groupId;\n            for(let i = 0; i < devAll.length; i++){\n                groupId= devAll[i].groupId;\n            }\n            url = url+\"deviceId=\"+deviceId+\"&\";\n            url = url+\"groupId=\"+groupId+\"&type=allEvents&from=\"+dateFrom+\"&to=\"+dateTo;\n            console.log(url)\n            const resultado2 = await fetch(`${url}`, requestOptions)\n            const deviceData2 = await resultado2.json();\n            \n            for(let i = 0; i < deviceData2.length; i ++){\n                //obtener direccion\n                ubicacion.push({id: i, gpsTime: deviceData2[i].serverTime, deviceTime: deviceData2[i].deviceTime, latitude: deviceData2[i].latitude, longitude: deviceData2[i].longitude, speed: deviceData2[i].speed, direction: deviceData2[i].course,})\n            }\n            //api device seleccionado\n            const resDevice = await fetch(`https://www.protrack.ad105.net/api/devices/${deviceId}`, requestOptions)\n            const resDev = await resDevice.json()\n            \n            setDatosTotal(ubicacion);\n            console.log(ubicacion);\n            console.log(datosTotal);\n            console.log(resDev.name);\n            setDevice(resDev);\n            setFilename(`${resDev.name}_gps(${DateFormat(dateFrom)} - ${DateFormat(dateTo)})`);\n            setHabilitado(2);\n            console.log(device);\n    }\n    const Fecha = (fecha) => {\n        const fecha1 = new Date();\n        const date = new Date(fecha);\n        if (fecha1.getDate() === date.getDate()) {\n            return date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n        }\n        return date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate()+' '+date.getHours()+':'+ date.getMinutes()+':'+date.getSeconds();\n    }\n    const csvEmptyData = [\n        {\n          foo: \"\"\n        }\n      ];\n    //Estructura para guardar en el excel\n    const data = [\n        {\n            xSteps: 3,\n            columns: [\n                { title: filename+\"(\"+datosTotal.length+\")\", width: {wpx: 300}, height: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:14}, border: {top: {style: \"none\", color: \"#fff\"}, bottom: {style: \"nono\", color: \"#fff\"}, left: {style: \"none\", color: \"#fff\"}, right: {style: \"none\", color: \"#fff\"}}}}\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"Exceso de Velocidad\", width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            xSteps: 3,\n            ySteps: -1,\n            columns: [\n                { title: \"DESDE \"+dateFrom+\" A \"+dateTo, width: {wpx: 520}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true, sz:12}} }\n            ],\n            data: csvEmptyData.map((record, index) => {\n                return [\n                    { value: record.foo }\n                ];\n            }),\n        },\n        {\n            ySteps: -1,\n            columns: [\n                { title: \"NO.\", width: {wpx: 40}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"GPS Time\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Latitude\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Longitude\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Speed(kph)\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"Direction\", width: {wpx: 120}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { title: \"View Map\", width: {wpx: 360}, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, font: {bold: true}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n            ],\n            data: datosTotal.map((dev, index) => {\n                return [\n                { value: dev.id, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: Fecha(dev.gpsTime), style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.latitude, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.longitude, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: ((dev.speed)*1.852).toFixed(0)+' Km/h', style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: dev.direction, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                { value: `http://map.google.com/maps?q=${dev.latitude},${dev.longitude}`, style: {alignment: {vertical: \"center\", horizontal: \"center\"}, border: {top: {style: \"thin\", color: \"#000\"}, bottom: {style: \"thin\", color: \"#000\"}, left: {style: \"thin\", color: \"#000\"}, right: {style: \"thin\", color: \"#000\"}}}},\n                ];\n            }),\n        },\n    ];\n    const exportTxt = () => {\n        plainText = \"begintime=\"+DateFormat(dateFrom)+\"\\n\";\n        plainText = plainText+\"endtime=\"+DateFormat(dateTo)+\"\\n\";\n        plainText = plainText+\"overspeedThreshold=\\n\";\n        plainText = plainText+\"deviceName=\"+device.name+\"\\n\";\n        plainText = plainText+\"deviceType=\"+device.model+\"\\n\";\n        plainText = plainText+\"plate=\\n\";\n        plainText = plainText+\"imei=\"+(device.uniqueId).replace((device.uniqueId).substr(2,11), '***********')+\"\\n\";\n        plainText = plainText+\"initMapCenter=\"+datosTotal[0].latitude+\",\"+datosTotal[0].longitude+\"\\n\";\n        plainText = plainText+\"version=1.0\\n\";\n        plainText = plainText+\"gpsData[1]=\";\n        for(let i = 0; i < datosTotal.length; i++){\n            plainText = plainText+datosTotal[i].latitude+\",\"+datosTotal[i].longitude+\",\"+DateFormat(datosTotal[i].gpsTime)+\";\";\n        }\n        var blob = new Blob([plainText], { type: \"text/plain;charset=utf-8\" });\n        saveAs(blob, `${filename}.txt`);\n    }\n    return (\n        <s.Container>\n            <s.ContentInfo>\n                <ic.BsInfoCircleFill style={{\n                    fontSize: 14,\n                    color: '#2cabe3'\n                }}/>\n                <s.LabelTrips>\n                    La diferencia de tiempo es mayor de siete días\n                </s.LabelTrips>\n            </s.ContentInfo>\n            <s.DivTrips>\n                <s.DivFormTrips>\n                    <s.NameInputTrips>Dispositivo: </s.NameInputTrips>\n                    <s.SelectDevTrips onChange={(e) => DeviceIdValue(e.target.value)} className={errorDevice ? 'errorFormDate' :  ''}>\n                        <option value=\"\" selected disabled>-- Selecciona un Dispositivo --</option>\n                        {devAll.map((item) => (\n                                <option key={item.id} value={item.id}>{item.name}</option>\n                        ))}\n                    </s.SelectDevTrips>\n                </s.DivFormTrips>\n                <s.DivFormTrips>\n                    <s.NameInputTrips>Tiempo de Inicio:</s.NameInputTrips>\n                    <s.InputTrips type=\"date\" onChange={(e) =>DateFromValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/>\n                </s.DivFormTrips>\n                <s.DivFormTrips>\n                    <s.NameInputTrips>Tiempo Final:</s.NameInputTrips>\n                    <s.InputTrips type=\"date\" onChange={(e) => DateToValue(e.target.value)} className={error ? 'errorFormDate' :  ''}/>\n                </s.DivFormTrips>\n            </s.DivTrips>\n            <s.ContentTripsDownload>\n                {habilitado === 0 ? (\n                    <s.ContentButtonDownload>\n                        <s.DownloadButtonTxt\n                            onClick={DesdeForm}\n                        ><AiOutlineFile style={{\n                            fontSize: 20,\n                        }}/>Generar Reporte</s.DownloadButtonTxt>\n                    </s.ContentButtonDownload>\n                ) : null }\n                {habilitado === 1 ? <Spinner /> : null}\n                {habilitado === 2 ? (\n                    <Fragment>\n                        <s.ContentButtonDownload>\n                            <s.DownloadButtonKml><SiGoogleearth  style={{\n                                fontSize: 20,\n                            }}/>Download Kml</s.DownloadButtonKml>\n                            <ic.BsInfoCircleFill style={{\n                                fontSize: 14,\n                                color: '#2cabe3'\n                            }}/>\n                        </s.ContentButtonDownload>\n                        <s.ContentButtonDownload>\n                        <ExcelFile element={\n                            <s.DownloadButtonExcel><RiFileExcel2Line style={{\n                                fontSize: 20,\n                            }}/>Download Excel</s.DownloadButtonExcel>\n                        } filename={filename}><ExcelSheet dataSet={data} name={filename} /></ExcelFile>\n                            <ic.BsInfoCircleFill style={{\n                                fontSize: 14,\n                                color: '#2cabe3'\n                            }}/>\n                        </s.ContentButtonDownload>\n                        <s.ContentButtonDownload>\n                            <s.DownloadButtonTxt\n                                onClick={exportTxt}\n                            ><RiRouteLine style={{\n                                fontSize: 20,\n                            }}/>Download Txt</s.DownloadButtonTxt>\n                            <ic.BsInfoCircleFill style={{\n                                fontSize: 14,\n                                color: '#2cabe3'\n                            }}/>\n                        </s.ContentButtonDownload>\n                    </Fragment>\n                ) : null}\n            </s.ContentTripsDownload>\n        </s.Container>\n    )\n}\n\nexport default DescargarRecorrido\n","/Users/santiago/Documents/Desarrollo/ProyectosWork/plataforma/src/Components/BarraInferior/Spinner.js",[],{"ruleId":"949","replacedBy":"950"},{"ruleId":"951","replacedBy":"952"},{"ruleId":"953","severity":1,"message":"954","line":1,"column":16,"nodeType":"955","messageId":"956","endLine":1,"endColumn":24},{"ruleId":"953","severity":1,"message":"957","line":18,"column":10,"nodeType":"955","messageId":"956","endLine":18,"endColumn":26},{"ruleId":"953","severity":1,"message":"958","line":18,"column":28,"nodeType":"955","messageId":"956","endLine":18,"endColumn":42},{"ruleId":"953","severity":1,"message":"954","line":1,"column":18,"nodeType":"955","messageId":"956","endLine":1,"endColumn":26},{"ruleId":"953","severity":1,"message":"959","line":3,"column":13,"nodeType":"955","messageId":"956","endLine":3,"endColumn":15},{"ruleId":"953","severity":1,"message":"960","line":8,"column":8,"nodeType":"955","messageId":"956","endLine":8,"endColumn":25},{"ruleId":"953","severity":1,"message":"961","line":9,"column":8,"nodeType":"955","messageId":"956","endLine":9,"endColumn":21},{"ruleId":"953","severity":1,"message":"962","line":10,"column":8,"nodeType":"955","messageId":"956","endLine":10,"endColumn":22},{"ruleId":"953","severity":1,"message":"963","line":16,"column":21,"nodeType":"955","messageId":"956","endLine":16,"endColumn":31},{"ruleId":"953","severity":1,"message":"964","line":5957,"column":15,"nodeType":"955","messageId":"956","endLine":5957,"endColumn":23},{"ruleId":"953","severity":1,"message":"965","line":5977,"column":12,"nodeType":"955","messageId":"956","endLine":5977,"endColumn":22},{"ruleId":"953","severity":1,"message":"966","line":5977,"column":24,"nodeType":"955","messageId":"956","endLine":5977,"endColumn":37},{"ruleId":"967","severity":1,"message":"968","line":5984,"column":9,"nodeType":"969","messageId":"970","endLine":5985,"endColumn":25},{"ruleId":"953","severity":1,"message":"959","line":3,"column":13,"nodeType":"955","messageId":"956","endLine":3,"endColumn":15},{"ruleId":"953","severity":1,"message":"971","line":17,"column":18,"nodeType":"955","messageId":"956","endLine":17,"endColumn":25},{"ruleId":"953","severity":1,"message":"972","line":18,"column":19,"nodeType":"955","messageId":"956","endLine":18,"endColumn":27},{"ruleId":"953","severity":1,"message":"973","line":19,"column":22,"nodeType":"955","messageId":"956","endLine":19,"endColumn":33},{"ruleId":"953","severity":1,"message":"974","line":21,"column":11,"nodeType":"955","messageId":"956","endLine":21,"endColumn":17},{"ruleId":"953","severity":1,"message":"975","line":1,"column":27,"nodeType":"955","messageId":"956","endLine":1,"endColumn":40},{"ruleId":"953","severity":1,"message":"976","line":1,"column":42,"nodeType":"955","messageId":"956","endLine":1,"endColumn":52},{"ruleId":"953","severity":1,"message":"977","line":5,"column":10,"nodeType":"955","messageId":"956","endLine":5,"endColumn":22},{"ruleId":"953","severity":1,"message":"978","line":8,"column":13,"nodeType":"955","messageId":"956","endLine":8,"endColumn":20},{"ruleId":"953","severity":1,"message":"979","line":26,"column":12,"nodeType":"955","messageId":"956","endLine":26,"endColumn":19},{"ruleId":"953","severity":1,"message":"980","line":36,"column":11,"nodeType":"955","messageId":"956","endLine":36,"endColumn":23},{"ruleId":"981","severity":1,"message":"982","line":38,"column":30,"nodeType":"983","messageId":"984","endLine":38,"endColumn":32},{"ruleId":"981","severity":1,"message":"982","line":42,"column":31,"nodeType":"983","messageId":"984","endLine":42,"endColumn":33},{"ruleId":"953","severity":1,"message":"985","line":73,"column":14,"nodeType":"955","messageId":"956","endLine":73,"endColumn":24},{"ruleId":"981","severity":1,"message":"982","line":78,"column":31,"nodeType":"983","messageId":"984","endLine":78,"endColumn":33},{"ruleId":"981","severity":1,"message":"982","line":79,"column":35,"nodeType":"983","messageId":"984","endLine":79,"endColumn":37},{"ruleId":"986","severity":1,"message":"987","line":104,"column":33,"nodeType":"988","endLine":104,"endColumn":51},{"ruleId":"989","severity":1,"message":"990","line":203,"column":33,"nodeType":"988","endLine":203,"endColumn":36},{"ruleId":"989","severity":1,"message":"990","line":204,"column":29,"nodeType":"988","endLine":204,"endColumn":32},{"ruleId":"989","severity":1,"message":"990","line":205,"column":29,"nodeType":"988","endLine":205,"endColumn":32},{"ruleId":"989","severity":1,"message":"990","line":206,"column":29,"nodeType":"988","endLine":206,"endColumn":32},{"ruleId":"989","severity":1,"message":"990","line":207,"column":29,"nodeType":"988","endLine":207,"endColumn":32},{"ruleId":"953","severity":1,"message":"991","line":16,"column":12,"nodeType":"955","messageId":"956","endLine":16,"endColumn":17},{"ruleId":"953","severity":1,"message":"992","line":16,"column":19,"nodeType":"955","messageId":"956","endLine":16,"endColumn":27},{"ruleId":"953","severity":1,"message":"993","line":6,"column":13,"nodeType":"955","messageId":"956","endLine":6,"endColumn":14},{"ruleId":"953","severity":1,"message":"994","line":14,"column":23,"nodeType":"955","messageId":"956","endLine":14,"endColumn":35},{"ruleId":"953","severity":1,"message":"965","line":400,"column":14,"nodeType":"955","messageId":"956","endLine":400,"endColumn":24},{"ruleId":"953","severity":1,"message":"966","line":400,"column":26,"nodeType":"955","messageId":"956","endLine":400,"endColumn":39},{"ruleId":"953","severity":1,"message":"964","line":419,"column":15,"nodeType":"955","messageId":"956","endLine":419,"endColumn":23},{"ruleId":"953","severity":1,"message":"995","line":9,"column":8,"nodeType":"955","messageId":"956","endLine":9,"endColumn":21},{"ruleId":"953","severity":1,"message":"996","line":10,"column":8,"nodeType":"955","messageId":"956","endLine":10,"endColumn":20},{"ruleId":"953","severity":1,"message":"997","line":17,"column":9,"nodeType":"955","messageId":"956","endLine":17,"endColumn":28},{"ruleId":"953","severity":1,"message":"998","line":17,"column":30,"nodeType":"955","messageId":"956","endLine":17,"endColumn":35},{"ruleId":"981","severity":1,"message":"982","line":82,"column":21,"nodeType":"983","messageId":"984","endLine":82,"endColumn":23},{"ruleId":"953","severity":1,"message":"999","line":52,"column":12,"nodeType":"955","messageId":"956","endLine":52,"endColumn":17},{"ruleId":"953","severity":1,"message":"1000","line":52,"column":19,"nodeType":"955","messageId":"956","endLine":52,"endColumn":27},{"ruleId":"953","severity":1,"message":"954","line":1,"column":29,"nodeType":"955","messageId":"956","endLine":1,"endColumn":37},{"ruleId":"953","severity":1,"message":"1001","line":20,"column":24,"nodeType":"955","messageId":"956","endLine":20,"endColumn":36},{"ruleId":"953","severity":1,"message":"1002","line":1,"column":17,"nodeType":"955","messageId":"956","endLine":1,"endColumn":26},{"ruleId":"953","severity":1,"message":"954","line":1,"column":28,"nodeType":"955","messageId":"956","endLine":1,"endColumn":36},{"ruleId":"953","severity":1,"message":"1003","line":2,"column":31,"nodeType":"955","messageId":"956","endLine":2,"endColumn":36},{"ruleId":"953","severity":1,"message":"1004","line":2,"column":49,"nodeType":"955","messageId":"956","endLine":2,"endColumn":60},{"ruleId":"953","severity":1,"message":"1005","line":2,"column":77,"nodeType":"955","messageId":"956","endLine":2,"endColumn":83},{"ruleId":"953","severity":1,"message":"1006","line":2,"column":85,"nodeType":"955","messageId":"956","endLine":2,"endColumn":91},{"ruleId":"953","severity":1,"message":"1007","line":2,"column":93,"nodeType":"955","messageId":"956","endLine":2,"endColumn":103},{"ruleId":"953","severity":1,"message":"1002","line":1,"column":29,"nodeType":"955","messageId":"956","endLine":1,"endColumn":38},{"ruleId":"953","severity":1,"message":"957","line":13,"column":10,"nodeType":"955","messageId":"956","endLine":13,"endColumn":26},{"ruleId":"953","severity":1,"message":"1008","line":36,"column":12,"nodeType":"955","messageId":"956","endLine":36,"endColumn":18},{"ruleId":"953","severity":1,"message":"1009","line":36,"column":20,"nodeType":"955","messageId":"956","endLine":36,"endColumn":29},{"ruleId":"953","severity":1,"message":"1010","line":67,"column":11,"nodeType":"955","messageId":"956","endLine":67,"endColumn":17},{"ruleId":"967","severity":1,"message":"968","line":84,"column":9,"nodeType":"969","messageId":"970","endLine":90,"endColumn":57},{"ruleId":"953","severity":1,"message":"1011","line":27,"column":11,"nodeType":"955","messageId":"956","endLine":27,"endColumn":22},{"ruleId":"953","severity":1,"message":"1012","line":5,"column":9,"nodeType":"955","messageId":"956","endLine":5,"endColumn":13},{"ruleId":"953","severity":1,"message":"1013","line":8,"column":8,"nodeType":"955","messageId":"956","endLine":8,"endColumn":17},{"ruleId":"953","severity":1,"message":"1012","line":5,"column":9,"nodeType":"955","messageId":"956","endLine":5,"endColumn":13},{"ruleId":"953","severity":1,"message":"1013","line":8,"column":8,"nodeType":"955","messageId":"956","endLine":8,"endColumn":17},{"ruleId":"953","severity":1,"message":"1014","line":4,"column":13,"nodeType":"955","messageId":"956","endLine":4,"endColumn":15},{"ruleId":"989","severity":1,"message":"990","line":36,"column":25,"nodeType":"988","endLine":36,"endColumn":28},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"953","severity":1,"message":"1016","line":11,"column":12,"nodeType":"955","messageId":"956","endLine":11,"endColumn":18},{"ruleId":"953","severity":1,"message":"1017","line":11,"column":20,"nodeType":"955","messageId":"956","endLine":11,"endColumn":29},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"1018","severity":1,"message":"1019","line":142,"column":21,"nodeType":"955","messageId":"1020","endLine":142,"endColumn":25},{"ruleId":"953","severity":1,"message":"1021","line":150,"column":11,"nodeType":"955","messageId":"956","endLine":150,"endColumn":15},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"953","severity":1,"message":"1016","line":13,"column":12,"nodeType":"955","messageId":"956","endLine":13,"endColumn":18},{"ruleId":"953","severity":1,"message":"1017","line":13,"column":20,"nodeType":"955","messageId":"956","endLine":13,"endColumn":29},{"ruleId":"953","severity":1,"message":"1022","line":21,"column":12,"nodeType":"955","messageId":"956","endLine":21,"endColumn":22},{"ruleId":"953","severity":1,"message":"1023","line":21,"column":24,"nodeType":"955","messageId":"956","endLine":21,"endColumn":37},{"ruleId":"953","severity":1,"message":"1024","line":26,"column":11,"nodeType":"955","messageId":"956","endLine":26,"endColumn":22},{"ruleId":"953","severity":1,"message":"1025","line":107,"column":11,"nodeType":"955","messageId":"956","endLine":107,"endColumn":18},{"ruleId":"953","severity":1,"message":"1026","line":200,"column":11,"nodeType":"955","messageId":"956","endLine":200,"endColumn":27},{"ruleId":"953","severity":1,"message":"1002","line":1,"column":16,"nodeType":"955","messageId":"956","endLine":1,"endColumn":25},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"1018","severity":1,"message":"1019","line":120,"column":21,"nodeType":"955","messageId":"1020","endLine":120,"endColumn":25},{"ruleId":"953","severity":1,"message":"1021","line":130,"column":11,"nodeType":"955","messageId":"956","endLine":130,"endColumn":15},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"953","severity":1,"message":"1016","line":12,"column":12,"nodeType":"955","messageId":"956","endLine":12,"endColumn":18},{"ruleId":"953","severity":1,"message":"1017","line":12,"column":20,"nodeType":"955","messageId":"956","endLine":12,"endColumn":29},{"ruleId":"953","severity":1,"message":"1027","line":20,"column":23,"nodeType":"955","messageId":"956","endLine":20,"endColumn":35},{"ruleId":"953","severity":1,"message":"1024","line":27,"column":11,"nodeType":"955","messageId":"956","endLine":27,"endColumn":22},{"ruleId":"953","severity":1,"message":"1028","line":66,"column":11,"nodeType":"955","messageId":"956","endLine":66,"endColumn":20},{"ruleId":"953","severity":1,"message":"1029","line":5,"column":10,"nodeType":"955","messageId":"956","endLine":5,"endColumn":18},{"ruleId":"953","severity":1,"message":"1030","line":6,"column":10,"nodeType":"955","messageId":"956","endLine":6,"endColumn":18},{"ruleId":"953","severity":1,"message":"1031","line":40,"column":12,"nodeType":"955","messageId":"956","endLine":40,"endColumn":19},{"ruleId":"953","severity":1,"message":"1032","line":40,"column":21,"nodeType":"955","messageId":"956","endLine":40,"endColumn":31},{"ruleId":"953","severity":1,"message":"1033","line":94,"column":19,"nodeType":"955","messageId":"956","endLine":94,"endColumn":28},{"ruleId":"1018","severity":1,"message":"1034","line":147,"column":17,"nodeType":"955","messageId":"1020","endLine":147,"endColumn":21},{"ruleId":"1018","severity":1,"message":"1034","line":148,"column":17,"nodeType":"955","messageId":"1020","endLine":148,"endColumn":21},{"ruleId":"1018","severity":1,"message":"1034","line":149,"column":17,"nodeType":"955","messageId":"1020","endLine":149,"endColumn":21},{"ruleId":"1018","severity":1,"message":"1035","line":152,"column":17,"nodeType":"955","messageId":"1020","endLine":152,"endColumn":22},{"ruleId":"1018","severity":1,"message":"1035","line":153,"column":17,"nodeType":"955","messageId":"1020","endLine":153,"endColumn":22},{"ruleId":"1018","severity":1,"message":"1035","line":154,"column":17,"nodeType":"955","messageId":"1020","endLine":154,"endColumn":22},{"ruleId":"1018","severity":1,"message":"1035","line":155,"column":17,"nodeType":"955","messageId":"1020","endLine":155,"endColumn":22},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"953","severity":1,"message":"1016","line":13,"column":12,"nodeType":"955","messageId":"956","endLine":13,"endColumn":18},{"ruleId":"953","severity":1,"message":"1017","line":13,"column":20,"nodeType":"955","messageId":"956","endLine":13,"endColumn":29},{"ruleId":"953","severity":1,"message":"1022","line":21,"column":12,"nodeType":"955","messageId":"956","endLine":21,"endColumn":22},{"ruleId":"953","severity":1,"message":"1023","line":21,"column":24,"nodeType":"955","messageId":"956","endLine":21,"endColumn":37},{"ruleId":"953","severity":1,"message":"1024","line":26,"column":11,"nodeType":"955","messageId":"956","endLine":26,"endColumn":22},{"ruleId":"953","severity":1,"message":"1025","line":107,"column":11,"nodeType":"955","messageId":"956","endLine":107,"endColumn":18},{"ruleId":"953","severity":1,"message":"1036","line":206,"column":11,"nodeType":"955","messageId":"956","endLine":206,"endColumn":21},{"ruleId":"953","severity":1,"message":"1026","line":224,"column":11,"nodeType":"955","messageId":"956","endLine":224,"endColumn":27},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"953","severity":1,"message":"1016","line":13,"column":12,"nodeType":"955","messageId":"956","endLine":13,"endColumn":18},{"ruleId":"953","severity":1,"message":"1017","line":13,"column":20,"nodeType":"955","messageId":"956","endLine":13,"endColumn":29},{"ruleId":"953","severity":1,"message":"1022","line":21,"column":12,"nodeType":"955","messageId":"956","endLine":21,"endColumn":22},{"ruleId":"953","severity":1,"message":"1023","line":21,"column":24,"nodeType":"955","messageId":"956","endLine":21,"endColumn":37},{"ruleId":"953","severity":1,"message":"1024","line":26,"column":11,"nodeType":"955","messageId":"956","endLine":26,"endColumn":22},{"ruleId":"953","severity":1,"message":"1025","line":134,"column":11,"nodeType":"955","messageId":"956","endLine":134,"endColumn":18},{"ruleId":"953","severity":1,"message":"1026","line":227,"column":11,"nodeType":"955","messageId":"956","endLine":227,"endColumn":27},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"953","severity":1,"message":"1016","line":12,"column":12,"nodeType":"955","messageId":"956","endLine":12,"endColumn":18},{"ruleId":"953","severity":1,"message":"1017","line":12,"column":20,"nodeType":"955","messageId":"956","endLine":12,"endColumn":29},{"ruleId":"953","severity":1,"message":"1037","line":13,"column":12,"nodeType":"955","messageId":"956","endLine":13,"endColumn":20},{"ruleId":"953","severity":1,"message":"1038","line":13,"column":22,"nodeType":"955","messageId":"956","endLine":13,"endColumn":33},{"ruleId":"1039","severity":1,"message":"1040","line":31,"column":8,"nodeType":"1041","endLine":31,"endColumn":10,"suggestions":"1042"},{"ruleId":"953","severity":1,"message":"1036","line":230,"column":11,"nodeType":"955","messageId":"956","endLine":230,"endColumn":21},{"ruleId":"953","severity":1,"message":"1043","line":240,"column":11,"nodeType":"955","messageId":"956","endLine":240,"endColumn":16},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"1018","severity":1,"message":"1019","line":142,"column":21,"nodeType":"955","messageId":"1020","endLine":142,"endColumn":25},{"ruleId":"953","severity":1,"message":"1021","line":158,"column":11,"nodeType":"955","messageId":"956","endLine":158,"endColumn":15},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"953","severity":1,"message":"1016","line":12,"column":12,"nodeType":"955","messageId":"956","endLine":12,"endColumn":18},{"ruleId":"953","severity":1,"message":"1017","line":12,"column":20,"nodeType":"955","messageId":"956","endLine":12,"endColumn":29},{"ruleId":"953","severity":1,"message":"1036","line":207,"column":11,"nodeType":"955","messageId":"956","endLine":207,"endColumn":21},{"ruleId":"953","severity":1,"message":"1044","line":3,"column":21,"nodeType":"955","messageId":"956","endLine":3,"endColumn":32},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"953","severity":1,"message":"1016","line":13,"column":12,"nodeType":"955","messageId":"956","endLine":13,"endColumn":18},{"ruleId":"953","severity":1,"message":"1017","line":13,"column":20,"nodeType":"955","messageId":"956","endLine":13,"endColumn":29},{"ruleId":"953","severity":1,"message":"1037","line":17,"column":12,"nodeType":"955","messageId":"956","endLine":17,"endColumn":20},{"ruleId":"953","severity":1,"message":"1043","line":102,"column":11,"nodeType":"955","messageId":"956","endLine":102,"endColumn":16},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"953","severity":1,"message":"1016","line":13,"column":12,"nodeType":"955","messageId":"956","endLine":13,"endColumn":18},{"ruleId":"953","severity":1,"message":"1017","line":13,"column":20,"nodeType":"955","messageId":"956","endLine":13,"endColumn":29},{"ruleId":"953","severity":1,"message":"1045","line":14,"column":12,"nodeType":"955","messageId":"956","endLine":14,"endColumn":20},{"ruleId":"953","severity":1,"message":"1046","line":15,"column":12,"nodeType":"955","messageId":"956","endLine":15,"endColumn":18},{"ruleId":"953","severity":1,"message":"1037","line":17,"column":12,"nodeType":"955","messageId":"956","endLine":17,"endColumn":20},{"ruleId":"953","severity":1,"message":"1047","line":80,"column":11,"nodeType":"955","messageId":"956","endLine":80,"endColumn":15},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"953","severity":1,"message":"1016","line":11,"column":12,"nodeType":"955","messageId":"956","endLine":11,"endColumn":18},{"ruleId":"953","severity":1,"message":"1017","line":11,"column":20,"nodeType":"955","messageId":"956","endLine":11,"endColumn":29},{"ruleId":"953","severity":1,"message":"1045","line":12,"column":12,"nodeType":"955","messageId":"956","endLine":12,"endColumn":20},{"ruleId":"953","severity":1,"message":"1046","line":13,"column":12,"nodeType":"955","messageId":"956","endLine":13,"endColumn":18},{"ruleId":"953","severity":1,"message":"1037","line":15,"column":12,"nodeType":"955","messageId":"956","endLine":15,"endColumn":20},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"953","severity":1,"message":"1016","line":12,"column":12,"nodeType":"955","messageId":"956","endLine":12,"endColumn":18},{"ruleId":"953","severity":1,"message":"1017","line":12,"column":20,"nodeType":"955","messageId":"956","endLine":12,"endColumn":29},{"ruleId":"953","severity":1,"message":"1027","line":20,"column":23,"nodeType":"955","messageId":"956","endLine":20,"endColumn":35},{"ruleId":"953","severity":1,"message":"1024","line":24,"column":11,"nodeType":"955","messageId":"956","endLine":24,"endColumn":22},{"ruleId":"953","severity":1,"message":"1028","line":62,"column":11,"nodeType":"955","messageId":"956","endLine":62,"endColumn":20},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"953","severity":1,"message":"1016","line":11,"column":12,"nodeType":"955","messageId":"956","endLine":11,"endColumn":18},{"ruleId":"953","severity":1,"message":"1017","line":11,"column":20,"nodeType":"955","messageId":"956","endLine":11,"endColumn":29},{"ruleId":"953","severity":1,"message":"1037","line":15,"column":12,"nodeType":"955","messageId":"956","endLine":15,"endColumn":20},{"ruleId":"953","severity":1,"message":"1043","line":147,"column":11,"nodeType":"955","messageId":"956","endLine":147,"endColumn":16},{"ruleId":"953","severity":1,"message":"1048","line":148,"column":15,"nodeType":"955","messageId":"956","endLine":148,"endColumn":21},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"953","severity":1,"message":"1016","line":12,"column":12,"nodeType":"955","messageId":"956","endLine":12,"endColumn":18},{"ruleId":"953","severity":1,"message":"1017","line":12,"column":20,"nodeType":"955","messageId":"956","endLine":12,"endColumn":29},{"ruleId":"953","severity":1,"message":"1022","line":20,"column":12,"nodeType":"955","messageId":"956","endLine":20,"endColumn":22},{"ruleId":"953","severity":1,"message":"1023","line":20,"column":24,"nodeType":"955","messageId":"956","endLine":20,"endColumn":37},{"ruleId":"953","severity":1,"message":"1024","line":25,"column":11,"nodeType":"955","messageId":"956","endLine":25,"endColumn":22},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"953","severity":1,"message":"1016","line":12,"column":12,"nodeType":"955","messageId":"956","endLine":12,"endColumn":18},{"ruleId":"953","severity":1,"message":"1017","line":12,"column":20,"nodeType":"955","messageId":"956","endLine":12,"endColumn":29},{"ruleId":"953","severity":1,"message":"1037","line":13,"column":12,"nodeType":"955","messageId":"956","endLine":13,"endColumn":20},{"ruleId":"953","severity":1,"message":"1038","line":13,"column":22,"nodeType":"955","messageId":"956","endLine":13,"endColumn":33},{"ruleId":"953","severity":1,"message":"1049","line":18,"column":12,"nodeType":"955","messageId":"956","endLine":18,"endColumn":23},{"ruleId":"953","severity":1,"message":"1022","line":20,"column":12,"nodeType":"955","messageId":"956","endLine":20,"endColumn":22},{"ruleId":"953","severity":1,"message":"1023","line":20,"column":24,"nodeType":"955","messageId":"956","endLine":20,"endColumn":37},{"ruleId":"953","severity":1,"message":"1024","line":25,"column":11,"nodeType":"955","messageId":"956","endLine":25,"endColumn":22},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"953","severity":1,"message":"1016","line":12,"column":12,"nodeType":"955","messageId":"956","endLine":12,"endColumn":18},{"ruleId":"953","severity":1,"message":"1017","line":12,"column":20,"nodeType":"955","messageId":"956","endLine":12,"endColumn":29},{"ruleId":"953","severity":1,"message":"1022","line":20,"column":12,"nodeType":"955","messageId":"956","endLine":20,"endColumn":22},{"ruleId":"953","severity":1,"message":"1023","line":20,"column":24,"nodeType":"955","messageId":"956","endLine":20,"endColumn":37},{"ruleId":"953","severity":1,"message":"1024","line":25,"column":11,"nodeType":"955","messageId":"956","endLine":25,"endColumn":22},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"953","severity":1,"message":"1016","line":12,"column":12,"nodeType":"955","messageId":"956","endLine":12,"endColumn":18},{"ruleId":"953","severity":1,"message":"1017","line":12,"column":20,"nodeType":"955","messageId":"956","endLine":12,"endColumn":29},{"ruleId":"953","severity":1,"message":"1037","line":13,"column":12,"nodeType":"955","messageId":"956","endLine":13,"endColumn":20},{"ruleId":"953","severity":1,"message":"1038","line":13,"column":22,"nodeType":"955","messageId":"956","endLine":13,"endColumn":33},{"ruleId":"953","severity":1,"message":"1049","line":18,"column":12,"nodeType":"955","messageId":"956","endLine":18,"endColumn":23},{"ruleId":"953","severity":1,"message":"1022","line":20,"column":12,"nodeType":"955","messageId":"956","endLine":20,"endColumn":22},{"ruleId":"953","severity":1,"message":"1023","line":20,"column":24,"nodeType":"955","messageId":"956","endLine":20,"endColumn":37},{"ruleId":"953","severity":1,"message":"1024","line":28,"column":11,"nodeType":"955","messageId":"956","endLine":28,"endColumn":22},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"953","severity":1,"message":"1016","line":12,"column":12,"nodeType":"955","messageId":"956","endLine":12,"endColumn":18},{"ruleId":"953","severity":1,"message":"1017","line":12,"column":20,"nodeType":"955","messageId":"956","endLine":12,"endColumn":29},{"ruleId":"953","severity":1,"message":"1022","line":20,"column":12,"nodeType":"955","messageId":"956","endLine":20,"endColumn":22},{"ruleId":"953","severity":1,"message":"1023","line":20,"column":24,"nodeType":"955","messageId":"956","endLine":20,"endColumn":37},{"ruleId":"953","severity":1,"message":"1024","line":27,"column":11,"nodeType":"955","messageId":"956","endLine":27,"endColumn":22},{"ruleId":"953","severity":1,"message":"1036","line":194,"column":11,"nodeType":"955","messageId":"956","endLine":194,"endColumn":21},{"ruleId":"953","severity":1,"message":"1050","line":6,"column":8,"nodeType":"955","messageId":"956","endLine":6,"endColumn":10},{"ruleId":"953","severity":1,"message":"1051","line":7,"column":8,"nodeType":"955","messageId":"956","endLine":7,"endColumn":10},{"ruleId":"953","severity":1,"message":"1052","line":8,"column":8,"nodeType":"955","messageId":"956","endLine":8,"endColumn":10},{"ruleId":"953","severity":1,"message":"1053","line":9,"column":8,"nodeType":"955","messageId":"956","endLine":9,"endColumn":10},{"ruleId":"953","severity":1,"message":"1054","line":10,"column":8,"nodeType":"955","messageId":"956","endLine":10,"endColumn":10},{"ruleId":"953","severity":1,"message":"1055","line":11,"column":8,"nodeType":"955","messageId":"956","endLine":11,"endColumn":10},{"ruleId":"953","severity":1,"message":"1056","line":12,"column":8,"nodeType":"955","messageId":"956","endLine":12,"endColumn":10},{"ruleId":"953","severity":1,"message":"1057","line":13,"column":8,"nodeType":"955","messageId":"956","endLine":13,"endColumn":10},{"ruleId":"953","severity":1,"message":"1058","line":14,"column":8,"nodeType":"955","messageId":"956","endLine":14,"endColumn":10},{"ruleId":"953","severity":1,"message":"1059","line":15,"column":8,"nodeType":"955","messageId":"956","endLine":15,"endColumn":10},{"ruleId":"953","severity":1,"message":"1060","line":16,"column":8,"nodeType":"955","messageId":"956","endLine":16,"endColumn":10},{"ruleId":"953","severity":1,"message":"1061","line":17,"column":8,"nodeType":"955","messageId":"956","endLine":17,"endColumn":10},{"ruleId":"953","severity":1,"message":"1062","line":18,"column":8,"nodeType":"955","messageId":"956","endLine":18,"endColumn":10},{"ruleId":"953","severity":1,"message":"1063","line":19,"column":8,"nodeType":"955","messageId":"956","endLine":19,"endColumn":10},{"ruleId":"953","severity":1,"message":"1064","line":20,"column":8,"nodeType":"955","messageId":"956","endLine":20,"endColumn":10},{"ruleId":"953","severity":1,"message":"1065","line":21,"column":8,"nodeType":"955","messageId":"956","endLine":21,"endColumn":10},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"953","severity":1,"message":"1016","line":12,"column":12,"nodeType":"955","messageId":"956","endLine":12,"endColumn":18},{"ruleId":"953","severity":1,"message":"1017","line":12,"column":20,"nodeType":"955","messageId":"956","endLine":12,"endColumn":29},{"ruleId":"953","severity":1,"message":"1066","line":1,"column":37,"nodeType":"955","messageId":"956","endLine":1,"endColumn":44},{"ruleId":"953","severity":1,"message":"1015","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":25},{"ruleId":"953","severity":1,"message":"1016","line":12,"column":12,"nodeType":"955","messageId":"956","endLine":12,"endColumn":18},{"ruleId":"953","severity":1,"message":"1067","line":195,"column":11,"nodeType":"955","messageId":"956","endLine":195,"endColumn":22},{"ruleId":"953","severity":1,"message":"1043","line":211,"column":11,"nodeType":"955","messageId":"956","endLine":211,"endColumn":16},{"ruleId":"953","severity":1,"message":"1002","line":1,"column":17,"nodeType":"955","messageId":"956","endLine":1,"endColumn":26},{"ruleId":"953","severity":1,"message":"1068","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":23},{"ruleId":"1018","severity":1,"message":"1019","line":56,"column":21,"nodeType":"955","messageId":"1020","endLine":56,"endColumn":25},{"ruleId":"953","severity":1,"message":"1021","line":64,"column":11,"nodeType":"955","messageId":"956","endLine":64,"endColumn":15},{"ruleId":"953","severity":1,"message":"1069","line":2,"column":8,"nodeType":"955","messageId":"956","endLine":2,"endColumn":14},{"ruleId":"953","severity":1,"message":"1070","line":1,"column":38,"nodeType":"955","messageId":"956","endLine":1,"endColumn":44},{"ruleId":"953","severity":1,"message":"1066","line":1,"column":58,"nodeType":"955","messageId":"956","endLine":1,"endColumn":65},{"ruleId":"953","severity":1,"message":"1071","line":1,"column":67,"nodeType":"955","messageId":"956","endLine":1,"endColumn":78},{"ruleId":"953","severity":1,"message":"1004","line":2,"column":49,"nodeType":"955","messageId":"956","endLine":2,"endColumn":60},{"ruleId":"953","severity":1,"message":"1072","line":2,"column":85,"nodeType":"955","messageId":"956","endLine":2,"endColumn":97},{"ruleId":"953","severity":1,"message":"1073","line":54,"column":24,"nodeType":"955","messageId":"956","endLine":54,"endColumn":36},{"ruleId":"953","severity":1,"message":"1074","line":55,"column":11,"nodeType":"955","messageId":"956","endLine":55,"endColumn":17},{"ruleId":"953","severity":1,"message":"1075","line":59,"column":12,"nodeType":"955","messageId":"956","endLine":59,"endColumn":18},{"ruleId":"953","severity":1,"message":"1076","line":62,"column":12,"nodeType":"955","messageId":"956","endLine":62,"endColumn":21},{"ruleId":"953","severity":1,"message":"1077","line":62,"column":23,"nodeType":"955","messageId":"956","endLine":62,"endColumn":35},{"ruleId":"1039","severity":1,"message":"1078","line":81,"column":12,"nodeType":"1041","endLine":81,"endColumn":14,"suggestions":"1079"},{"ruleId":"953","severity":1,"message":"1002","line":1,"column":17,"nodeType":"955","messageId":"956","endLine":1,"endColumn":26},{"ruleId":"953","severity":1,"message":"1029","line":5,"column":10,"nodeType":"955","messageId":"956","endLine":5,"endColumn":18},{"ruleId":"953","severity":1,"message":"1080","line":30,"column":11,"nodeType":"955","messageId":"956","endLine":30,"endColumn":20},{"ruleId":"953","severity":1,"message":"1033","line":64,"column":19,"nodeType":"955","messageId":"956","endLine":64,"endColumn":28},{"ruleId":"1018","severity":1,"message":"1019","line":76,"column":21,"nodeType":"955","messageId":"1020","endLine":76,"endColumn":25},{"ruleId":"953","severity":1,"message":"1021","line":84,"column":11,"nodeType":"955","messageId":"956","endLine":84,"endColumn":15},{"ruleId":"953","severity":1,"message":"1081","line":3,"column":9,"nodeType":"955","messageId":"956","endLine":3,"endColumn":19},{"ruleId":"953","severity":1,"message":"1081","line":3,"column":9,"nodeType":"955","messageId":"956","endLine":3,"endColumn":19},{"ruleId":"953","severity":1,"message":"1081","line":3,"column":9,"nodeType":"955","messageId":"956","endLine":3,"endColumn":19},{"ruleId":"953","severity":1,"message":"1082","line":5,"column":10,"nodeType":"955","messageId":"956","endLine":5,"endColumn":27},{"ruleId":"953","severity":1,"message":"1083","line":13,"column":11,"nodeType":"955","messageId":"956","endLine":13,"endColumn":16},{"ruleId":"953","severity":1,"message":"1084","line":40,"column":11,"nodeType":"955","messageId":"956","endLine":40,"endColumn":21},{"ruleId":"953","severity":1,"message":"1085","line":69,"column":11,"nodeType":"955","messageId":"956","endLine":69,"endColumn":18},{"ruleId":"967","severity":1,"message":"1086","line":105,"column":9,"nodeType":"969","messageId":"1087","endLine":123,"endColumn":13},{"ruleId":"953","severity":1,"message":"1088","line":6,"column":11,"nodeType":"955","messageId":"956","endLine":6,"endColumn":17},{"ruleId":"953","severity":1,"message":"1089","line":6,"column":19,"nodeType":"955","messageId":"956","endLine":6,"endColumn":28},{"ruleId":"953","severity":1,"message":"1090","line":3,"column":13,"nodeType":"955","messageId":"956","endLine":3,"endColumn":14},{"ruleId":"953","severity":1,"message":"1091","line":6,"column":10,"nodeType":"955","messageId":"956","endLine":6,"endColumn":16},{"ruleId":"953","severity":1,"message":"1092","line":7,"column":10,"nodeType":"955","messageId":"956","endLine":7,"endColumn":24},{"ruleId":"953","severity":1,"message":"1093","line":16,"column":11,"nodeType":"955","messageId":"956","endLine":16,"endColumn":27},{"ruleId":"953","severity":1,"message":"1094","line":26,"column":12,"nodeType":"955","messageId":"956","endLine":26,"endColumn":19},{"ruleId":"953","severity":1,"message":"1095","line":34,"column":11,"nodeType":"955","messageId":"956","endLine":34,"endColumn":23},{"ruleId":"953","severity":1,"message":"1096","line":39,"column":11,"nodeType":"955","messageId":"956","endLine":39,"endColumn":17},{"ruleId":"953","severity":1,"message":"1097","line":6,"column":11,"nodeType":"955","messageId":"956","endLine":6,"endColumn":18},{"ruleId":"953","severity":1,"message":"1093","line":16,"column":11,"nodeType":"955","messageId":"956","endLine":16,"endColumn":27},{"ruleId":"953","severity":1,"message":"1098","line":3,"column":10,"nodeType":"955","messageId":"956","endLine":3,"endColumn":20},{"ruleId":"953","severity":1,"message":"1099","line":3,"column":22,"nodeType":"955","messageId":"956","endLine":3,"endColumn":28},{"ruleId":"953","severity":1,"message":"1100","line":3,"column":30,"nodeType":"955","messageId":"956","endLine":3,"endColumn":40},{"ruleId":"953","severity":1,"message":"1101","line":3,"column":42,"nodeType":"955","messageId":"956","endLine":3,"endColumn":50},{"ruleId":"953","severity":1,"message":"1102","line":4,"column":10,"nodeType":"955","messageId":"956","endLine":4,"endColumn":24},{"ruleId":"953","severity":1,"message":"1029","line":6,"column":10,"nodeType":"955","messageId":"956","endLine":6,"endColumn":18},{"ruleId":"953","severity":1,"message":"1030","line":7,"column":10,"nodeType":"955","messageId":"956","endLine":7,"endColumn":18},{"ruleId":"953","severity":1,"message":"1103","line":8,"column":10,"nodeType":"955","messageId":"956","endLine":8,"endColumn":23},{"ruleId":"953","severity":1,"message":"1104","line":9,"column":10,"nodeType":"955","messageId":"956","endLine":9,"endColumn":18},{"ruleId":"953","severity":1,"message":"1105","line":10,"column":10,"nodeType":"955","messageId":"956","endLine":10,"endColumn":30},{"ruleId":"953","severity":1,"message":"1106","line":11,"column":10,"nodeType":"955","messageId":"956","endLine":11,"endColumn":30},{"ruleId":"953","severity":1,"message":"1107","line":24,"column":12,"nodeType":"955","messageId":"956","endLine":24,"endColumn":22},{"ruleId":"953","severity":1,"message":"1108","line":24,"column":24,"nodeType":"955","messageId":"956","endLine":24,"endColumn":37},{"ruleId":"1039","severity":1,"message":"1109","line":47,"column":8,"nodeType":"1041","endLine":47,"endColumn":13,"suggestions":"1110"},{"ruleId":"953","severity":1,"message":"1111","line":24,"column":12,"nodeType":"955","messageId":"956","endLine":24,"endColumn":19},{"ruleId":"953","severity":1,"message":"1112","line":24,"column":21,"nodeType":"955","messageId":"956","endLine":24,"endColumn":31},{"ruleId":"953","severity":1,"message":"1024","line":29,"column":11,"nodeType":"955","messageId":"956","endLine":29,"endColumn":22},"no-native-reassign",["1113"],"no-negated-in-lhs",["1114"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'getSessionCookie' is defined but never used.","'SessionContext' is defined but never used.","'sd' is defined but never used.","'BarraLateralAdmin' is defined but never used.","'BarraSuperior' is defined but never used.","'ContenidoAdmin' is defined but never used.","'setDevices' is assigned a value but never used.","'response' is assigned a value but never used.","'attributes' is assigned a value but never used.","'setAttributes' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'setName' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'enviar' is assigned a value but never used.","'createContext' is defined but never used.","'useContext' is defined but never used.","'trackPromise' is defined but never used.","'Cookies' is defined but never used.","'loading' is assigned a value but never used.","'handleEnviar' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'readCookie' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'value' is assigned a value but never used.","'onChange' is assigned a value but never used.","'s' is defined but never used.","'setTimeZones' is assigned a value but never used.","'BarraInferior' is defined but never used.","'BarraLateral' is defined but never used.","'BsThreeDotsVertical' is defined but never used.","'BsDot' is defined but never used.","'vista' is assigned a value but never used.","'setVista' is assigned a value but never used.","'setSubmenuOp' is assigned a value but never used.","'useEffect' is defined but never used.","'Popup' is defined but never used.","'ZoomControl' is defined but never used.","'useMap' is defined but never used.","'Circle' is defined but never used.","'LayerGroup' is defined but never used.","'sesion' is assigned a value but never used.","'setSesion' is assigned a value but never used.","'Probar' is assigned a value but never used.","'Probarfecha' is assigned a value but never used.","'Icon' is defined but never used.","'Draggable' is defined but never used.","'ri' is defined but never used.","'AiFillCaretDown' is defined but never used.","'device' is assigned a value but never used.","'setDevice' is assigned a value but never used.","no-redeclare","'full' is already defined.","redeclared","'data' is assigned a value but never used.","'reportData' is assigned a value but never used.","'setReportData' is assigned a value but never used.","'ExcelColumn' is assigned a value but never used.","'Address' is assigned a value but never used.","'obtenerUbicacion' is assigned a value but never used.","'setUbicacion' is assigned a value but never used.","'DateToday' is assigned a value but never used.","'SiCircle' is defined but never used.","'FiTarget' is defined but never used.","'boundsC' is assigned a value but never used.","'setBoundsC' is assigned a value but never used.","'resultado' is assigned a value but never used.","'bnds' is already defined.","'bnds2' is already defined.","'TimeFormat' is assigned a value but never used.","'deviceId' is assigned a value but never used.","'setDeviceId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'DevicesAll'. Either include it or remove the dependency array.","ArrayExpression",["1115"],"'Fecha' is assigned a value but never used.","'BiBorderTop' is defined but never used.","'dateFrom' is assigned a value but never used.","'dateTo' is assigned a value but never used.","'Hora' is assigned a value but never used.","'fecha1' is assigned a value but never used.","'errorDevice' is assigned a value but never used.","'en' is defined but never used.","'pt' is defined but never used.","'br' is defined but never used.","'fr' is defined but never used.","'de' is defined but never used.","'it' is defined but never used.","'nl' is defined but never used.","'no' is defined but never used.","'ar' is defined but never used.","'fa' is defined but never used.","'vi' is defined but never used.","'bn' is defined but never used.","'id' is defined but never used.","'th' is defined but never used.","'km' is defined but never used.","'cn' is defined but never used.","'useMemo' is defined but never used.","'FechaActual' is assigned a value but never used.","'AiOutlinePlus' is defined but never used.","'header' is defined but never used.","'useRef' is defined but never used.","'useCallback' is defined but never used.","'useMapEvents' is defined but never used.","'setDrawClick' is assigned a value but never used.","'center' is assigned a value but never used.","'mapPos' is assigned a value but never used.","'typeFence' is assigned a value but never used.","'setTypeFence' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'mapInstance'. Either include it or remove the dependency array.",["1116"],"'GeoCercas' is assigned a value but never used.","'BiBarChart' is defined but never used.","'usePromiseTracker' is defined but never used.","'fecha' is assigned a value but never used.","'mostrarHis' is assigned a value but never used.","'mostrar' is assigned a value but never used.","Block is redundant.","redundantBlock","'alarma' is assigned a value but never used.","'setAlarma' is assigned a value but never used.","'r' is defined but never used.","'FcInfo' is defined but never used.","'AiOutlineClose' is defined but never used.","'LoadingIndicator' is assigned a value but never used.","'reporte' is assigned a value but never used.","'handleToggle' is assigned a value but never used.","'probar' is assigned a value but never used.","'comando' is assigned a value but never used.","'BsBellFill' is defined but never used.","'BsPlus' is defined but never used.","'BsGearFill' is defined but never used.","'BsPencil' is defined but never used.","'IoIosArrowDown' is defined but never used.","'FaDrawPolygon' is defined but never used.","'BsCircle' is defined but never used.","'HiOutlineViewGridAdd' is defined but never used.","'AiOutlineClockCircle' is defined but never used.","'datosTotal' is assigned a value but never used.","'setdatosTotal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Devices'. Either include it or remove the dependency array.",["1117"],"'devName' is assigned a value but never used.","'setDevName' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1118","fix":"1119"},{"desc":"1120","fix":"1121"},{"desc":"1122","fix":"1123"},"Update the dependencies array to be: [DevicesAll]",{"range":"1124","text":"1125"},"Update the dependencies array to be: [mapInstance]",{"range":"1126","text":"1127"},"Update the dependencies array to be: [Devices, ver]",{"range":"1128","text":"1129"},[1292,1294],"[DevicesAll]",[2768,2770],"[mapInstance]",[1797,1802],"[Devices, ver]"]